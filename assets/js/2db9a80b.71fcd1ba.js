"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8566],{35385:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var o=t(85893),a=t(11151);const r={},s="Data Sources",c={id:"ingest/data-sources",title:"Data Sources",description:"You must configure which data sources you want to ingest data from.",source:"@site/docs/ingest/data-sources.md",sourceDirName:"ingest",slug:"/ingest/data-sources",permalink:"/chatbot/ingest/data-sources",draft:!1,unlisted:!1,editUrl:"https://github.com/mongodb/chatbot/tree/main/docs/docs/ingest/data-sources.md",tags:[],version:"current",frontMatter:{},sidebar:"main",previous:{title:"CLI Commands Reference",permalink:"/chatbot/ingest/command-reference"},next:{title:"Optimize Ingestion",permalink:"/chatbot/ingest/optimize"}},i={},d=[{value:"The <code>DataSource</code> Abstraction",id:"the-datasource-abstraction",level:2},{value:"Data Source Helpers",id:"data-source-helpers",level:2},{value:"Ingest with a Langchain <code>DocumentLoader</code>",id:"ingest-with-a-langchain-documentloader",level:3},{value:"Ingest from a Git Repository",id:"ingest-from-a-git-repository",level:3},{value:"Ingest from MongoDB",id:"ingest-from-mongodb",level:3},{value:"Helper Functions",id:"helper-functions",level:2},{value:"Remove Markdown Images and Links",id:"remove-markdown-images-and-links",level:3},{value:"Convert HTML Documents to Markdown",id:"convert-html-documents-to-markdown",level:3},{value:"Optimize Data Ingestion",id:"optimize-data-ingestion",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"data-sources",children:"Data Sources"}),"\n",(0,o.jsx)(n.p,{children:"You must configure which data sources you want to ingest data from."}),"\n",(0,o.jsxs)(n.h2,{id:"the-datasource-abstraction",children:["The ",(0,o.jsx)(n.code,{children:"DataSource"})," Abstraction"]}),"\n",(0,o.jsxs)(n.p,{children:["The MongoDB RAG Ingest CLI includes a flexible abstraction, the ",(0,o.jsx)(n.a,{href:"/chatbot/reference/core/modules/dataSources#datasource",children:(0,o.jsx)(n.code,{children:"DataSource"})}),"\nthat allows you to ingest text data from a variety of sources."]}),"\n",(0,o.jsxs)(n.p,{children:["Every data source must implement the ",(0,o.jsx)(n.code,{children:"DataSource"})," type.\nThese data sources are then included in the ",(0,o.jsx)(n.code,{children:"Config.dataSources"})," property.\nNote that the ",(0,o.jsx)(n.code,{children:"Config.dataSources"})," property is a function that returns an array.\nThis allows you to fetch ",(0,o.jsx)(n.code,{children:"DataSource"})," instances dynamically."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:'export default {\n  // ...rest of config\n  dataSources: async () => [\n    {\n      name: "my-source",\n      fetchPages: async () => {\n        // ...fetch pages\n      },\n    },\n    // ...other data sources\n  ],\n} satisfies Config;\n'})}),"\n",(0,o.jsx)(n.h2,{id:"data-source-helpers",children:"Data Source Helpers"}),"\n",(0,o.jsx)(n.p,{children:"While you have full flexibility to implement your own data sources,\nthe RAG framework provides helpers to make it easier to ingest data from common sources."}),"\n",(0,o.jsxs)(n.h3,{id:"ingest-with-a-langchain-documentloader",children:["Ingest with a Langchain ",(0,o.jsx)(n.code,{children:"DocumentLoader"})]}),"\n",(0,o.jsxs)(n.p,{children:["To ingest any data that you can access with a Langchain.js ",(0,o.jsx)(n.a,{href:"https://js.langchain.com/docs/integrations/document_loaders",children:(0,o.jsx)(n.code,{children:"DocumentLoader"})}),",\nuse the ",(0,o.jsx)(n.a,{href:"/chatbot/reference/core/modules/dataSources#makelangchaindocumentloaderdatasource",children:(0,o.jsx)(n.code,{children:"makeLangchainDocumentLoaderDataSource"})})," function."]}),"\n",(0,o.jsx)(n.p,{children:"Here's an example implementation:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:'import { makeLangChainDocumentLoaderDataSource } from "mongodb-rag-core/dataSources";\nimport { TextLoader } from "langchain/document_loaders/fs/text";\n\n// Langchain document loader\nconst documentLoader = new TextLoader(docPath);\n\nconst documentLoaderDataSource = makeLangChainDocumentLoaderDataSource({\n  documentLoader,\n  name: "some-source",\n  metadata: {\n    foo: "bar",\n  },\n  // This function transforms the Langchain document to a MongoDB Chatbot Framework `Page`\n  transformLangchainDocumentToPage: async (doc) => ({\n    format: "md",\n    url: someFunctionToGetUrlFromDoc(doc),\n    body: doc.pageContent,\n    metadata: {\n      fizz: "buzz",\n    },\n    title: someFunctionToGetTitleFromDoc(doc),\n  }),\n});\n'})}),"\n",(0,o.jsx)(n.h3,{id:"ingest-from-a-git-repository",children:"Ingest from a Git Repository"}),"\n",(0,o.jsxs)(n.p,{children:["To ingest data stored in a Git repository, use the ",(0,o.jsx)(n.a,{href:"/chatbot/reference/core/modules/dataSources#makegitdatasource",children:(0,o.jsx)(n.code,{children:"makeGitDataSource()"})})," function."]}),"\n",(0,o.jsx)(n.p,{children:"Here's an example implementation:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:'import {\n  makeGitDataSource,\n  handleHtmlDocument,\n} from "mongodb-rag-core/dataSources";\n\nexport const javaReactiveStreamsSourceConstructor = async () => {\n  return await makeGitDataSource({\n    name: "java-reactive-streams",\n    repoUri: "https://github.com/mongodb/mongo-java-driver.git",\n    repoOptions: {\n      "--depth": 1,\n      "--branch": "gh-pages",\n    },\n    metadata: {\n      productName: "Java Reactive Streams Driver",\n      version: jvmDriversVersion + " (current)",\n      tags: ["docs", "driver", "java", "java-reactive-streams"],\n    },\n    filter: (path: string) =>\n      path.endsWith(".html") &&\n      path.includes(jvmDriversVersion) &&\n      path.includes("driver-reactive") &&\n      !path.includes("apidocs"),\n    handlePage: async (path, content) =>\n      await handleHtmlDocument(\n        path,\n        content,\n        javaReactiveStreamsHtmlParserOptions\n      ),\n  });\n};\n'})}),"\n",(0,o.jsx)(n.h3,{id:"ingest-from-mongodb",children:"Ingest from MongoDB"}),"\n",(0,o.jsx)(n.p,{children:"We do not currently have a helper for ingesting data from a MongoDB database.\nHowever, we do have a few implementations that you can use as a reference:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/mongodb/chatbot/blob/main/ingest/src/sources/DevCenterDataSource.ts",children:"DevCenterDataSource"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/mongodben/ingest-customers/blob/main/src/data-sources/MongoDbDotComCustomersDataSource.ts",children:"MongoDbDotComCustomersDataSource"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"helper-functions",children:"Helper Functions"}),"\n",(0,o.jsx)(n.p,{children:"We have provided a few utility functions to help with common data ingestion tasks."}),"\n",(0,o.jsx)(n.h3,{id:"remove-markdown-images-and-links",children:"Remove Markdown Images and Links"}),"\n",(0,o.jsxs)(n.p,{children:["Generally, you want to strip out images and links when ingesting data.\nThe MongoDB RAG Ingest package includes the ",(0,o.jsx)(n.a,{href:"/chatbot/reference/core/modules/dataSources#removemarkdownimagesandlinks",children:(0,o.jsx)(n.code,{children:"removeMarkdownImagesAndLinks()"})}),"\nfunction to make this easier for Markdown-formatted text."]}),"\n",(0,o.jsxs)(n.p,{children:["You can import the ",(0,o.jsx)(n.code,{children:"removeMarkdownImagesAndLinks()"})," function from the ",(0,o.jsx)(n.code,{children:"mongodb-rag-ingest"})," package."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:'import { removeMarkdownImagesAndLinks } from "mongodb-rag-core";\n'})}),"\n",(0,o.jsxs)(n.p,{children:["To learn more about why you might want to strip out images and links,\nrefer to the ",(0,o.jsx)(n.a,{href:"/chatbot/ingest/optimize#clean-up-text-as-you-ingest",children:"Clean up Text as You Ingest in the Optimization documentation"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"convert-html-documents-to-markdown",children:"Convert HTML Documents to Markdown"}),"\n",(0,o.jsxs)(n.p,{children:["Generally, you want to convert HTML documents to Markdown when ingesting data.\nThe MongoDB RAG Ingest package includes the ",(0,o.jsx)(n.a,{href:"/chatbot/reference/core/modules/dataSources#handlehtmldocument",children:(0,o.jsx)(n.code,{children:"handleHtmlDocument()"})})," function to make this easier.\nIt helps you remove nodes from an HTML document, like the header and footer,\nbefore converting the document to Markdown."]}),"\n",(0,o.jsxs)(n.p,{children:["You can import the ",(0,o.jsx)(n.code,{children:"handleHtmlDocument()"})," function from the ",(0,o.jsx)(n.code,{children:"mongodb-rag-ingest"})," package."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:'import { handleHtmlDocument } from "mongodb-rag-core/dataSources";\n'})}),"\n",(0,o.jsxs)(n.p,{children:["You can see ",(0,o.jsx)(n.code,{children:"handleHtmlDocument()"})," ",(0,o.jsx)(n.a,{href:"https://github.com/mongodb/chatbot/blob/6ab06a24ae085d0db650bc4883ce1278728e3131/ingest-mongodb-public/src/sources.ts#L258",children:"used in the MongoDB Docs AI Chatbot configuration"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["To learn more about why you might want to convert HTML documents to Markdown,\nrefer to the ",(0,o.jsx)(n.a,{href:"/chatbot/ingest/optimize#standardize-data-formats",children:"Standardize Data Formats in the Optimization documentation"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"optimize-data-ingestion",children:"Optimize Data Ingestion"}),"\n",(0,o.jsxs)(n.p,{children:["For some suggestions on how you can optimize the data that you ingest\nto best serve your chatbot, see the ",(0,o.jsx)(n.a,{href:"/chatbot/ingest/optimize",children:"Optimization documentation"}),"."]})]})}function m(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>s});var o=t(67294);const a={},r=o.createContext(a);function s(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);