"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8753],{68367:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>t,metadata:()=>d,toc:()=>a});var i=r(85893),s=r(11151);const t={id:"AppConfig",title:"Interface: AppConfig",sidebar_label:"AppConfig",sidebar_position:0,custom_edit_url:null},o=void 0,d={id:"reference/server/interfaces/AppConfig",title:"Interface: AppConfig",description:"Configuration for the server Express.js app.",source:"@site/docs/reference/server/interfaces/AppConfig.md",sourceDirName:"reference/server/interfaces",slug:"/reference/server/interfaces/AppConfig",permalink:"/chatbot/reference/server/interfaces/AppConfig",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"AppConfig",title:"Interface: AppConfig",sidebar_label:"AppConfig",sidebar_position:0,custom_edit_url:null},sidebar:"main",previous:{title:"VerifiedAnswers",permalink:"/chatbot/reference/server/namespaces/VerifiedAnswers"},next:{title:"ClassificationType",permalink:"/chatbot/reference/server/interfaces/ClassificationType"}},c={},a=[{value:"Properties",id:"properties",level:2},{value:"apiPrefix",id:"apiprefix",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"conversationsRouterConfig",id:"conversationsrouterconfig",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"corsOptions",id:"corsoptions",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"expressAppConfig",id:"expressappconfig",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Parameters",id:"parameters",level:5},{value:"Returns",id:"returns",level:5},{value:"Defined in",id:"defined-in-3",level:4},{value:"maxRequestTimeoutMs",id:"maxrequesttimeoutms",level:3},{value:"Defined in",id:"defined-in-4",level:4}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Configuration for the server Express.js app."}),"\n",(0,i.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(n.h3,{id:"apiprefix",children:"apiPrefix"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.code,{children:"Optional"})," ",(0,i.jsx)(n.strong,{children:"apiPrefix"}),": ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsxs)(n.p,{children:["Prefix for all API routes. Defaults to ",(0,i.jsx)(n.code,{children:"/api/v1"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/mongodb/chatbot/blob/8086968d/packages/mongodb-chatbot-server/src/app.ts#L45",children:"packages/mongodb-chatbot-server/src/app.ts:45"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"conversationsrouterconfig",children:"conversationsRouterConfig"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"conversationsRouterConfig"}),": ",(0,i.jsx)(n.a,{href:"/chatbot/reference/server/interfaces/ConversationsRouterParams",children:(0,i.jsx)(n.code,{children:"ConversationsRouterParams"})})]}),"\n",(0,i.jsx)(n.p,{children:"Configuration for the conversations router."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/mongodb/chatbot/blob/8086968d/packages/mongodb-chatbot-server/src/app.ts#L29",children:"packages/mongodb-chatbot-server/src/app.ts:29"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"corsoptions",children:"corsOptions"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.code,{children:"Optional"})," ",(0,i.jsx)(n.strong,{children:"corsOptions"}),": ",(0,i.jsx)(n.code,{children:"CorsOptions"})]}),"\n",(0,i.jsx)(n.p,{children:"Configuration for CORS middleware. Defaults to allowing all origins."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/mongodb/chatbot/blob/8086968d/packages/mongodb-chatbot-server/src/app.ts#L40",children:"packages/mongodb-chatbot-server/src/app.ts:40"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"expressappconfig",children:"expressAppConfig"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.code,{children:"Optional"})," ",(0,i.jsx)(n.strong,{children:"expressAppConfig"}),": (",(0,i.jsx)(n.code,{children:"app"}),": ",(0,i.jsx)(n.code,{children:"Express"}),") => ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,i.jsx)(n.h4,{id:"type-declaration",children:"Type declaration"}),"\n",(0,i.jsxs)(n.p,{children:["\u25b8 (",(0,i.jsx)(n.code,{children:"app"}),"): ",(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,i.jsxs)(n.p,{children:["Additional server logic using the server's ",(0,i.jsx)(n.code,{children:"Express"})," app object.\nCan do things like add additional, routes, global middleware, etc.\nRuns immediately after the app is instantiated,\nbefore additional routes and middleware are added."]}),"\n",(0,i.jsx)(n.h5,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"app"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"Express"})})]})})]}),"\n",(0,i.jsx)(n.h5,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Promise"}),"<",(0,i.jsx)(n.code,{children:"void"}),">"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Example"})})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'(app)=> {\n  app.get("/", (req, res) => res.send({ hello: "world" }))\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/mongodb/chatbot/blob/8086968d/packages/mongodb-chatbot-server/src/app.ts#L57",children:"packages/mongodb-chatbot-server/src/app.ts:57"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"maxrequesttimeoutms",children:"maxRequestTimeoutMs"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.code,{children:"Optional"})," ",(0,i.jsx)(n.strong,{children:"maxRequestTimeoutMs"}),": ",(0,i.jsx)(n.code,{children:"number"})]}),"\n",(0,i.jsx)(n.p,{children:"Maximum time in milliseconds for a request to complete before timing out.\nDefaults to 60000 (1 minute)."}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/mongodb/chatbot/blob/8086968d/packages/mongodb-chatbot-server/src/app.ts#L35",children:"packages/mongodb-chatbot-server/src/app.ts:35"})})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>d,a:()=>o});var i=r(67294);const s={},t=i.createContext(s);function o(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);