"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8534],{86690:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var r=t(85893),s=t(11151);const i={},o="Find Frequently Asked Questions",a={id:"server/find-faqs",title:"Find Frequently Asked Questions",description:'You can use the "FAQ Finder" tool to analyze historic messages in your database',source:"@site/docs/server/find-faqs.md",sourceDirName:"server",slug:"/server/find-faqs",permalink:"/chatbot/server/find-faqs",draft:!1,unlisted:!1,editUrl:"https://github.com/mongodb/chatbot/tree/main/docs/docs/server/find-faqs.md",tags:[],version:"current",frontMatter:{},sidebar:"main",previous:{title:"Verified Answers",permalink:"/chatbot/server/verified-answers"},next:{title:"Chatbot UI",permalink:"/chatbot/ui"}},c={},d=[{value:"How It Works",id:"how-it-works",level:2},{value:"Use the FAQ Finder",id:"use-the-faq-finder",level:2},{value:"1. Configure Your Environment",id:"1-configure-your-environment",level:3},{value:"2. Run the FAQ Finder",id:"2-run-the-faq-finder",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"find-frequently-asked-questions",children:"Find Frequently Asked Questions"}),"\n",(0,r.jsx)(n.p,{children:'You can use the "FAQ Finder" tool to analyze historic messages in your database\nand find the most common topics that users have chatted about.'}),"\n",(0,r.jsx)(n.p,{children:"You can use these FAQs to:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"understand how users are interacting with your chatbot"}),"\n",(0,r.jsxs)(n.li,{children:["define ",(0,r.jsx)(n.a,{href:"./verified-answers",children:"verified answers"})," for the most common requests"]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:'The framework and this tool refer to these topics as "frequently asked\nquestions", but it can handle any user input even if they\'re not in the form of\na question.'})}),"\n",(0,r.jsx)(n.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,r.jsxs)(n.p,{children:["The FAQ Finder runs a clustering algorithm in your chatbot's vector embedding\nspace. Specifically, it runs ",(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/DBSCAN",children:"DBSCAN"})," on\nthe query embeddings your server generates for each incoming user message."]}),"\n",(0,r.jsx)(n.p,{children:"The tool combines messages into semantically similar groups and then sorts the\ngroups by size (i.e. number of messages in the group). You can then sample or\ngenerate a representative question for the entire group."}),"\n",(0,r.jsx)(n.h2,{id:"use-the-faq-finder",children:"Use the FAQ Finder"}),"\n",(0,r.jsx)(n.h3,{id:"1-configure-your-environment",children:"1. Configure Your Environment"}),"\n",(0,r.jsxs)(n.p,{children:["The FAQ Finder is a script in the ",(0,r.jsx)(n.code,{children:"scripts"})," package of the chatbot framework\nrepo. You need to configure it before you can run it."]}),"\n",(0,r.jsxs)(n.p,{children:["Define a ",(0,r.jsx)(n.code,{children:".env"})," file for the ",(0,r.jsx)(n.code,{children:"scripts"})," package that includes the following\nvalues. Make sure to replace the placeholders with your app's values."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",metastring:'title="/packages/scripts/.env"',children:'# The "from" cluster/database denotes where your chatbot conversation data is stored\nFROM_CONNECTION_URI=<connection_uri>\nFROM_DATABASE_NAME=<database_name>\n# The "to" cluster/database/collection denotes where the FAQ data will be stored\nTO_CONNECTION_URI=<connection_uri>\nTO_DATABASE_NAME=<database_name>\nTO_FAQ_COLLECTION_NAME=<collection_name>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"2-run-the-faq-finder",children:"2. Run the FAQ Finder"}),"\n",(0,r.jsx)(n.p,{children:"Once the tool is configured, you can run it from the command line."}),"\n",(0,r.jsxs)(n.p,{children:["From the ",(0,r.jsx)(n.code,{children:"scripts"})," directory:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"npm run findFaq\n"})}),"\n",(0,r.jsx)(n.p,{children:"Or from the repository root:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"npm run scripts:findFaq\n"})}),"\n",(0,r.jsx)(n.p,{children:'After you run the tool, the "to" collection defined in your configuration\ncontains the FAQ groups.'})]})}function l(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>o});var r=t(67294);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);