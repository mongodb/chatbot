"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7239],{54363:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var o=t(85893),s=t(11151);const r={},i="Quick Start",c={id:"quick-start",title:"Quick Start",description:"This quick start guide walks you through the steps to get started building",source:"@site/docs/quick-start.md",sourceDirName:".",slug:"/quick-start",permalink:"/chatbot/quick-start",draft:!1,unlisted:!1,editUrl:"https://github.com/mongodb/chatbot/tree/main/docs/docs/quick-start.md",tags:[],version:"current",frontMatter:{},sidebar:"main",previous:{title:"Home",permalink:"/chatbot/"},next:{title:"MongoDB & Atlas Vector Search",permalink:"/chatbot/mongodb"}},a={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"What You Will Build",id:"what-you-will-build",level:2},{value:"Steps",id:"steps",level:2},{value:"1. Set up the MongoDB Atlas Database",id:"1-set-up-the-mongodb-atlas-database",level:3},{value:"2. Set up the Project",id:"2-set-up-the-project",level:3},{value:"3. Ingest Content",id:"3-ingest-content",level:3},{value:"4. Query the Chatbot",id:"4-query-the-chatbot",level:3},{value:"5. Explore and Modify the Code",id:"5-explore-and-modify-the-code",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"quick-start",children:"Quick Start"}),"\n",(0,o.jsx)(n.p,{children:"This quick start guide walks you through the steps to get started building\na retrieval augmented generation (RAG) application with the MongoDB Chatbot Framework."}),"\n",(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://nodejs.org/en/",children:"Node.js"})," v18 or later on your development machine."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://www.mongodb.com/cloud/atlas",children:"MongoDB Atlas"})," account.","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"If you don't already have an account, you can create one for free."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://platform.openai.com/docs/quickstart?context=node",children:"OpenAI API key"}),".","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Get the API key from OpenAI, and keep it handy. You'll need it later."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"what-you-will-build",children:"What You Will Build"}),"\n",(0,o.jsx)(n.p,{children:"In this guide, you will build a chatbot that answers questions about\nthe MongoDB Chatbot Framework using RAG.\nYou can extend what you set up in the quick start template\nto build your own chatbot with the MongoDB Chatbot Framework."}),"\n",(0,o.jsx)(n.p,{children:"To build the chatbot, you will:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Set up the MongoDB Atlas Database with Atlas Vector Search"}),"\n",(0,o.jsx)(n.li,{children:"Set up the project source code"}),"\n",(0,o.jsx)(n.li,{children:"Ingest the content that the chatbot uses to answer questions"}),"\n",(0,o.jsx)(n.li,{children:"Spin up a server and frontend to query the chatbot"}),"\n",(0,o.jsx)(n.li,{children:"Look at next steps that you can take to customize the chatbot"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"steps",children:"Steps"}),"\n",(0,o.jsx)(n.h3,{id:"1-set-up-the-mongodb-atlas-database",children:"1. Set up the MongoDB Atlas Database"}),"\n",(0,o.jsxs)(n.p,{children:["Log into ",(0,o.jsx)(n.a,{href:"https://cloud.mongodb.com/",children:"MongoDB Atlas"})," and create a new project. Create a new cluster in the project.\nYou can use the free tier cluster (M0). You ",(0,o.jsx)(n.strong,{children:"cannot"})," use a serverless cluster."]}),"\n",(0,o.jsx)(n.p,{children:"Once the cluster is created, copy the connection string to use in your project.\nYou can find the connection string in the Atlas UI as follows:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Press the ",(0,o.jsx)(n.strong,{children:"Connect"})," button."]}),"\n",(0,o.jsxs)(n.li,{children:["Press the ",(0,o.jsx)(n.strong,{children:"Drivers"})," button."]}),"\n",(0,o.jsxs)(n.li,{children:["Copy the connection string and store it in a safe place.\nYou will need it soon. If you haven't created a user yet, you can create one now.","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["If you need help creating a user, refer to ",(0,o.jsx)(n.a,{href:"https://www.mongodb.com/docs/atlas/security-add-mongodb-users/",children:"Configure Database Users"})," in the MongoDB Atlas documentation."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Next, create the database ",(0,o.jsx)(n.code,{children:"mongodb-chatbot-framework-chatbot"})," with a collection\n",(0,o.jsx)(n.code,{children:"embedded_content"}),". You can leave the collection empty for now.\nIn the Atlas UI, go to your cluster's overview page, and perform the following:"]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Go to the ",(0,o.jsx)(n.strong,{children:"Collections"})," tab."]}),"\n",(0,o.jsxs)(n.li,{children:["Press the ",(0,o.jsx)(n.strong,{children:"Create Database"})," button."]}),"\n",(0,o.jsxs)(n.li,{children:["In the modal window, add the database name ",(0,o.jsx)(n.code,{children:"mongodb-chatbot-framework-chatbot"}),"\nand collection name ",(0,o.jsx)(n.code,{children:"embedded_content"}),". Then press ",(0,o.jsx)(n.strong,{children:"Create"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Once the database and collection are created, create an Atlas Vector Search index\non the ",(0,o.jsx)(n.code,{children:"embedded_content"})," collection. This collection will store vector embeddings of ingested content. In the Atlas UI, do the following:"]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Go to the ",(0,o.jsx)(n.strong,{children:"Atlas Search"})," tab."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Press the ",(0,o.jsx)(n.strong,{children:"Create Search Index"})," button."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Select the ",(0,o.jsx)(n.strong,{children:"Atlas Vector Search JSON Index"})," option, then press the ",(0,o.jsx)(n.strong,{children:"Next"})," button."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["In the ",(0,o.jsx)(n.strong,{children:"Database and Collection"})," section, select the\n",(0,o.jsx)(n.code,{children:"mongodb-chatbot-framework-chatbot"})," database and ",(0,o.jsx)(n.code,{children:"embedded_content"})," collection."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["In the ",(0,o.jsx)(n.strong,{children:"Index Name"})," field, leave the default ",(0,o.jsx)(n.code,{children:"vector_index"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"In the index definition field, paste the following index definition:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'{\n  "fields": [\n    {\n      "numDimensions": 1536,\n      "path": "embedding",\n      "similarity": "cosine",\n      "type": "vector"\n    }\n  ]\n}\n'})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Press the ",(0,o.jsx)(n.strong,{children:"Next"})," button, then on the next page press the ",(0,o.jsx)(n.strong,{children:"Create Search Index"})," button."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Wait for the index to be created. This should happen in under a minute.\nWhen the index is successfully created, you should see that the status is ",(0,o.jsx)(n.strong,{children:"Active"}),"."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Now the Atlas cluster and Vector Search index are ready to use in your app."}),"\n",(0,o.jsxs)(n.p,{children:["For more information on setting up MongoDB for the Chatbot Framework,\nrefer to the ",(0,o.jsx)(n.a,{href:"/chatbot/mongodb",children:"MongoDB & Atlas Vector Search"})," guide."]}),"\n",(0,o.jsx)(n.h3,{id:"2-set-up-the-project",children:"2. Set up the Project"}),"\n",(0,o.jsx)(n.p,{children:"Clone the repository with the quick start source code:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"git clone https://github.com/mongodb/chatbot.git\n"})}),"\n",(0,o.jsx)(n.p,{children:"Enter the directory with the quick start source code:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"cd examples/quick-start\n"})}),"\n",(0,o.jsxs)(n.p,{children:["All the remaining steps will be run from ",(0,o.jsx)(n.code,{children:"examples/quick-start"})," directory."]}),"\n",(0,o.jsxs)(n.p,{children:["This directory contains three packages, located in the ",(0,o.jsx)(n.code,{children:"examples/quick-start/packages"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"ingest"}),": Contains implementation of the MongoDB Ingest CLI, which ingests the content that the chatbot uses to answer questions."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"server"}),": Contains implementation of the MongoDB Chatbot Server, which serves the chatbot API."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"ui"}),": Contains implementation of the MongoDB Chatbot UI, which provides a UI to query the chatbot server."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Install the dependencies for all the packages:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"npm install\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["The quick start uses ",(0,o.jsx)(n.a,{href:"https://docs.npmjs.com/cli/v8/using-npm/workspaces",children:"npm workspaces"}),"\nto manage the dependencies for all the packages."]})}),"\n",(0,o.jsxs)(n.p,{children:["Create an ",(0,o.jsx)(n.code,{children:".env"})," file based on the .env.example file in the root of the project:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"cp .env.example .env\n"})}),"\n",(0,o.jsxs)(n.p,{children:["In the ",(0,o.jsx)(n.code,{children:".env"})," file, fill in the values for ",(0,o.jsx)(n.code,{children:"MONGODB_CONNECTION_URI"})," and ",(0,o.jsx)(n.code,{children:"OPENAI_API_KEY"}),"\nwith your Atlas connection URI and OpenAI API Key, respectively."]}),"\n",(0,o.jsx)(n.h3,{id:"3-ingest-content",children:"3. Ingest Content"}),"\n",(0,o.jsxs)(n.p,{children:["In this step, you will ingest the content that the chatbot uses to answer questions\ninto the ",(0,o.jsx)(n.code,{children:"embedded_content"})," collection indexed with Atlas Vector Search."]}),"\n",(0,o.jsx)(n.p,{children:"From the root of the project, run:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"npm run ingest:all\n"})}),"\n",(0,o.jsx)(n.p,{children:"If you've run the command successfully, you should an output resembling the following\nin your terminal:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:'{"level":"info","message":"Logger created"}\n{"level":"info","message":"Last successful run date: Thu Jan 04 2024 12:23:27 GMT-0500 (Eastern Standard Time)"}\n{"level":"info","message":"Loaded sources:\\n- mongodb-rag-framework"}\n{"level":"info","message":"Fetching pages for mongodb-rag-framework"}\n{"level":"info","message":"Created /var/folders/v3/128h981j6vx4ncq_68qcg2cm0000gp/T/mongodb-rag-frameworkV3BE8d for https://github.com/mongodb/chatbot/"}\n# ...\n{"level":"info","message":"Updating last successful run date"}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["To learn more about how you can configure the MongoDB Ingest CLI,\nrefer to the ",(0,o.jsx)(n.a,{href:"/chatbot/ingest/configure",children:"Configure the Ingest CLI"})," guide."]}),"\n",(0,o.jsx)(n.h3,{id:"4-query-the-chatbot",children:"4. Query the Chatbot"}),"\n",(0,o.jsx)(n.p,{children:"In this step, you will spin up a server and frontend to query the chatbot.\nYou'll be able to ask questions about the MongoDB Chatbot Framework\nusing the data you ingested in the previous step."}),"\n",(0,o.jsx)(n.p,{children:"Start the chatbot server and UI with:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"npm run dev\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Open ",(0,o.jsx)(n.a,{href:"http://localhost:5173/",children:"http://localhost:5173/"})," in your browser to see the UI.\nYou can ask the chatbot questions and see the responses."]}),"\n",(0,o.jsx)(n.p,{children:"Have fun!"}),"\n",(0,o.jsx)(n.p,{children:"You can also query the server directly with curl. To create a new conversation:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"curl -X POST http://localhost:3000/api/v1/conversations/\n"})}),"\n",(0,o.jsxs)(n.p,{children:["This creates a new conversation with an ",(0,o.jsx)(n.code,{children:"_id"})," field. You can append messages to the conversation with:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"curl --location 'http://localhost:3000/api/v1/conversations/{conversationId}/messages?stream=false' \\\n--header 'Origin: http://localhost:5173' \\\n--header 'Content-Type: application/json' \\\n--data '{\n    \"message\": \"What is MongoDB?\"\n}'\n"})}),"\n",(0,o.jsxs)(n.p,{children:["To learn more about how you can configure the MongoDB Chatbot Server,\nrefer to the ",(0,o.jsx)(n.a,{href:"/chatbot/server/configure",children:"Configure the Chatbot Server"})," guide."]}),"\n",(0,o.jsxs)(n.p,{children:["To learn more about how you can configure the MongoDB Chatbot UI,\nrefer to the ",(0,o.jsx)(n.a,{href:"/chatbot/ui",children:"Chatbot UI"})," guide."]}),"\n",(0,o.jsx)(n.h3,{id:"5-explore-and-modify-the-code",children:"5. Explore and Modify the Code"}),"\n",(0,o.jsx)(n.p,{children:"Now that you've set up the quick start project, you can explore and modify the code\nto customize the chatbot to your needs."}),"\n",(0,o.jsx)(n.p,{children:"Some things you can do to customize the chatbot:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Modify data ingestion in the ",(0,o.jsx)(n.code,{children:"ingest"})," project.","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["You can add your own data sources to ingest content from.\nTo learn more about how you can add new data sources, refer to the ",(0,o.jsx)(n.a,{href:"/chatbot/ingest/data-sources",children:"Add a Data Source"})," guide."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["Modify the chatbot server in the ",(0,o.jsx)(n.code,{children:"server"})," project.","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Update the system prompt and user message. To learn more, refer to the ",(0,o.jsx)(n.a,{href:"/chatbot/server/llm#prompt-engineering",children:"Prompt Engineering"})," guide."]}),"\n",(0,o.jsxs)(n.li,{children:["Pre-process user messages before they are sent to the chatbot.\nTo learn more, refer to the ",(0,o.jsx)(n.a,{href:"/chatbot/server/rag/preprocess",children:"Pre-Process User Queries"})," guide."]}),"\n",(0,o.jsxs)(n.li,{children:["Add custom logic to the chatbot server. To learn more,\nrefer to the ",(0,o.jsx)(n.a,{href:"/chatbot/server/custom-logic",children:"Customize Server Logic"})," guide."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["Modify the chatbot UI in the ",(0,o.jsx)(n.code,{children:"ui"})," project.","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["You can build your frontend on top of this project, or add the React components\nto your own React app. To learn more, refer to the ",(0,o.jsx)(n.a,{href:"/chatbot/ui",children:"Chatbot UI"})," guide."]}),"\n",(0,o.jsxs)(n.li,{children:["Even if you're adding the components to your own project,\nyou might want to keep the ",(0,o.jsx)(n.code,{children:"ui"})," project as is to manually test changes\nyou make to the Chatbot Server."]}),"\n"]}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>i});var o=t(67294);const s={},r=o.createContext(s);function i(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);