"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[721],{92101:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>c});var i=r(85893),s=r(11151);const t={},o="Verified Answers",a={id:"server/verified-answers",title:"Verified Answers",description:"The Chatbot Server can map incoming user queries to a collection of pre-written",source:"@site/docs/server/verified-answers.md",sourceDirName:"server",slug:"/server/verified-answers",permalink:"/chatbot/server/verified-answers",draft:!1,unlisted:!1,editUrl:"https://github.com/mongodb/chatbot/tree/main/docs/docs/server/verified-answers.md",tags:[],version:"current",frontMatter:{},sidebar:"main",previous:{title:"Evaluate Chatbot Responses",permalink:"/chatbot/server/evaluate"},next:{title:"Find Frequently Asked Questions",permalink:"/chatbot/server/find-faqs"}},d={},c=[{value:"How It Works",id:"how-it-works",level:2},{value:"Data Model",id:"data-model",level:2},{value:"Set Up Verified Answers",id:"set-up-verified-answers",level:2},{value:"1. Define Your Verified Answers",id:"1-define-your-verified-answers",level:3},{value:"2. Build and Link the Verified Answers CLI",id:"2-build-and-link-the-verified-answers-cli",level:3},{value:"3. Import Your Verified Answers",id:"3-import-your-verified-answers",level:3},{value:"4. Configure Atlas Vector Search",id:"4-configure-atlas-vector-search",level:3},{value:"5. Configure Your Server",id:"5-configure-your-server",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"verified-answers",children:"Verified Answers"}),"\n",(0,i.jsx)(n.p,{children:'The Chatbot Server can map incoming user queries to a collection of pre-written\n"verified answers".'}),"\n",(0,i.jsx)(n.p,{children:"Verified answers are useful for:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"customizing the response to frequently asked questions"}),"\n",(0,i.jsx)(n.li,{children:"avoiding expensive and time-consuming LLM calls to regenerate answers"}),"\n",(0,i.jsx)(n.li,{children:"instilling user confidence that the response is accurate and doesn't contain hallucinations"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,i.jsxs)(n.p,{children:["Once you've ",(0,i.jsx)(n.a,{href:"#set-up-verified-answers",children:"set up verified answers"}),", the server is\nable to search for a verified answer that closely matches the user's provided\nquestion."]}),"\n",(0,i.jsx)(n.p,{children:"For every incoming query, the server first tries to find a matching verified\nanswer. If it finds one, it immediately returns it as a response to the user\nwith a metadata flag that indicates it was verified. If the server does not find\na match, it falls back to the regular RAG flow."}),"\n",(0,i.jsx)(n.h2,{id:"data-model",children:"Data Model"}),"\n",(0,i.jsx)(n.p,{children:"You define verified answers alongside one or more prompts that they answer, a\nlist of reference links for the answer, and the verifier's email address."}),"\n",(0,i.jsx)(n.p,{children:"Consider the following verified answer which can respond to multiple questions:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'questions:\n  - Why did the chicken cross the road?\n  - Why did the horse hop over the fence?\n  - Why did the cow stroll through the meadow?\n  - Why did the deer leap over the stream?\nanswer: >\n  To get to the other side!\n\n  For step-by-step instructions on how you can get to the other\n  side, [read our tutorial](https://www.example.com/).\nreferences:\n  - url: https://example.com/jokes/why-did-x-cross-y\n    title: Our 100 favorite "Why did the X cross the Y" Jokes\n  - url: https://www.example.com/facts/chickens\n    title: Everything you wanted to know about chickens, and then some!\nauthor_email: somebody@example.com\n'})}),"\n",(0,i.jsxs)(n.p,{children:["This definition is split into multiple verified answer documents, one for each\nentry in the ",(0,i.jsx)(n.code,{children:"questions"})," array, and processed into a vector searchable format.\nIn MongoDB, the verified answer document generated from this definition\nresembles the following:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "_id": "J28ut6WRRXDQuZ5LUCMUEWGSBf5xCt2oFWa19lD9QPA=",\n  "question": {\n    "embedding": [-0.00022248502, -0.005492599, 0.0006422517, /* ... */],\n    "embedding_model": "text-embedding-ada-002",\n    "embedding_model_version": "2023-06-01-preview",\n    "text": "Why did the chicken cross the road?"\n  },\n  "answer": "To get to the other side!\\n\\nFor step-by-step instructions on how you can cross the road, [read our tutorial](https://www.example.com/).\\n",\n  "references": [\n    {\n      "url": "https://example.com/jokes/why-did-x-cross-y",\n      "title": "Our 100 favorite \\"Why did the X cross the Y\\" Jokes"\n    },\n    {\n      "url": "https://www.example.com/facts/chickens",\n      "title": "Everything you wanted to know about chickens, and then some!"\n    }\n  ],\n  "author_email": "somebody@example.com",\n  "created": ISODate("2024-03-21T16:58:22.998Z"),\n  "updated": ISODate("2024-03-21T17:33:58.277Z"),\n  "hidden": null,\n  "stillExistsInYaml": true\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"set-up-verified-answers",children:"Set Up Verified Answers"}),"\n",(0,i.jsx)(n.admonition,{title:"Use MongoDB Atlas",type:"tip",children:(0,i.jsx)(n.p,{children:"This guide assumes that you use MongoDB Atlas and Atlas Vector Search."})}),"\n",(0,i.jsx)(n.h3,{id:"1-define-your-verified-answers",children:"1. Define Your Verified Answers"}),"\n",(0,i.jsx)(n.p,{children:"You define verified answers as a list of structured objects in a YAML file."}),"\n",(0,i.jsx)(n.p,{children:"First, create the YAML file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"touch verified-answers.yaml\n"})}),"\n",(0,i.jsx)(n.p,{children:"Then add one or more verified answers to the file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title="verified-answers.yaml"',children:"- questions:\n    - Why did the chicken cross the road?\n  answer: >\n    To get to the other side!\n  references:\n    - url: https://example.com/\n      title: Example Reference Link\n  author_email: somebody@example.com\n- questions:\n    - Who created JavaScript?\n    - When was JavaScript created?\n  answer: >\n    JavaScript was originally created by Brendan Eich in 1995\n  references:\n    - url: https://en.wikipedia.org/wiki/JavaScript\n      title: JavaScript on Wikipedia\n  author_email: somebody@example.com\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-build-and-link-the-verified-answers-cli",children:"2. Build and Link the Verified Answers CLI"}),"\n",(0,i.jsx)(n.p,{children:"The framework includes a CLI that can import your verified answers into MongoDB\nin a searchable format. To use it, you must build the CLI from\nsource."}),"\n",(0,i.jsxs)(n.p,{children:["First, define a ",(0,i.jsx)(n.code,{children:".env"})," file with environment variables for the CLI. Make sure to\nreplace the placeholders with your app's values."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",metastring:'title="/packages/mongodb-chatbot-verified-answers/.env"',children:"MONGODB_CONNECTION_URI=<connection_uri>  # A connection string for your MongoDB Atlas cluster\nMONGODB_DATABASE_NAME=<docs-chatbot-ENV> # The database name for your chatbot\nOPENAI_EMBEDDING_MODEL=text-embedding-ada-002\nOPENAI_EMBEDDING_MODEL_VERSION=2023-03-15-preview\nOPENAI_EMBEDDING_DEPLOYMENT=<deployment_name>\nOPENAI_ENDPOINT=https://<resource_name>.openai.azure.com/\nOPENAI_API_KEY=<api_key>\n"})}),"\n",(0,i.jsx)(n.p,{children:"Then, run the following from the repo root:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"npm run build\ncd packages/mongodb-chatbot-verified-answers\nnpm link\n"})}),"\n",(0,i.jsxs)(n.p,{children:["You now have access to the ",(0,i.jsx)(n.code,{children:"verified-answers"})," CLI in your shell."]}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsx)(n.p,{children:"You will need to build the CLI:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"the first time you use it"}),"\n",(0,i.jsxs)(n.li,{children:["to change an environment variables defined in the ",(0,i.jsx)(n.code,{children:".env"})," file"]}),"\n",(0,i.jsx)(n.li,{children:"to apply future feature updates"}),"\n"]})]}),"\n",(0,i.jsx)(n.h3,{id:"3-import-your-verified-answers",children:"3. Import Your Verified Answers"}),"\n",(0,i.jsxs)(n.p,{children:["Use the ",(0,i.jsx)(n.code,{children:"verified-answers"})," CLI to import your verified answers definition file."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"verified-answers import path/to/verified-answers.yaml\n"})}),"\n",(0,i.jsx)(n.p,{children:"The CLI intelligently diffs your definition file with any existing verified\nanswers in the database. Based on the diff, it applies changes to the data\nwithout affecting unchanged data. For example it will:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Add new documents for new verified answers"}),"\n",(0,i.jsx)(n.li,{children:"Update existing documents for verified answers with new text or references"}),"\n",(0,i.jsx)(n.li,{children:"Remove existing documents that don't match any answer defined in the provided file"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"4-configure-atlas-vector-search",children:"4. Configure Atlas Vector Search"}),"\n",(0,i.jsxs)(n.p,{children:["MongoDB Atlas Vector Search lets you find verified answers with questions\nsimilar to the user's input. To use vector search, you must create a vector\nsearch index on the verified answers collection. For detailed information on how\nto set up a vector search index, refer to ",(0,i.jsx)(n.a,{href:"#create-vector-search-index",children:"Create Atlas Vector Search\nIndex"})," documentation."]}),"\n",(0,i.jsxs)(n.p,{children:["The index specifies a field that contains a vector embedding to search. To match\nthe user's question against the verified answer's question, set the vector\nsearch index ",(0,i.jsx)(n.code,{children:"path"})," to ",(0,i.jsx)(n.code,{children:"question.embedding"})," and set the ",(0,i.jsx)(n.code,{children:"numDimensions"})," value to\nmatch the length of your embedding model's vectors."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'{\n  "fields": [\n    {\n      "numDimensions": "<embedding length, e.g. 1536>",\n      "path": "question.embedding",\n      "similarity": "cosine",\n      "type": "vector"\n    }\n  ]\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"5-configure-your-server",children:"5. Configure Your Server"}),"\n",(0,i.jsx)(n.p,{children:"You set up verified answers in the server configuration file."}),"\n",(0,i.jsxs)(n.p,{children:["First, connect your app to the stored verified answers by implementing the\n",(0,i.jsx)(n.code,{children:"VerifiedAnswerStore"})," interface. For most cases you can use the built-in\n",(0,i.jsx)(n.a,{href:"/chatbot/reference/core/modules/#makemongodbverifiedanswerstore",children:(0,i.jsx)(n.code,{children:"makeMongoDbVerifiedAnswerStore()"})}),"\nconstructor."]}),"\n",(0,i.jsx)(n.p,{children:"Make sure to provide a connection string and the name of the database and\ncollection that contain the verified answer data."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'const verifiedAnswerStore = makeMongoDbVerifiedAnswerStore({\n  connectionUri: MONGODB_CONNECTION_URI,\n  databaseName: MONGODB_DATABASE_NAME,\n  collectionName: "verified_answers",\n});\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Then, construct the function that searches the store for matching answers. For\nmost cases you can use the built-in ",(0,i.jsx)(n.code,{children:"makeDefaultFindVerifiedAnswer()"}),"\nconstructor."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"export const findVerifiedAnswer = makeDefaultFindVerifiedAnswer({\n  embedder,\n  store: verifiedAnswerStore,\n});\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Finally, move your baseline ",(0,i.jsx)(n.code,{children:"GenerateUserPromptFunc"})," to be the fallback\n",(0,i.jsx)(n.code,{children:"onNoVerifiedAnswerFound"})," handler of the verified answer user prompt generator."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"// The GenerateUserPromptFunc for your existing/standard RAG flow\nexport const generateRagUserPrompt = makeRagGenerateUserPrompt({\n  findContent,\n  queryPreprocessor: mongoDbUserQueryPreprocessor,\n  makeReferenceLinks: makeMongoDbReferences,\n  makeUserMessage,\n});\n\n// A new GenerateUserPrompt func that wraps your existing prompt and adds support for verified answers\nexport const generateUserPrompt = makeVerifiedAnswerGenerateUserPrompt({\n  findVerifiedAnswer,\n  // highlight-start\n  onNoVerifiedAnswerFound: generateRagUserPrompt\n  // highlight-end\n});\n"})}),"\n",(0,i.jsx)(n.p,{children:"At this point your chatbot is set up to serve verified answers."})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>a,a:()=>o});var i=r(67294);const s={},t=i.createContext(s);function o(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);