"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8723],{84841:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>g,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var t=o(85893),i=o(11151);const r={},a="Configure the Ingest CLI",s={id:"ingest/configure",title:"Configure the Ingest CLI",description:"This guide explains how you can configure the MongoDB Ingest CLI to ingest",source:"@site/docs/ingest/configure.md",sourceDirName:"ingest",slug:"/ingest/configure",permalink:"/chatbot/ingest/configure",draft:!1,unlisted:!1,editUrl:"https://github.com/mongodb/chatbot/tree/main/docs/docs/ingest/configure.md",tags:[],version:"current",frontMatter:{},sidebar:"main",previous:{title:"MongoDB & Atlas Vector Search",permalink:"/chatbot/mongodb"},next:{title:"Configuration Reference",permalink:"/chatbot/ingest/configuration-reference"}},c={},l=[{value:"Install the Ingest CLI",id:"install-the-ingest-cli",level:2},{value:"Create a Configuration File",id:"create-a-configuration-file",level:2},{value:"Define Configuration Files with TypeScript",id:"define-configuration-files-with-typescript",level:2},{value:"Example Configuration",id:"example-configuration",level:2},{value:"Configuration Reference",id:"configuration-reference",level:2},{value:"Additional Example Configurations",id:"additional-example-configurations",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"configure-the-ingest-cli",children:"Configure the Ingest CLI"}),"\n",(0,t.jsx)(n.p,{children:"This guide explains how you can configure the MongoDB Ingest CLI to ingest\ncontent into a MongoDB collection that you can use for retrieval augmented generation\n(RAG) applications."}),"\n",(0,t.jsx)(n.h2,{id:"install-the-ingest-cli",children:"Install the Ingest CLI"}),"\n",(0,t.jsx)(n.p,{children:"To install the Ingest CLI in a project, run the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm install mongodb-rag-ingest mongodb-rag-core\n"})}),"\n",(0,t.jsx)(n.h2,{id:"create-a-configuration-file",children:"Create a Configuration File"}),"\n",(0,t.jsxs)(n.p,{children:["The MongoDB Ingest CLI uses a ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/CommonJS",children:"CommonJS"}),"\nJavaScript configuration file to determine how to ingest content."]}),"\n",(0,t.jsxs)(n.p,{children:["Every configuration file must export a ",(0,t.jsx)(n.a,{href:"/chatbot/reference/ingest/modules#config",children:(0,t.jsx)(n.code,{children:"Config"})})," object as its default export."]}),"\n",(0,t.jsx)(n.p,{children:"You must either:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Pass the path to a configuration file to every command with the ",(0,t.jsx)(n.code,{children:"--config"})," flag."]}),"\n",(0,t.jsxs)(n.li,{children:["Put a CommonJS file named ",(0,t.jsx)(n.code,{children:"ingest.config.js"})," in the root of your project."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["For example, to run the ",(0,t.jsx)(n.code,{children:"pages"})," command with a configuration file called ",(0,t.jsx)(n.code,{children:"my-ingest.config.js"}),", run the following command:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ingest pages --config my-ingest.config.js --sourceName my-data-source\n"})}),"\n",(0,t.jsx)(n.h2,{id:"define-configuration-files-with-typescript",children:"Define Configuration Files with TypeScript"}),"\n",(0,t.jsx)(n.admonition,{title:"Use TypeScript Configuration Files!",type:"important",children:(0,t.jsxs)(n.p,{children:["We ",(0,t.jsx)(n.strong,{children:"strongly"})," recommend using TypeScript configuration files.\nThe typing system helps you ensure that your configuration is valid."]})}),"\n",(0,t.jsx)(n.p,{children:"You can use TypeScript to make your configuration file. This allows you to use\nthe type system to ensure that your configuration is valid."}),"\n",(0,t.jsxs)(n.p,{children:["You must compile your configuration file to ",(0,t.jsx)(n.strong,{children:"CommmonJS"})," before running the CLI.\nThe CLI only accepts CommonJS configuration files."]}),"\n",(0,t.jsxs)(n.p,{children:["You can build your CommonJS configuration file with ",(0,t.jsx)(n.code,{children:"tsc"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"tsc --module commonjs --target es2017 --outDir dist ingest.config.ts\n"})}),"\n",(0,t.jsx)(n.p,{children:"Then run the Ingest CLI with the compiled configuration file:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ingest pages update --config dist/ingest.config.js --sourceName my-data-source\n"})}),"\n",(0,t.jsx)(n.h2,{id:"example-configuration",children:"Example Configuration"}),"\n",(0,t.jsx)(n.p,{children:"Here's a simple example configuration file for the Ingest CLI.\nYou can use this configuration file as a starting point for your own configuration."}),"\n",(0,t.jsxs)(n.p,{children:["For simple RAG apps, the main thing you have to adjust is the ",(0,t.jsx)(n.code,{children:"dataSources"})," property.\nUse ",(0,t.jsx)(n.code,{children:"dataSources"})," to add your own data.\nFor more information on configuring data sources, refer to the ",(0,t.jsx)(n.a,{href:"/chatbot/ingest/data-sources",children:"Data Sources"}),"\ndocumentation."]}),"\n",(0,t.jsx)(n.p,{children:"Example configuration file:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'// ingest.config.ts\nimport { makeIngestMetaStore, type Config } from "mongodb-rag-ingest";\nimport {\n  makeOpenAiEmbedder,\n  makeMongoDbEmbeddedContentStore,\n  makeMongoDbPageStore,\n} from "mongodb-rag-core";\nimport { AzureOpenAI } from "mongodb-rag-core/openai";\nimport { standardChunkFrontMatterUpdater } from "mongodb-rag-core";\nimport { type DataSource } from "mongodb-rag-core";\nconst {\n  MONGODB_DOT_COM_CONNECTION_URI,\n  MONGODB_DOT_COM_DB_NAME,\n  MONGODB_CONNECTION_URI,\n  MONGODB_DATABASE_NAME,\n  OPENAI_ENDPOINT,\n  OPENAI_API_KEY,\n  OPENAI_API_VERSION,\n  OPENAI_EMBEDDING_DEPLOYMENT,\n} = process.env;\n\nexport default {\n  embedder: () =>\n    makeOpenAiEmbedder({\n      openAiClient: new AzureOpenAI({\n        apiKey: OPENAI_API_KEY,\n        endpoint: OPENAI_ENDPOINT,\n        apiVersion: OPENAI_API_VERSION,\n      }),\n      deployment: OPENAI_EMBEDDING_DEPLOYMENT,\n      backoffOptions: {\n        numOfAttempts: 25,\n        startingDelay: 1000,\n      },\n    }),\n  embeddedContentStore: () =>\n    makeMongoDbEmbeddedContentStore({\n      connectionUri: MONGODB_CONNECTION_URI,\n      databaseName: MONGODB_DATABASE_NAME,\n      searchIndex: {\n        embeddingName: OPENAI_EMBEDDING_DEPLOYMENT,\n      }\n    }),\n  pageStore: () =>\n    makeMongoDbPageStore({\n      connectionUri: MONGODB_CONNECTION_URI,\n      databaseName: MONGODB_DATABASE_NAME,\n    }),\n  ingestMetaStore: () =>\n    makeIngestMetaStore({\n      connectionUri: MONGODB_CONNECTION_URI,\n      databaseName: MONGODB_DATABASE_NAME,\n      entryId: "all",\n    }),\n  chunkOptions: () => ({\n    transform: standardChunkFrontMatterUpdater,\n  }),\n  dataSources: () => [\n    // Add your own data sources here.\n    {\n      name: "my-data-source",\n      async fetchPages() {\n        const pages: Page[] = await getPagesFromSomeSource();\n        return pages;\n      },\n    },\n  ],\n} satisfies Config;\n'})}),"\n",(0,t.jsx)(n.h2,{id:"configuration-reference",children:"Configuration Reference"}),"\n",(0,t.jsxs)(n.p,{children:["For complete reference documentation, refer to the ",(0,t.jsx)(n.a,{href:"/chatbot/ingest/configuration-reference",children:"Configuration Reference"})," documentation."]}),"\n",(0,t.jsx)(n.h2,{id:"additional-example-configurations",children:"Additional Example Configurations"}),"\n",(0,t.jsx)(n.p,{children:"For additional example configurations, check out the following projects:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/mongodb/chatbot/blob/main/packages/ingest-mongodb-public/src/config.ts",children:"MongoDB documentation ingest"}),": This is the most complex configuration. The ingest CLI was actually built for this project."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/mongodben/ingest-customers/blob/main/src/config.ts",children:"mongodb.com/customers ingest"}),":\nSimple implementation with a single data source."]}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},11151:(e,n,o)=>{o.d(n,{Z:()=>s,a:()=>a});var t=o(67294);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);