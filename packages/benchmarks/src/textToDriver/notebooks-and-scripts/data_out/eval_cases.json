[{"input": {"nl_query": "Show the cinema name and location for cinemas with capacity above average.", "dataset_name": "cinema_recommended"}, "expected": "[{\"Name\": \"Codling\", \"Location\": \"County Wicklow\"}, {\"Name\": \"Mount Callan\", \"Location\": \"County Clare\"}]", "metadata": {"app_mod_case_id": 4, "sql": {"query": "SELECT name ,  LOCATION FROM cinema WHERE capacity  >  (SELECT avg(capacity) FROM cinema)", "tags": {"category": "COMPLEX_SELECT", "subcategories": ["SUBQUERY"]}}}}, {"input": {"nl_query": "What are all the locations with a cinema?", "dataset_name": "cinema_recommended"}, "expected": "[{\"Location\": \"County Wicklow\"}, {\"Location\": \"County Cork\"}, {\"Location\": \"County Dublin\"}, {\"Location\": \"County Clare\"}, {\"Location\": \"County Tipperary\"}, {\"Location\": \"County Laois\"}, {\"Location\": \"County Louth\"}]", "metadata": {"app_mod_case_id": 5, "sql": {"query": "SELECT DISTINCT LOCATION FROM cinema", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "What are the name and location of the cinema with the largest capacity?", "dataset_name": "cinema_recommended"}, "expected": "[{\"Name\": \"Codling\", \"Location\": \"County Wicklow\"}]", "metadata": {"app_mod_case_id": 7, "sql": {"query": "SELECT name ,  LOCATION FROM cinema ORDER BY capacity DESC LIMIT 1", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "Show all the cinema names and opening years in descending order of opening year.", "dataset_name": "cinema_recommended"}, "expected": "[{\"Name\": \"Dublin Array\", \"Openning_year\": 2015}, {\"Name\": \"Oriel\", \"Openning_year\": 2013}, {\"Name\": \"Carrowleagh\", \"Openning_year\": 2012}, {\"Name\": \"Grouse Lodge\", \"Openning_year\": 2011}, {\"Name\": \"Moneypoint\", \"Openning_year\": 2011}, {\"Name\": \"Mount Callan\", \"Openning_year\": 2011}, {\"Name\": \"Codling\", \"Openning_year\": 2010}, {\"Name\": \"Glenough\", \"Openning_year\": 2010}, {\"Name\": \"Gortahile\", \"Openning_year\": 2010}, {\"Name\": \"Glenmore\", \"Openning_year\": 2009}]", "metadata": {"app_mod_case_id": 6, "sql": {"query": "SELECT name ,  openning_year FROM cinema ORDER BY openning_year DESC", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "How many cinema do we have?", "dataset_name": "cinema_recommended"}, "expected": "[{\"count(*)\": 10}]", "metadata": {"app_mod_case_id": 2, "sql": {"query": "SELECT count(*) FROM cinema", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "Show name, opening year, and capacity for each cinema.", "dataset_name": "cinema_recommended"}, "expected": "[{\"Name\": \"Codling\", \"Openning_year\": 2010, \"Capacity\": 1100}, {\"Name\": \"Carrowleagh\", \"Openning_year\": 2012, \"Capacity\": 368}, {\"Name\": \"Dublin Array\", \"Openning_year\": 2015, \"Capacity\": 364}, {\"Name\": \"Glenmore\", \"Openning_year\": 2009, \"Capacity\": 305}, {\"Name\": \"Glenough\", \"Openning_year\": 2010, \"Capacity\": 325}, {\"Name\": \"Gortahile\", \"Openning_year\": 2010, \"Capacity\": 208}, {\"Name\": \"Grouse Lodge\", \"Openning_year\": 2011, \"Capacity\": 203}, {\"Name\": \"Moneypoint\", \"Openning_year\": 2011, \"Capacity\": 225}, {\"Name\": \"Mount Callan\", \"Openning_year\": 2011, \"Capacity\": 908}, {\"Name\": \"Oriel\", \"Openning_year\": 2013, \"Capacity\": 330}]", "metadata": {"app_mod_case_id": 3, "sql": {"query": "SELECT name ,  openning_year ,  capacity FROM cinema", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "Show all the locations where some cinemas were opened in both year 2010 and year 2011.", "dataset_name": "cinema_recommended"}, "expected": "[{\"LOCATION\": \"County Tipperary\"}]", "metadata": {"app_mod_case_id": 1, "sql": {"query": "SELECT LOCATION FROM cinema WHERE openning_year  =  2010 INTERSECT SELECT LOCATION FROM cinema WHERE openning_year  =  2011", "tags": {"category": "COMPLEX_SELECT", "subcategories": ["SET_OPERATION"]}}}}, {"input": {"nl_query": "Show all the locations where no cinema has capacity over 800.", "dataset_name": "cinema_recommended"}, "expected": "[{\"LOCATION\": \"County Tipperary\"}, {\"LOCATION\": \"County Dublin\"}, {\"LOCATION\": \"County Louth\"}, {\"LOCATION\": \"County Cork\"}, {\"LOCATION\": \"County Laois\"}]", "metadata": {"app_mod_case_id": 0, "sql": {"query": "SELECT LOCATION FROM cinema EXCEPT SELECT LOCATION FROM cinema WHERE capacity  >  800", "tags": {"category": "COMPLEX_SELECT", "subcategories": ["SET_OPERATION"]}}}}, {"input": {"nl_query": "How many films have the word 'Dummy' in their titles?", "dataset_name": "cinema_recommended"}, "expected": "[{\"count(*)\": 1}]", "metadata": {"app_mod_case_id": 21, "sql": {"query": "SELECT count(*) FROM film WHERE title LIKE \"%Dummy%\"", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "Find the locations that have more than one movie theater with capacity above 300.", "dataset_name": "cinema_recommended"}, "expected": "[{\"Location\": \"County Clare\"}]", "metadata": {"app_mod_case_id": 20, "sql": {"query": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY"]}}}}, {"input": {"nl_query": "What are the title and director of the films without any schedule?", "dataset_name": "cinema_recommended"}, "expected": "[]", "metadata": {"app_mod_case_id": 18, "sql": {"query": "SELECT title ,  directed_by FROM film WHERE film_id NOT IN (SELECT film_id FROM schedule)", "tags": {"category": "COMPLEX_SELECT", "subcategories": ["SUBQUERY"]}}}}, {"input": {"nl_query": "Show director with the largest number of show times in total.", "dataset_name": "cinema_recommended"}, "expected": "[{\"Directed_by\": \"Bill Schreiner\"}]", "metadata": {"app_mod_case_id": 19, "sql": {"query": "SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.directed_by ORDER BY sum(T1.show_times_per_day) DESC LIMIT 1", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY", "JOIN"]}}}}, {"input": {"nl_query": "List all directors along with the number of films directed by each director.", "dataset_name": "cinema_recommended"}, "expected": "[{\"Directed_by\": \"Bill Schreiner\", \"count(*)\": 4}, {\"Directed_by\": \"Jesus Salvador Trevi\u00f1o\", \"count(*)\": 1}]", "metadata": {"app_mod_case_id": 14, "sql": {"query": "SELECT directed_by ,  count(*) FROM film GROUP BY directed_by", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY"]}}}}, {"input": {"nl_query": "What is total number of show times per dat for each cinema?", "dataset_name": "cinema_recommended"}, "expected": "[{\"Name\": \"Codling\", \"sum(T1.show_times_per_day)\": 10.0}, {\"Name\": \"Carrowleagh\", \"sum(T1.show_times_per_day)\": 5}, {\"Name\": \"Gortahile\", \"sum(T1.show_times_per_day)\": 4}, {\"Name\": \"Mount Callan\", \"sum(T1.show_times_per_day)\": 5}, {\"Name\": \"Oriel\", \"sum(T1.show_times_per_day)\": 5}]", "metadata": {"app_mod_case_id": 15, "sql": {"query": "SELECT T2.name ,  sum(T1.show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id  =  T2.cinema_id GROUP BY T1.cinema_id", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY", "JOIN"]}}}}, {"input": {"nl_query": "Show cinema name, film title, date, and price for each record in schedule.", "dataset_name": "cinema_recommended"}, "expected": "[{\"Name\": \"Codling\", \"Title\": \"The Case of the Mystery Weekend\", \"Date\": \"21 May\", \"Price\": 12.99}, {\"Name\": \"Carrowleagh\", \"Title\": \"The Case of the Mystery Weekend\", \"Date\": \"11 July\", \"Price\": 9.99}, {\"Name\": \"Oriel\", \"Title\": \"The Case of the Mystery Weekend\", \"Date\": \"19 May\", \"Price\": 15.99}, {\"Name\": \"Codling\", \"Title\": \"The Case of the Smart Dummy\", \"Date\": \"21 May\", \"Price\": 12.99}, {\"Name\": \"Codling\", \"Title\": \"The Case: Off the Record\", \"Date\": \"21 Jun\", \"Price\": 8.99}, {\"Name\": \"Mount Callan\", \"Title\": \"The Case of the Bermuda Triangle\", \"Date\": \"20 May\", \"Price\": 9.99}, {\"Name\": \"Gortahile\", \"Title\": \"The Case of the Piggy Banker\", \"Date\": \"2 Aug\", \"Price\": 12.99}]", "metadata": {"app_mod_case_id": 17, "sql": {"query": "SELECT T3.name ,  T2.title ,  T1.date ,  T1.price FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id JOIN cinema AS T3 ON T1.cinema_id  =  T3.cinema_id", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "JOIN"]}}}}, {"input": {"nl_query": "What are the title and maximum price of each film?", "dataset_name": "cinema_recommended"}, "expected": "[{\"Title\": \"The Case of the Mystery Weekend\", \"max(T1.price)\": 15.99}, {\"Title\": \"The Case of the Smart Dummy\", \"max(T1.price)\": 12.99}, {\"Title\": \"The Case: Off the Record\", \"max(T1.price)\": 8.99}, {\"Title\": \"The Case of the Bermuda Triangle\", \"max(T1.price)\": 9.99}, {\"Title\": \"The Case of the Piggy Banker\", \"max(T1.price)\": 12.99}]", "metadata": {"app_mod_case_id": 16, "sql": {"query": "SELECT T2.title ,  max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY", "JOIN"]}}}}, {"input": {"nl_query": "Show the title and director for all films.", "dataset_name": "cinema_recommended"}, "expected": "[{\"Title\": \"The Case of the Mystery Weekend\", \"Directed_by\": \"Bill Schreiner\"}, {\"Title\": \"The Case of the Smart Dummy\", \"Directed_by\": \"Bill Schreiner\"}, {\"Title\": \"The Case: Off the Record\", \"Directed_by\": \"Bill Schreiner\"}, {\"Title\": \"The Case of the Bermuda Triangle\", \"Directed_by\": \"Jesus Salvador Trevi\u00f1o\"}, {\"Title\": \"The Case of the Piggy Banker\", \"Directed_by\": \"Bill Schreiner\"}]", "metadata": {"app_mod_case_id": 12, "sql": {"query": "SELECT title ,  directed_by FROM film", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "Show all directors.", "dataset_name": "cinema_recommended"}, "expected": "[{\"Directed_by\": \"Bill Schreiner\"}, {\"Directed_by\": \"Jesus Salvador Trevi\u00f1o\"}]", "metadata": {"app_mod_case_id": 13, "sql": {"query": "SELECT DISTINCT directed_by FROM film", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "Show all the locations with at least two cinemas with capacity above 300.", "dataset_name": "cinema_recommended"}, "expected": "[{\"Location\": \"County Clare\"}]", "metadata": {"app_mod_case_id": 11, "sql": {"query": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY"]}}}}, {"input": {"nl_query": "What is the location with the most cinemas opened in year 2010 or later?", "dataset_name": "cinema_recommended"}, "expected": "[{\"Location\": \"County Tipperary\"}]", "metadata": {"app_mod_case_id": 10, "sql": {"query": "SELECT LOCATION FROM cinema WHERE openning_year  >=  2010 GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY"]}}}}, {"input": {"nl_query": "Show the average, minimum, and maximum capacity for all the cinemas opened in year 2011 or later.", "dataset_name": "cinema_recommended"}, "expected": "[{\"avg(capacity)\": 399.6667, \"min(capacity)\": 203, \"max(capacity)\": 908}]", "metadata": {"app_mod_case_id": 8, "sql": {"query": "SELECT avg(capacity) ,  min(capacity) ,  max(capacity) FROM cinema WHERE openning_year  >=  2011", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "Show each location and the number of cinemas there.", "dataset_name": "cinema_recommended"}, "expected": "[{\"Location\": \"County Wicklow\", \"count(*)\": 1}, {\"Location\": \"County Cork\", \"count(*)\": 1}, {\"Location\": \"County Dublin\", \"count(*)\": 1}, {\"Location\": \"County Clare\", \"count(*)\": 3}, {\"Location\": \"County Tipperary\", \"count(*)\": 2}, {\"Location\": \"County Laois\", \"count(*)\": 1}, {\"Location\": \"County Louth\", \"count(*)\": 1}]", "metadata": {"app_mod_case_id": 9, "sql": {"query": "SELECT LOCATION ,  count(*) FROM cinema GROUP BY LOCATION", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY"]}}}}, {"input": {"nl_query": "Find the purchase time, age and address of each member, and show the results in the order of purchase time.", "dataset_name": "coffee_shop_recommended"}, "expected": "[{\"Time_of_purchase\": 18, \"Age\": 29, \"Address\": \"Hartford\"}, {\"Time_of_purchase\": 18, \"Age\": 35, \"Address\": \"Waterbury\"}, {\"Time_of_purchase\": 20, \"Age\": 34, \"Address\": \"Hartford\"}, {\"Time_of_purchase\": 24, \"Age\": 45, \"Address\": \"Waterbury\"}, {\"Time_of_purchase\": 26, \"Age\": 33, \"Address\": \"Cheshire\"}, {\"Time_of_purchase\": 26, \"Age\": 42, \"Address\": \"Bridgeport\"}, {\"Time_of_purchase\": 27, \"Age\": 51, \"Address\": \"Waterbury\"}, {\"Time_of_purchase\": 27, \"Age\": 51, \"Address\": \"Hartford\"}, {\"Time_of_purchase\": 41, \"Age\": 67, \"Address\": \"Waterbury\"}, {\"Time_of_purchase\": 44, \"Age\": 50, \"Address\": \"Cheshire\"}]", "metadata": {"app_mod_case_id": 4, "sql": {"query": "SELECT Time_of_purchase ,  age ,  address FROM member ORDER BY Time_of_purchase", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "Which membership card has more than 5 members?", "dataset_name": "coffee_shop_recommended"}, "expected": "[{\"Membership_card\": \"Black\"}]", "metadata": {"app_mod_case_id": 5, "sql": {"query": "SELECT Membership_card FROM member GROUP BY Membership_card HAVING count(*)  >  5", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY"]}}}}, {"input": {"nl_query": "What is the membership card held by both members living in Hartford and ones living in Waterbury address?", "dataset_name": "coffee_shop_recommended"}, "expected": "[{\"membership_card\": \"Black\"}]", "metadata": {"app_mod_case_id": 7, "sql": {"query": "SELECT membership_card FROM member WHERE address  =  'Hartford' INTERSECT SELECT membership_card FROM member WHERE address  =  'Waterbury'", "tags": {"category": "COMPLEX_SELECT", "subcategories": ["SET_OPERATION"]}}}}, {"input": {"nl_query": "Which address has both members younger than 30 and members older than 40?", "dataset_name": "coffee_shop_recommended"}, "expected": "[{\"address\": \"Hartford\"}]", "metadata": {"app_mod_case_id": 6, "sql": {"query": "SELECT address FROM member WHERE age  <  30 INTERSECT SELECT address FROM member WHERE age  >  40", "tags": {"category": "COMPLEX_SELECT", "subcategories": ["SET_OPERATION"]}}}}, {"input": {"nl_query": "Give me the names of members whose address is in Harford or Waterbury.", "dataset_name": "coffee_shop_recommended"}, "expected": "[{\"Name\": \"Breton, Robert\"}, {\"Name\": \"Cobb, Sedrick\"}, {\"Name\": \"Reynolds, Richard\"}, {\"Name\": \"Rizzo, Todd\"}]", "metadata": {"app_mod_case_id": 2, "sql": {"query": "SELECT name FROM member WHERE address  =  'Harford' OR address  =  'Waterbury'", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "Find the ids and names of members who are under age 30 or with black membership card.", "dataset_name": "coffee_shop_recommended"}, "expected": "[{\"Name\": \"Ashby, Lazale\", \"Member_ID\": 1}, {\"Name\": \"Campbell, Jessie\", \"Member_ID\": 3}, {\"Name\": \"Cobb, Sedrick\", \"Member_ID\": 4}, {\"Name\": \"Peeler, Russell\", \"Member_ID\": 7}, {\"Name\": \"Reynolds, Richard\", \"Member_ID\": 8}, {\"Name\": \"Webb, Daniel\", \"Member_ID\": 10}]", "metadata": {"app_mod_case_id": 3, "sql": {"query": "SELECT name ,  member_id FROM member WHERE Membership_card  =  'Black' OR age  <  30", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "Find the number of members living in each address.", "dataset_name": "coffee_shop_recommended"}, "expected": "[{\"count(*)\": 3, \"Address\": \"Hartford\"}, {\"count(*)\": 4, \"Address\": \"Waterbury\"}, {\"count(*)\": 2, \"Address\": \"Cheshire\"}, {\"count(*)\": 1, \"Address\": \"Bridgeport\"}]", "metadata": {"app_mod_case_id": 1, "sql": {"query": "SELECT count(*) ,  address FROM member GROUP BY address", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY"]}}}}, {"input": {"nl_query": "How many members have the black membership card?", "dataset_name": "coffee_shop_recommended"}, "expected": "[{\"count(*)\": 6}]", "metadata": {"app_mod_case_id": 0, "sql": {"query": "SELECT count(*) FROM member WHERE Membership_card  =  'Black'", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "What are the id and address of the shops which have a happy hour in May?", "dataset_name": "coffee_shop_recommended"}, "expected": "[{\"Address\": \"1200 Main Street\", \"Shop_ID\": 1}, {\"Address\": \"1200 Main Street\", \"Shop_ID\": 1}, {\"Address\": \"1330 Baltimore Street\", \"Shop_ID\": 3}]", "metadata": {"app_mod_case_id": 14, "sql": {"query": "SELECT t1.address ,  t1.shop_id FROM shop AS t1 JOIN happy_hour AS t2 ON t1.shop_id  =  t2.shop_id WHERE MONTH  =  'May'", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "JOIN"]}}}}, {"input": {"nl_query": "which shop has happy hour most frequently? List its id and number of happy hours.", "dataset_name": "coffee_shop_recommended"}, "expected": "[{\"Shop_ID\": 1, \"count(*)\": 4}]", "metadata": {"app_mod_case_id": 15, "sql": {"query": "SELECT shop_id ,  count(*) FROM happy_hour GROUP BY shop_id ORDER BY count(*) DESC LIMIT 1", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY"]}}}}, {"input": {"nl_query": "Which months have more than 2 happy hours?", "dataset_name": "coffee_shop_recommended"}, "expected": "[{\"Month\": \"May\"}, {\"Month\": \"April\"}]", "metadata": {"app_mod_case_id": 17, "sql": {"query": "SELECT MONTH FROM happy_hour GROUP BY MONTH HAVING count(*)  >  2", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY"]}}}}, {"input": {"nl_query": "Which month has the most happy hours?", "dataset_name": "coffee_shop_recommended"}, "expected": "[{\"Month\": \"May\"}]", "metadata": {"app_mod_case_id": 16, "sql": {"query": "SELECT MONTH FROM happy_hour GROUP BY MONTH ORDER BY count(*) DESC LIMIT 1", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY"]}}}}, {"input": {"nl_query": "Find the id and address of the shops whose score is below the average score.", "dataset_name": "coffee_shop_recommended"}, "expected": "[{\"Shop_ID\": 4, \"Address\": \"909 Walnut Street\"}, {\"Shop_ID\": 5, \"Address\": \"414 E. 12th Street\"}, {\"Shop_ID\": 6, \"Address\": \"1201 Walnut Street\"}, {\"Shop_ID\": 8, \"Address\": \"909 Main Street\"}, {\"Shop_ID\": 9, \"Address\": \"1100 Main Street\"}, {\"Shop_ID\": 10, \"Address\": \"324 E. 11th Street\"}]", "metadata": {"app_mod_case_id": 12, "sql": {"query": "SELECT shop_id ,  address FROM shop WHERE score  <  (SELECT avg(score) FROM shop)", "tags": {"category": "COMPLEX_SELECT", "subcategories": ["SUBQUERY"]}}}}, {"input": {"nl_query": "Find the address and staff number of the shops that do not have any happy hour.", "dataset_name": "coffee_shop_recommended"}, "expected": "[{\"Address\": \"909 Walnut Street\", \"Num_of_staff\": \"27\"}, {\"Address\": \"1201 Walnut Street\", \"Num_of_staff\": \"34\"}, {\"Address\": \"2345 McGee Street\", \"Num_of_staff\": \"425\"}, {\"Address\": \"909 Main Street\", \"Num_of_staff\": \"28\"}, {\"Address\": \"1100 Main Street\", \"Num_of_staff\": \"23\"}]", "metadata": {"app_mod_case_id": 13, "sql": {"query": "SELECT address ,  num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour)", "tags": {"category": "COMPLEX_SELECT", "subcategories": ["SUBQUERY"]}}}}, {"input": {"nl_query": "What are the average score and average staff number of all shops?", "dataset_name": "coffee_shop_recommended"}, "expected": "[{\"avg(num_of_staff)\": 65.1, \"avg(score)\": 33.6}]", "metadata": {"app_mod_case_id": 11, "sql": {"query": "SELECT avg(num_of_staff) ,  avg(score) FROM shop", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "Show the shop addresses ordered by their opening year.", "dataset_name": "coffee_shop_recommended"}, "expected": "[{\"Address\": \"1100 Main Street\"}, {\"Address\": \"1111 Main Street\"}, {\"Address\": \"2345 McGee Street\"}, {\"Address\": \"324 E. 11th Street\"}, {\"Address\": \"1200 Main Street\"}, {\"Address\": \"1330 Baltimore Street\"}, {\"Address\": \"909 Walnut Street\"}, {\"Address\": \"1201 Walnut Street\"}, {\"Address\": \"414 E. 12th Street\"}, {\"Address\": \"909 Main Street\"}]", "metadata": {"app_mod_case_id": 10, "sql": {"query": "SELECT address FROM shop ORDER BY open_year", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "How many members are not living in Hartford?", "dataset_name": "coffee_shop_recommended"}, "expected": "[{\"count(*)\": 7}]", "metadata": {"app_mod_case_id": 8, "sql": {"query": "SELECT count(*) FROM member WHERE address != 'Hartford'", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "Which address do not have any member with the black membership card?", "dataset_name": "coffee_shop_recommended"}, "expected": "[{\"address\": \"Cheshire\"}]", "metadata": {"app_mod_case_id": 9, "sql": {"query": "SELECT address FROM member EXCEPT SELECT address FROM member WHERE Membership_card  =  'Black'", "tags": {"category": "COMPLEX_SELECT", "subcategories": ["SET_OPERATION"]}}}}, {"input": {"nl_query": "Return the first names and last names of employees who earn more than 30000 in salary.", "dataset_name": "company_1_recommended"}, "expected": "[{\"Fname\": \"Franklin\", \"Lname\": \"Wong\"}, {\"Fname\": \"Ramesh\", \"Lname\": \"Narayan\"}, {\"Fname\": \"James\", \"Lname\": \"Borg\"}, {\"Fname\": \"Jennifier\", \"Lname\": \"Wallace\"}]", "metadata": {"app_mod_case_id": 4, "sql": {"query": "SELECT fname ,  lname FROM employee WHERE salary  >  30000", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "Find the number of employees of each gender whose salary is lower than 50000.", "dataset_name": "company_1_recommended"}, "expected": "[{\"count(*)\": 4, \"Sex\": \"M\"}, {\"count(*)\": 3, \"Sex\": \"F\"}]", "metadata": {"app_mod_case_id": 5, "sql": {"query": "SELECT count(*) ,  sex FROM employee WHERE salary  <  50000 GROUP BY sex", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY"]}}}}, {"input": {"nl_query": "list the first and last names, and the addresses of all employees in the ascending order of their birth date.", "dataset_name": "company_1_recommended"}, "expected": "[{\"Fname\": \"James\", \"Lname\": \"Borg\", \"Address\": \"450 Stone, Houston, TX\"}, {\"Fname\": \"Jennifier\", \"Lname\": \"Wallace\", \"Address\": \"291 Berry, Bellaire, TX\"}, {\"Fname\": \"Franklin\", \"Lname\": \"Wong\", \"Address\": \"638 Voss, Houston, TX\"}, {\"Fname\": \"Ramesh\", \"Lname\": \"Narayan\", \"Address\": \"975 Fire Oak, Humble, TX\"}, {\"Fname\": \"Jonh\", \"Lname\": \"Smith\", \"Address\": \"731 Fondren, Houston, TX\"}, {\"Fname\": \"Alicia\", \"Lname\": \"Zelaya\", \"Address\": \"3321 Castle, Spring, TX\"}, {\"Fname\": \"Ahmad\", \"Lname\": \"Jabbar\", \"Address\": \"980 Dallas, Houston, TX\"}, {\"Fname\": \"Joyce\", \"Lname\": \"English\", \"Address\": \"5631 Rice, Houston, TX\"}]", "metadata": {"app_mod_case_id": 6, "sql": {"query": "SELECT fname ,  lname ,  address FROM employee ORDER BY Bdate", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "how many female dependents are there?", "dataset_name": "company_1_recommended"}, "expected": "[{\"count(*)\": 4}]", "metadata": {"app_mod_case_id": 2, "sql": {"query": "SELECT count(*) FROM dependent WHERE sex  =  'F'", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "Find the names of departments that are located in Houston.", "dataset_name": "company_1_recommended"}, "expected": "[{\"Dname\": \"Headquarters\"}, {\"Dname\": \"Research\"}]", "metadata": {"app_mod_case_id": 3, "sql": {"query": "SELECT t1.dname FROM department AS t1 JOIN dept_locations AS t2 ON t1.dnumber  =  t2.dnumber WHERE t2.dlocation  =  'Houston'", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "JOIN"]}}}}, {"input": {"nl_query": "find all dependent names who have a spouse relation with some employee.", "dataset_name": "company_1_recommended"}, "expected": "[{\"Dependent_name\": \"Elizabeth\"}, {\"Dependent_name\": \"Joy\"}, {\"Dependent_name\": \"Abner\"}]", "metadata": {"app_mod_case_id": 1, "sql": {"query": "SELECT Dependent_name FROM dependent WHERE relationship  =  'Spouse'", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "List all department names ordered by their starting date.", "dataset_name": "company_1_recommended"}, "expected": "[{\"Dname\": \"Headquarters\"}, {\"Dname\": \"Research\"}, {\"Dname\": \"Administration\"}]", "metadata": {"app_mod_case_id": 0, "sql": {"query": "SELECT dname FROM department ORDER BY mgr_start_date", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "What are the average profits of companies?", "dataset_name": "company_office_recommended"}, "expected": "[{\"avg(Profits_billion)\": 17.063157894736843}]", "metadata": {"app_mod_case_id": 4, "sql": {"query": "SELECT avg(Profits_billion) FROM Companies", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "What are the maximum and minimum sales of the companies whose industries are not \"Banking\".", "dataset_name": "company_office_recommended"}, "expected": "[{\"max(Sales_billion)\": 421.8, \"min(Sales_billion)\": 98.7}]", "metadata": {"app_mod_case_id": 5, "sql": {"query": "SELECT max(Sales_billion) ,  min(Sales_billion) FROM Companies WHERE Industry != \"Banking\"", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "List the names of buildings in descending order of building height.", "dataset_name": "company_office_recommended"}, "expected": "[{\"name\": \"Torre Reforma\"}, {\"name\": \"Reforma 432\"}, {\"name\": \"Torre KOI\"}, {\"name\": \"Corporativo BBVA Bancomer\"}, {\"name\": \"Torre Mitikah\"}, {\"name\": \"Punto Chapultepec\"}, {\"name\": \"Residencial Vidalta Torre Altaire 3\"}, {\"name\": \"Reforma 90\"}, {\"name\": \"Residencial Vidalta Torre Altaire 2\"}, {\"name\": \"Ritz-Carlton Mexico City\"}, {\"name\": \"LIU East\"}, {\"name\": \"Torre New York Life\"}]", "metadata": {"app_mod_case_id": 7, "sql": {"query": "SELECT name FROM buildings ORDER BY Height DESC", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "How many different industries are the companies in?", "dataset_name": "company_office_recommended"}, "expected": "[{\"count(DISTINCT Industry)\": 5}]", "metadata": {"app_mod_case_id": 6, "sql": {"query": "SELECT count(DISTINCT Industry) FROM Companies", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "What are the names of companies whose headquarters are not \"USA\"?", "dataset_name": "company_office_recommended"}, "expected": "[{\"name\": \"HSBC\"}, {\"name\": \"Royal Dutch Shell\"}, {\"name\": \"PetroChina\"}, {\"name\": \"Industrial and Commercial Bank of China\"}, {\"name\": \"Petrobras\"}, {\"name\": \"BNP Paribas\"}, {\"name\": \"Santander Group\"}, {\"name\": \"Gazprom\"}, {\"name\": \"China Construction Bank\"}, {\"name\": \"Total\"}]", "metadata": {"app_mod_case_id": 2, "sql": {"query": "SELECT name FROM Companies WHERE Headquarters != 'USA'", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "What are the name and assets of each company, sorted in ascending order of company name?", "dataset_name": "company_office_recommended"}, "expected": "[{\"name\": \"AT&T Inc.\", \"Assets_billion\": 268.5}, {\"name\": \"Berkshire Hathaway\", \"Assets_billion\": 372.2}, {\"name\": \"BNP Paribas\", \"Assets_billion\": 2680.7}, {\"name\": \"Chevron\", \"Assets_billion\": 184.8}, {\"name\": \"China Construction Bank\", \"Assets_billion\": 1408.0}, {\"name\": \"Citigroup\", \"Assets_billion\": 1913.9}, {\"name\": \"ExxonMobil\", \"Assets_billion\": 302.5}, {\"name\": \"Gazprom\", \"Assets_billion\": 275.9}, {\"name\": \"General Electric\", \"Assets_billion\": 751.2}, {\"name\": \"HSBC\", \"Assets_billion\": 2467.9}, {\"name\": \"Industrial and Commercial Bank of China\", \"Assets_billion\": 1723.5}, {\"name\": \"JPMorgan Chase\", \"Assets_billion\": 2117.6}, {\"name\": \"Petrobras\", \"Assets_billion\": 313.2}, {\"name\": \"PetroChina\", \"Assets_billion\": 251.3}, {\"name\": \"Royal Dutch Shell\", \"Assets_billion\": 317.2}, {\"name\": \"Santander Group\", \"Assets_billion\": 1570.6}, {\"name\": \"Total\", \"Assets_billion\": 192.8}, {\"name\": \"Walmart\", \"Assets_billion\": 180.7}, {\"name\": \"Wells Fargo\", \"Assets_billion\": 1258.1}]", "metadata": {"app_mod_case_id": 3, "sql": {"query": "SELECT name ,  Assets_billion FROM Companies ORDER BY name ASC", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "List the names of companies in descending order of market value.", "dataset_name": "company_office_recommended"}, "expected": "[{\"name\": \"Santander Group\"}, {\"name\": \"BNP Paribas\"}, {\"name\": \"ExxonMobil\"}, {\"name\": \"PetroChina\"}, {\"name\": \"Industrial and Commercial Bank of China\"}, {\"name\": \"Petrobras\"}, {\"name\": \"China Construction Bank\"}, {\"name\": \"General Electric\"}, {\"name\": \"Royal Dutch Shell\"}, {\"name\": \"Berkshire Hathaway\"}, {\"name\": \"Chevron\"}, {\"name\": \"Walmart\"}, {\"name\": \"HSBC\"}, {\"name\": \"JPMorgan Chase\"}, {\"name\": \"Gazprom\"}, {\"name\": \"Wells Fargo\"}, {\"name\": \"AT&T Inc.\"}, {\"name\": \"Total\"}, {\"name\": \"Citigroup\"}]", "metadata": {"app_mod_case_id": 1, "sql": {"query": "SELECT name FROM Companies ORDER BY Market_Value_billion DESC", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "How many companies are there?", "dataset_name": "company_office_recommended"}, "expected": "[{\"count(*)\": 19}]", "metadata": {"app_mod_case_id": 0, "sql": {"query": "SELECT count(*) FROM Companies", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "Find the number of companies whose industry is \"Banking\" or \"Conglomerate\",", "dataset_name": "company_office_recommended"}, "expected": "[{\"count(*)\": 10}]", "metadata": {"app_mod_case_id": 18, "sql": {"query": "SELECT count(*) FROM Companies WHERE Industry  =  \"Banking\" OR Industry  =  \"Conglomerate\"", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "Show the headquarters shared by more than two companies.", "dataset_name": "company_office_recommended"}, "expected": "[{\"Headquarters\": \"USA\"}, {\"Headquarters\": \"China\"}]", "metadata": {"app_mod_case_id": 19, "sql": {"query": "SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT(*)  >  2", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY"]}}}}, {"input": {"nl_query": "Please show the industries of companies in descending order of the number of companies.", "dataset_name": "company_office_recommended"}, "expected": "[{\"Industry\": \"Banking\"}, {\"Industry\": \"Oil and gas\"}, {\"Industry\": \"Conglomerate\"}, {\"Industry\": \"Telecommunications\"}, {\"Industry\": \"Retailing\"}]", "metadata": {"app_mod_case_id": 14, "sql": {"query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY"]}}}}, {"input": {"nl_query": "List the industry shared by the most companies.", "dataset_name": "company_office_recommended"}, "expected": "[{\"Industry\": \"Banking\"}]", "metadata": {"app_mod_case_id": 15, "sql": {"query": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC LIMIT 1", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY"]}}}}, {"input": {"nl_query": "Show the industries shared by companies whose headquarters are \"USA\" and companies whose headquarters are \"China\".", "dataset_name": "company_office_recommended"}, "expected": "[{\"Industry\": \"Banking\"}, {\"Industry\": \"Oil and gas\"}]", "metadata": {"app_mod_case_id": 17, "sql": {"query": "SELECT Industry FROM Companies WHERE Headquarters  =  \"USA\" INTERSECT SELECT Industry FROM Companies WHERE Headquarters  =  \"China\"", "tags": {"category": "COMPLEX_SELECT", "subcategories": ["SET_OPERATION"]}}}}, {"input": {"nl_query": "List the names of buildings that have no company office.", "dataset_name": "company_office_recommended"}, "expected": "[{\"name\": \"Ritz-Carlton Mexico City\"}]", "metadata": {"app_mod_case_id": 16, "sql": {"query": "SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM Office_locations)", "tags": {"category": "COMPLEX_SELECT", "subcategories": ["SUBQUERY"]}}}}, {"input": {"nl_query": "Please show the names of the buildings whose status is \"on-hold\", in ascending order of stories.", "dataset_name": "company_office_recommended"}, "expected": "[{\"name\": \"Ritz-Carlton Mexico City\"}, {\"name\": \"Reforma 90\"}, {\"name\": \"Residencial Vidalta Torre Altaire 2\"}, {\"name\": \"Residencial Vidalta Torre Altaire 3\"}]", "metadata": {"app_mod_case_id": 12, "sql": {"query": "SELECT name FROM buildings WHERE Status  =  \"on-hold\" ORDER BY Stories ASC", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "Please show each industry and the corresponding number of companies in that industry.", "dataset_name": "company_office_recommended"}, "expected": "[{\"Industry\": \"Banking\", \"COUNT(*)\": 8}, {\"Industry\": \"Conglomerate\", \"COUNT(*)\": 2}, {\"Industry\": \"Oil and gas\", \"COUNT(*)\": 7}, {\"Industry\": \"Telecommunications\", \"COUNT(*)\": 1}, {\"Industry\": \"Retailing\", \"COUNT(*)\": 1}]", "metadata": {"app_mod_case_id": 13, "sql": {"query": "SELECT Industry ,  COUNT(*) FROM Companies GROUP BY Industry", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY"]}}}}, {"input": {"nl_query": "Show the name of the building that has the most company offices.", "dataset_name": "company_office_recommended"}, "expected": "[{\"name\": \"Punto Chapultepec\"}]", "metadata": {"app_mod_case_id": 11, "sql": {"query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id ORDER BY COUNT(*) DESC LIMIT 1", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY", "JOIN"]}}}}, {"input": {"nl_query": "Show the names of the buildings that have more than one company offices.", "dataset_name": "company_office_recommended"}, "expected": "[{\"name\": \"Torre Mitikah\"}, {\"name\": \"Punto Chapultepec\"}, {\"name\": \"Corporativo BBVA Bancomer\"}]", "metadata": {"app_mod_case_id": 10, "sql": {"query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id HAVING COUNT(*)  >  1", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY", "JOIN"]}}}}, {"input": {"nl_query": "Find the stories of the building with the largest height.", "dataset_name": "company_office_recommended"}, "expected": "[{\"Stories\": 57}]", "metadata": {"app_mod_case_id": 8, "sql": {"query": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "List the name of a building along with the name of a company whose office is in the building.", "dataset_name": "company_office_recommended"}, "expected": "[{\"name\": \"JPMorgan Chase\", \"name(1)\": \"Torre KOI\"}, {\"name\": \"HSBC\", \"name(1)\": \"Torre Mitikah\"}, {\"name\": \"BNP Paribas\", \"name(1)\": \"Torre Mitikah\"}, {\"name\": \"HSBC\", \"name(1)\": \"Punto Chapultepec\"}, {\"name\": \"ExxonMobil\", \"name(1)\": \"Punto Chapultepec\"}, {\"name\": \"Petrobras\", \"name(1)\": \"Punto Chapultepec\"}, {\"name\": \"BNP Paribas\", \"name(1)\": \"Punto Chapultepec\"}, {\"name\": \"General Electric\", \"name(1)\": \"Torre Reforma\"}, {\"name\": \"General Electric\", \"name(1)\": \"Corporativo BBVA Bancomer\"}, {\"name\": \"Industrial and Commercial Bank of China\", \"name(1)\": \"Corporativo BBVA Bancomer\"}, {\"name\": \"Petrobras\", \"name(1)\": \"Reforma 432\"}, {\"name\": \"ExxonMobil\", \"name(1)\": \"Torre New York Life\"}, {\"name\": \"Total\", \"name(1)\": \"LIU East\"}, {\"name\": \"Citigroup\", \"name(1)\": \"Residencial Vidalta Torre Altaire 2\"}, {\"name\": \"Petrobras\", \"name(1)\": \"Residencial Vidalta Torre Altaire 3\"}, {\"name\": \"Royal Dutch Shell\", \"name(1)\": \"Reforma 90\"}]", "metadata": {"app_mod_case_id": 9, "sql": {"query": "SELECT T3.name ,  T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "JOIN"]}}}}, {"input": {"nl_query": "Show the crime rates of counties in ascending order of number of police officers.", "dataset_name": "county_public_safety_recommended"}, "expected": "[{\"Crime_rate\": 150.0}, {\"Crime_rate\": 49.0}, {\"Crime_rate\": 178.0}, {\"Crime_rate\": 174.0}, {\"Crime_rate\": 118.0}, {\"Crime_rate\": 123.0}]", "metadata": {"app_mod_case_id": 4, "sql": {"query": "SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "What are the names of cities in ascending alphabetical order?", "dataset_name": "county_public_safety_recommended"}, "expected": "[{\"Name\": \"Adjuntas\"}, {\"Name\": \"Aguada\"}, {\"Name\": \"Aguadilla\"}, {\"Name\": \"Aguas Buenas\"}, {\"Name\": \"Aibonito\"}, {\"Name\": \"A\u00f1asco\"}, {\"Name\": \"Arecibo\"}, {\"Name\": \"Arroyo\"}, {\"Name\": \"Barceloneta\"}, {\"Name\": \"Barranquitas\"}, {\"Name\": \"Bayam\u00f3n\"}, {\"Name\": \"Cabo Rojo\"}, {\"Name\": \"Caguas\"}, {\"Name\": \"Camuy\"}, {\"Name\": \"Can\u00f3vanas\"}, {\"Name\": \"Carolina\"}, {\"Name\": \"Cata\u00f1o\"}]", "metadata": {"app_mod_case_id": 5, "sql": {"query": "SELECT Name FROM city ORDER BY Name ASC", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "List the name of the county with the largest population.", "dataset_name": "county_public_safety_recommended"}, "expected": "[{\"Name\": \"Burnaby\"}]", "metadata": {"app_mod_case_id": 7, "sql": {"query": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "What are the percentage of hispanics in cities with the black percentage higher than 10?", "dataset_name": "county_public_safety_recommended"}, "expected": "[{\"Hispanic\": 99.5}, {\"Hispanic\": 99.1}, {\"Hispanic\": 99.0}, {\"Hispanic\": 99.1}, {\"Hispanic\": 99.2}, {\"Hispanic\": 98.6}, {\"Hispanic\": 99.0}]", "metadata": {"app_mod_case_id": 6, "sql": {"query": "SELECT Hispanic FROM city WHERE Black  >  10", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "List the distinct police forces of counties whose location is not on east side.", "dataset_name": "county_public_safety_recommended"}, "expected": "[{\"Police_force\": \"RCMP\"}]", "metadata": {"app_mod_case_id": 2, "sql": {"query": "SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION != \"East\"", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "What are the minimum and maximum crime rate of counties?", "dataset_name": "county_public_safety_recommended"}, "expected": "[{\"min(Crime_rate)\": 49.0, \"max(Crime_rate)\": 178.0}]", "metadata": {"app_mod_case_id": 3, "sql": {"query": "SELECT min(Crime_rate) ,  max(Crime_rate) FROM county_public_safety", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "List the names of counties in descending order of population.", "dataset_name": "county_public_safety_recommended"}, "expected": "[{\"Name\": \"Burnaby\"}, {\"Name\": \"Abbotsford\"}, {\"Name\": \"Chilliwack\"}, {\"Name\": \"Campbell River\"}, {\"Name\": \"Central Saanich\"}, {\"Name\": \"Castlegar\"}]", "metadata": {"app_mod_case_id": 1, "sql": {"query": "SELECT Name FROM county_public_safety ORDER BY Population DESC", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "How many counties are there?", "dataset_name": "county_public_safety_recommended"}, "expected": "[{\"count(*)\": 6}]", "metadata": {"app_mod_case_id": 0, "sql": {"query": "SELECT count(*) FROM county_public_safety", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "Show the names of cities in counties that have a crime rate less than 100.", "dataset_name": "county_public_safety_recommended"}, "expected": "[{\"Name\": \"Camuy\"}, {\"Name\": \"Can\u00f3vanas\"}]", "metadata": {"app_mod_case_id": 18, "sql": {"query": "SELECT name FROM city WHERE county_id IN (SELECT county_id FROM county_public_safety WHERE Crime_rate  <  100)", "tags": {"category": "COMPLEX_SELECT", "subcategories": ["SUBQUERY"]}}}}, {"input": {"nl_query": "Show the case burden of counties in descending order of population.", "dataset_name": "county_public_safety_recommended"}, "expected": "[{\"Case_burden\": 100}, {\"Case_burden\": 81}, {\"Case_burden\": 140}, {\"Case_burden\": 137}, {\"Case_burden\": 39}, {\"Case_burden\": 107}]", "metadata": {"app_mod_case_id": 19, "sql": {"query": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "Please show the police forces and the number of counties with each police force.", "dataset_name": "county_public_safety_recommended"}, "expected": "[{\"Police_force\": \"Abbotsford Police Department\", \"COUNT(*)\": 1}, {\"Police_force\": \"RCMP\", \"COUNT(*)\": 4}, {\"Police_force\": \"Central Saanich Police\", \"COUNT(*)\": 1}]", "metadata": {"app_mod_case_id": 14, "sql": {"query": "SELECT Police_force ,  COUNT(*) FROM county_public_safety GROUP BY Police_force", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY"]}}}}, {"input": {"nl_query": "What is the location shared by most counties?", "dataset_name": "county_public_safety_recommended"}, "expected": "[{\"Location\": \"East\"}]", "metadata": {"app_mod_case_id": 15, "sql": {"query": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY"]}}}}, {"input": {"nl_query": "Show the police force shared by counties with location on the east and west.", "dataset_name": "county_public_safety_recommended"}, "expected": "[{\"Police_force\": \"RCMP\"}]", "metadata": {"app_mod_case_id": 17, "sql": {"query": "SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"East\" INTERSECT SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"West\"", "tags": {"category": "COMPLEX_SELECT", "subcategories": ["SET_OPERATION"]}}}}, {"input": {"nl_query": "List the names of counties that do not have any cities.", "dataset_name": "county_public_safety_recommended"}, "expected": "[]", "metadata": {"app_mod_case_id": 16, "sql": {"query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)", "tags": {"category": "COMPLEX_SELECT", "subcategories": ["SUBQUERY"]}}}}, {"input": {"nl_query": "Show the number of cities in counties that have a population more than 20000.", "dataset_name": "county_public_safety_recommended"}, "expected": "[{\"count(*)\": 13}]", "metadata": {"app_mod_case_id": 12, "sql": {"query": "SELECT count(*) FROM city WHERE county_ID IN (SELECT county_ID FROM county_public_safety WHERE population  >  20000)", "tags": {"category": "COMPLEX_SELECT", "subcategories": ["SUBQUERY"]}}}}, {"input": {"nl_query": "Show the crime rate of counties with a city having white percentage more than 90.", "dataset_name": "county_public_safety_recommended"}, "expected": "[{\"Crime_rate\": 118.0}]", "metadata": {"app_mod_case_id": 13, "sql": {"query": "SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID WHERE T1.White  >  90", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "JOIN"]}}}}, {"input": {"nl_query": "Show the name of cities in the county that has the largest number of police officers.", "dataset_name": "county_public_safety_recommended"}, "expected": "[{\"Name\": \"Aguas Buenas\"}, {\"Name\": \"Aibonito\"}]", "metadata": {"app_mod_case_id": 11, "sql": {"query": "SELECT name FROM city WHERE county_ID  =  (SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)", "tags": {"category": "COMPLEX_SELECT", "subcategories": ["SUBQUERY"]}}}}, {"input": {"nl_query": "Show white percentages of cities and the crime rates of counties they are in.", "dataset_name": "county_public_safety_recommended"}, "expected": "[{\"White\": 93.1, \"Crime_rate\": 118.0}, {\"White\": 86.6, \"Crime_rate\": 118.0}, {\"White\": 83.0, \"Crime_rate\": 118.0}, {\"White\": 72.5, \"Crime_rate\": 123.0}, {\"White\": 83.5, \"Crime_rate\": 123.0}, {\"White\": 82.0, \"Crime_rate\": 178.0}, {\"White\": 84.5, \"Crime_rate\": 178.0}, {\"White\": 53.5, \"Crime_rate\": 178.0}, {\"White\": 80.7, \"Crime_rate\": 178.0}, {\"White\": 86.0, \"Crime_rate\": 178.0}, {\"White\": 78.3, \"Crime_rate\": 178.0}, {\"White\": 84.1, \"Crime_rate\": 150.0}, {\"White\": 76.1, \"Crime_rate\": 150.0}, {\"White\": 87.9, \"Crime_rate\": 49.0}, {\"White\": 61.2, \"Crime_rate\": 49.0}, {\"White\": 64.3, \"Crime_rate\": 174.0}, {\"White\": 70.7, \"Crime_rate\": 174.0}]", "metadata": {"app_mod_case_id": 10, "sql": {"query": "SELECT T1.White ,  T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "JOIN"]}}}}, {"input": {"nl_query": "List the names of the city with the top 5 white percentages.", "dataset_name": "county_public_safety_recommended"}, "expected": "[{\"Name\": \"Adjuntas\"}, {\"Name\": \"Camuy\"}, {\"Name\": \"Aguada\"}, {\"Name\": \"Barranquitas\"}, {\"Name\": \"Arecibo\"}]", "metadata": {"app_mod_case_id": 8, "sql": {"query": "SELECT Name FROM city ORDER BY White DESC LIMIT 5", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "Show names of cities and names of counties they are in.", "dataset_name": "county_public_safety_recommended"}, "expected": "[{\"Name\": \"Adjuntas\", \"Name(1)\": \"Abbotsford\"}, {\"Name\": \"Aguada\", \"Name(1)\": \"Abbotsford\"}, {\"Name\": \"Aguadilla\", \"Name(1)\": \"Abbotsford\"}, {\"Name\": \"Aguas Buenas\", \"Name(1)\": \"Burnaby\"}, {\"Name\": \"Aibonito\", \"Name(1)\": \"Burnaby\"}, {\"Name\": \"A\u00f1asco\", \"Name(1)\": \"Campbell River\"}, {\"Name\": \"Arecibo\", \"Name(1)\": \"Campbell River\"}, {\"Name\": \"Arroyo\", \"Name(1)\": \"Campbell River\"}, {\"Name\": \"Barceloneta\", \"Name(1)\": \"Campbell River\"}, {\"Name\": \"Barranquitas\", \"Name(1)\": \"Campbell River\"}, {\"Name\": \"Bayam\u00f3n\", \"Name(1)\": \"Campbell River\"}, {\"Name\": \"Cabo Rojo\", \"Name(1)\": \"Castlegar\"}, {\"Name\": \"Caguas\", \"Name(1)\": \"Castlegar\"}, {\"Name\": \"Camuy\", \"Name(1)\": \"Central Saanich\"}, {\"Name\": \"Can\u00f3vanas\", \"Name(1)\": \"Central Saanich\"}, {\"Name\": \"Carolina\", \"Name(1)\": \"Chilliwack\"}, {\"Name\": \"Cata\u00f1o\", \"Name(1)\": \"Chilliwack\"}]", "metadata": {"app_mod_case_id": 9, "sql": {"query": "SELECT T1.Name ,  T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "JOIN"]}}}}, {"input": {"nl_query": "This query retrieves a summary of orders placed by customers, including the total amount spent, total quantity of products ordered, and the most recent order date. It joins the Customers, Orders, Order_Items, and Products tables. It also includes subqueries for aggregating the total amount spent and total quantity of products ordered. String manipulation is used to concatenate customer names, and date manipulation to calculate the most recent order date.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_name\": \"Murl Shanahan\", \"email_address\": \"jovani64@example.com\", \"total_amount_spent\": 14359.11, \"total_quantity_ordered\": 17.0, \"most_recent_order_date\": \"2017-11-27T21:50:58\"}, {\"customer_name\": \"Vesta Leuschke\", \"email_address\": \"philip94@example.org\", \"total_amount_spent\": 4777.389999999999, \"total_quantity_ordered\": 9.0, \"most_recent_order_date\": \"2013-10-25T17:40:25\"}, {\"customer_name\": \"Jensen Muller\", \"email_address\": \"lew.nicolas@example.org\", \"total_amount_spent\": 6730.71, \"total_quantity_ordered\": 15.0, \"most_recent_order_date\": \"2012-08-25T07:51:54\"}, {\"customer_name\": \"Devin Glover\", \"email_address\": \"udeckow@example.com\", \"total_amount_spent\": 11662.36, \"total_quantity_ordered\": 19.0, \"most_recent_order_date\": \"2017-10-29T04:20:08\"}, {\"customer_name\": \"Neoma Hauck\", \"email_address\": \"michel92@example.org\", \"total_amount_spent\": 3943.12, \"total_quantity_ordered\": 4.0, \"most_recent_order_date\": \"2017-12-04T02:59:10\"}, {\"customer_name\": \"Dee Larkin\", \"email_address\": \"thora.torphy@example.org\", \"total_amount_spent\": 639.76, \"total_quantity_ordered\": 1.0, \"most_recent_order_date\": \"2017-05-24T19:26:44\"}]", "metadata": {"app_mod_case_id": 4, "sql": {"query": "\n        SELECT \n            CONCAT(c.customer_first_name, ' ', c.customer_last_name) AS customer_name,\n            c.email_address,\n            SUM(oi.product_quantity * p.unit_price) AS total_amount_spent,\n            SUM(oi.product_quantity) AS total_quantity_ordered,\n            MAX(o.date_order_placed) AS most_recent_order_date\n        FROM \n            Customers c\n        JOIN \n            Orders o ON c.customer_id = o.customer_id\n        JOIN \n            Order_Items oi ON o.order_id = oi.order_id\n        JOIN \n            Products p ON oi.product_id = p.product_id\n        GROUP BY \n            c.customer_id,\n            c.customer_first_name,\n            c.customer_last_name,\n            c.email_address\n    ;", "tags": null}}}, {"input": {"nl_query": "Select total transaction amount and number of transactions per customer, grouped by gender and country, including a case-when statement for high-value transactions.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_id\": 13, \"gender\": \"0\", \"country\": \"USA\", \"total_transactions\": 5, \"total_amount\": 5986.89, \"total_orders\": 0, \"total_accounts\": 4, \"transaction_value_category\": \"Regular\"}, {\"customer_id\": 8, \"gender\": \"0\", \"country\": \"USA\", \"total_transactions\": 5, \"total_amount\": 5808.06, \"total_orders\": 1, \"total_accounts\": 4, \"transaction_value_category\": \"Regular\"}, {\"customer_id\": 12, \"gender\": \"0\", \"country\": \"USA\", \"total_transactions\": 3, \"total_amount\": 4643.46, \"total_orders\": 2, \"total_accounts\": 1, \"transaction_value_category\": \"Regular\"}, {\"customer_id\": 9, \"gender\": \"0\", \"country\": \"USA\", \"total_transactions\": 1, \"total_amount\": 1517.77, \"total_orders\": 0, \"total_accounts\": 1, \"transaction_value_category\": \"Regular\"}, {\"customer_id\": 15, \"gender\": \"0\", \"country\": \"USA\", \"total_transactions\": 1, \"total_amount\": 1979.66, \"total_orders\": 1, \"total_accounts\": 3, \"transaction_value_category\": \"Regular\"}]", "metadata": {"app_mod_case_id": 5, "sql": {"query": "SELECT c.customer_id, c.gender, c.country, COUNT(ft.transaction_id) AS total_transactions, SUM(ft.transaction_amount) AS total_amount, (SELECT COUNT(*) FROM Orders o WHERE o.customer_id = c.customer_id) AS total_orders, (SELECT COUNT(*) FROM Accounts a WHERE a.customer_id = c.customer_id) AS total_accounts, CASE WHEN SUM(ft.transaction_amount) > 10000 THEN 'High Value' ELSE 'Regular' END AS transaction_value_category FROM Customers c JOIN Accounts a ON c.customer_id = a.customer_id JOIN Financial_Transactions ft ON a.account_id = ft.account_id GROUP BY c.gender, c.country, c.customer_id;", "tags": null}}}, {"input": {"nl_query": "Select customer details along with their order and invoice details", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_id\": 2, \"customer_first_name\": \"Brennon\", \"customer_last_name\": \"Weimann\", \"order_id\": 9, \"date_order_placed\": \"2017-03-08T05:42:10\", \"invoice_number\": 1, \"invoice_date\": \"2018-03-01T16:40:48\", \"total_items_ordered\": 0, \"total_invoice_cost\": 79.48}, {\"customer_id\": 2, \"customer_first_name\": \"Brennon\", \"customer_last_name\": \"Weimann\", \"order_id\": 9, \"date_order_placed\": \"2017-03-08T05:42:10\", \"invoice_number\": 2, \"invoice_date\": \"2018-03-20T00:21:41\", \"total_items_ordered\": 0, \"total_invoice_cost\": null}, {\"customer_id\": 8, \"customer_first_name\": \"Meaghan\", \"customer_last_name\": \"Keeling\", \"order_id\": 3, \"date_order_placed\": \"2017-11-05T15:32:38\", \"invoice_number\": 3, \"invoice_date\": \"2018-03-05T08:47:33\", \"total_items_ordered\": 0, \"total_invoice_cost\": null}, {\"customer_id\": 2, \"customer_first_name\": \"Brennon\", \"customer_last_name\": \"Weimann\", \"order_id\": 9, \"date_order_placed\": \"2017-03-08T05:42:10\", \"invoice_number\": 4, \"invoice_date\": \"2018-02-28T19:01:06\", \"total_items_ordered\": 0, \"total_invoice_cost\": null}, {\"customer_id\": 10, \"customer_first_name\": \"Devin\", \"customer_last_name\": \"Glover\", \"order_id\": 13, \"date_order_placed\": \"2015-08-06T22:40:40\", \"invoice_number\": 5, \"invoice_date\": \"2018-03-07T02:04:32\", \"total_items_ordered\": 4, \"total_invoice_cost\": 61.0}, {\"customer_id\": 3, \"customer_first_name\": \"Joesph\", \"customer_last_name\": \"Schaefer\", \"order_id\": 8, \"date_order_placed\": \"2010-01-28T03:43:26\", \"invoice_number\": 6, \"invoice_date\": \"2018-03-16T21:57:43\", \"total_items_ordered\": 0, \"total_invoice_cost\": null}, {\"customer_id\": 11, \"customer_first_name\": \"Neoma\", \"customer_last_name\": \"Hauck\", \"order_id\": 10, \"date_order_placed\": \"2017-12-04T02:59:10\", \"invoice_number\": 7, \"invoice_date\": \"2018-03-13T07:27:38\", \"total_items_ordered\": 1, \"total_invoice_cost\": 51.27}, {\"customer_id\": 11, \"customer_first_name\": \"Neoma\", \"customer_last_name\": \"Hauck\", \"order_id\": 10, \"date_order_placed\": \"2017-12-04T02:59:10\", \"invoice_number\": 8, \"invoice_date\": \"2018-03-19T17:06:30\", \"total_items_ordered\": 1, \"total_invoice_cost\": null}, {\"customer_id\": 1, \"customer_first_name\": \"Dee\", \"customer_last_name\": \"Larkin\", \"order_id\": 12, \"date_order_placed\": \"2017-05-24T19:26:44\", \"invoice_number\": 9, \"invoice_date\": \"2018-03-16T11:01:06\", \"total_items_ordered\": 1, \"total_invoice_cost\": 228.57}, {\"customer_id\": 14, \"customer_first_name\": \"Percival\", \"customer_last_name\": \"Kessler\", \"order_id\": 11, \"date_order_placed\": \"2010-10-22T06:45:16\", \"invoice_number\": 10, \"invoice_date\": \"2018-03-01T01:44:08\", \"total_items_ordered\": 0, \"total_invoice_cost\": 131.15}, {\"customer_id\": 15, \"customer_first_name\": \"Ruby\", \"customer_last_name\": \"Boyle\", \"order_id\": 5, \"date_order_placed\": \"2015-05-17T03:05:32\", \"invoice_number\": 11, \"invoice_date\": \"2018-03-23T04:59:28\", \"total_items_ordered\": 0, \"total_invoice_cost\": 169.96}, {\"customer_id\": 8, \"customer_first_name\": \"Meaghan\", \"customer_last_name\": \"Keeling\", \"order_id\": 3, \"date_order_placed\": \"2017-11-05T15:32:38\", \"invoice_number\": 12, \"invoice_date\": \"2018-03-15T21:24:13\", \"total_items_ordered\": 0, \"total_invoice_cost\": 98.77}, {\"customer_id\": 8, \"customer_first_name\": \"Meaghan\", \"customer_last_name\": \"Keeling\", \"order_id\": 3, \"date_order_placed\": \"2017-11-05T15:32:38\", \"invoice_number\": 13, \"invoice_date\": \"2018-03-03T20:44:06\", \"total_items_ordered\": 0, \"total_invoice_cost\": null}, {\"customer_id\": 5, \"customer_first_name\": \"Murl\", \"customer_last_name\": \"Shanahan\", \"order_id\": 4, \"date_order_placed\": \"2017-11-27T21:50:58\", \"invoice_number\": 14, \"invoice_date\": \"2018-03-19T22:38:10\", \"total_items_ordered\": 3, \"total_invoice_cost\": 136.5}, {\"customer_id\": 10, \"customer_first_name\": \"Devin\", \"customer_last_name\": \"Glover\", \"order_id\": 14, \"date_order_placed\": \"2017-10-29T04:20:08\", \"invoice_number\": 15, \"invoice_date\": \"2018-03-15T09:38:49\", \"total_items_ordered\": 1, \"total_invoice_cost\": 82.77}]", "metadata": {"app_mod_case_id": 7, "sql": {"query": "SELECT c.customer_id, c.customer_first_name, c.customer_last_name, o.order_id, o.date_order_placed, i.invoice_number, i.invoice_date, (SELECT COUNT(*) FROM Order_Items oi WHERE oi.order_id = o.order_id) AS total_items_ordered, (SELECT SUM(il.derived_total_cost) FROM Invoice_Line_Items il WHERE il.invoice_number = i.invoice_number) AS total_invoice_cost FROM Customers c INNER JOIN Orders o ON c.customer_id = o.customer_id INNER JOIN Invoices i ON o.order_id = i.order_id;", "tags": null}}}, {"input": {"nl_query": "Select statement to retrieve customer information, total orders, total amount spent, and account status with multiple joins, aggregations, and string manipulations.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_id\": 1, \"full_name\": \"Dee A Larkin\", \"total_orders\": 1, \"total_amount_spent\": 0.0, \"total_amount_received\": 0.0, \"customer_status\": \"Regular\", \"gender\": \"Other\", \"email_username\": \"thora.torphy\"}, {\"customer_id\": 2, \"full_name\": \"Brennon H Weimann\", \"total_orders\": 1, \"total_amount_spent\": 0.0, \"total_amount_received\": 0.0, \"customer_status\": \"Regular\", \"gender\": \"Other\", \"email_username\": \"roosevelt.collier\"}, {\"customer_id\": 3, \"full_name\": \"Joesph K Schaefer\", \"total_orders\": 2, \"total_amount_spent\": 0.0, \"total_amount_received\": 0.0, \"customer_status\": \"Regular\", \"gender\": \"Other\", \"email_username\": \"homenick.ambrose\"}, {\"customer_id\": 5, \"full_name\": \"Murl B Shanahan\", \"total_orders\": 2, \"total_amount_spent\": 0.0, \"total_amount_received\": 0.0, \"customer_status\": \"Regular\", \"gender\": \"Other\", \"email_username\": \"jovani64\"}, {\"customer_id\": 6, \"full_name\": \"Vesta E Leuschke\", \"total_orders\": 1, \"total_amount_spent\": 0.0, \"total_amount_received\": 0.0, \"customer_status\": \"Regular\", \"gender\": \"Other\", \"email_username\": \"philip94\"}, {\"customer_id\": 8, \"full_name\": \"Meaghan M Keeling\", \"total_orders\": 5, \"total_amount_spent\": 0.0, \"total_amount_received\": 0.0, \"customer_status\": \"Regular\", \"gender\": \"Other\", \"email_username\": \"pyundt\"}, {\"customer_id\": 10, \"full_name\": \"Devin V Glover\", \"total_orders\": 2, \"total_amount_spent\": 0.0, \"total_amount_received\": 0.0, \"customer_status\": \"Regular\", \"gender\": \"Other\", \"email_username\": \"udeckow\"}, {\"customer_id\": 11, \"full_name\": \"Neoma G Hauck\", \"total_orders\": 1, \"total_amount_spent\": 0.0, \"total_amount_received\": 0.0, \"customer_status\": \"Regular\", \"gender\": \"Other\", \"email_username\": \"michel92\"}, {\"customer_id\": 12, \"full_name\": \"Jensen M Muller\", \"total_orders\": 6, \"total_amount_spent\": 0.0, \"total_amount_received\": 0.0, \"customer_status\": \"Regular\", \"gender\": \"Other\", \"email_username\": \"lew.nicolas\"}, {\"customer_id\": 14, \"full_name\": \"Percival B Kessler\", \"total_orders\": 1, \"total_amount_spent\": 0.0, \"total_amount_received\": 0.0, \"customer_status\": \"Regular\", \"gender\": \"Other\", \"email_username\": \"jacobi.shanon\"}, {\"customer_id\": 15, \"full_name\": \"Ruby K Boyle\", \"total_orders\": 1, \"total_amount_spent\": 0.0, \"total_amount_received\": 0.0, \"customer_status\": \"Regular\", \"gender\": \"Other\", \"email_username\": \"gwolff\"}]", "metadata": {"app_mod_case_id": 6, "sql": {"query": "\n        SELECT \n            c.customer_id,\n            CONCAT(c.customer_first_name, ' ', IFNULL(c.customer_middle_initial, ''), ' ', c.customer_last_name) AS full_name,\n            COUNT(o.order_id) AS total_orders,\n            SUM(CASE WHEN ft.transaction_type = 'Debit' THEN ft.transaction_amount ELSE 0 END) AS total_amount_spent,\n            SUM(CASE WHEN ft.transaction_type = 'Credit' THEN ft.transaction_amount ELSE 0 END) AS total_amount_received,\n            CASE \n                WHEN SUM(CASE WHEN ft.transaction_type = 'Debit' THEN ft.transaction_amount ELSE 0 END) > 1000 THEN 'High Value'\n                ELSE 'Regular'\n            END AS customer_status,\n            CASE \n                WHEN c.gender = 'M' THEN 'Male'\n                WHEN c.gender = 'F' THEN 'Female'\n                ELSE 'Other'\n            END AS gender,\n            LEFT(c.email_address, LOCATE('@', c.email_address) - 1) AS email_username\n        FROM \n            Customers c\n        JOIN \n            Orders o ON c.customer_id = o.customer_id\n        LEFT JOIN \n            Financial_Transactions ft ON c.customer_id = (SELECT customer_id FROM Accounts WHERE account_id = ft.account_id)\n        GROUP BY \n            c.customer_id, c.customer_first_name, c.customer_middle_initial, c.customer_last_name, c.gender, c.email_address\n        ORDER BY \n            total_amount_spent DESC;\n    ", "tags": null}}}, {"input": {"nl_query": "Selects customer information along with order details, grouped by customer ID, including a case-when statement to categorize customers by the number of orders.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_id\": 8, \"customer_first_name\": \"Meaghan\", \"customer_last_name\": \"Keeling\", \"total_orders\": 3, \"customer_category\": \"Infrequent\"}, {\"customer_id\": 5, \"customer_first_name\": \"Murl\", \"customer_last_name\": \"Shanahan\", \"total_orders\": 1, \"customer_category\": \"Infrequent\"}, {\"customer_id\": 15, \"customer_first_name\": \"Ruby\", \"customer_last_name\": \"Boyle\", \"total_orders\": 1, \"customer_category\": \"Infrequent\"}, {\"customer_id\": 3, \"customer_first_name\": \"Joesph\", \"customer_last_name\": \"Schaefer\", \"total_orders\": 1, \"customer_category\": \"Infrequent\"}, {\"customer_id\": 2, \"customer_first_name\": \"Brennon\", \"customer_last_name\": \"Weimann\", \"total_orders\": 3, \"customer_category\": \"Infrequent\"}, {\"customer_id\": 11, \"customer_first_name\": \"Neoma\", \"customer_last_name\": \"Hauck\", \"total_orders\": 2, \"customer_category\": \"Infrequent\"}, {\"customer_id\": 14, \"customer_first_name\": \"Percival\", \"customer_last_name\": \"Kessler\", \"total_orders\": 1, \"customer_category\": \"Infrequent\"}, {\"customer_id\": 1, \"customer_first_name\": \"Dee\", \"customer_last_name\": \"Larkin\", \"total_orders\": 1, \"customer_category\": \"Infrequent\"}, {\"customer_id\": 10, \"customer_first_name\": \"Devin\", \"customer_last_name\": \"Glover\", \"total_orders\": 2, \"customer_category\": \"Infrequent\"}]", "metadata": {"app_mod_case_id": 2, "sql": {"query": "SELECT Customers.customer_id, Customers.customer_first_name, Customers.customer_last_name, COUNT(Orders.order_id) AS total_orders, CASE WHEN COUNT(Orders.order_id) > 5 THEN 'Frequent' ELSE 'Infrequent' END AS customer_category FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN Invoices ON Orders.order_id = Invoices.order_id GROUP BY Customers.customer_id;", "tags": null}}}, {"input": {"nl_query": "This query retrieves customer details along with their order information, total transaction amount, and categorizes the customers based on the total amount spent. It includes joins, a subquery, aggregation, multiple group by fields, string manipulation, and case-when statements.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_id\": 12, \"full_name\": \"Jensen M Muller\", \"email_address\": \"lew.nicolas@example.org\", \"total_spent\": 9286.92, \"total_orders\": 2, \"customer_category\": \"Premium\"}, {\"customer_id\": 8, \"full_name\": \"Meaghan M Keeling\", \"email_address\": \"pyundt@example.org\", \"total_spent\": 5808.06, \"total_orders\": 1, \"customer_category\": \"Premium\"}, {\"customer_id\": 15, \"full_name\": \"Ruby K Boyle\", \"email_address\": \"gwolff@example.net\", \"total_spent\": 1979.66, \"total_orders\": 1, \"customer_category\": \"Premium\"}]", "metadata": {"app_mod_case_id": 3, "sql": {"query": "SELECT c.customer_id, CONCAT(c.customer_first_name, ' ', IFNULL(c.customer_middle_initial, ''), ' ', c.customer_last_name) AS full_name, c.email_address, SUM(ft.transaction_amount) AS total_spent, COUNT(DISTINCT o.order_id) AS total_orders, CASE WHEN SUM(ft.transaction_amount) > 1000 THEN 'Premium' WHEN SUM(ft.transaction_amount) BETWEEN 500 AND 1000 THEN 'Gold' ELSE 'Regular' END AS customer_category FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id JOIN Accounts a ON c.customer_id = a.customer_id JOIN Financial_Transactions ft ON a.account_id = ft.account_id WHERE c.country = 'USA' GROUP BY c.customer_id, c.customer_first_name, c.customer_middle_initial, c.customer_last_name, c.email_address HAVING total_spent > (SELECT AVG(transaction_amount) FROM Financial_Transactions) ORDER BY total_spent DESC;", "tags": null}}}, {"input": {"nl_query": "Select total number of orders, total order amount, and categorize customers based on the number of orders placed. Group by customer_id.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_id\": 5, \"customer_first_name\": \"Murl\", \"customer_last_name\": \"Shanahan\", \"total_orders\": 3, \"total_order_amount\": 14359.11, \"order_category\": \"Few Orders\"}, {\"customer_id\": 6, \"customer_first_name\": \"Vesta\", \"customer_last_name\": \"Leuschke\", \"total_orders\": 2, \"total_order_amount\": 4777.389999999999, \"order_category\": \"Few Orders\"}, {\"customer_id\": 12, \"customer_first_name\": \"Jensen\", \"customer_last_name\": \"Muller\", \"total_orders\": 3, \"total_order_amount\": 6730.71, \"order_category\": \"Few Orders\"}, {\"customer_id\": 10, \"customer_first_name\": \"Devin\", \"customer_last_name\": \"Glover\", \"total_orders\": 5, \"total_order_amount\": 11662.36, \"order_category\": \"Few Orders\"}, {\"customer_id\": 11, \"customer_first_name\": \"Neoma\", \"customer_last_name\": \"Hauck\", \"total_orders\": 1, \"total_order_amount\": 3943.12, \"order_category\": \"Single Order\"}, {\"customer_id\": 1, \"customer_first_name\": \"Dee\", \"customer_last_name\": \"Larkin\", \"total_orders\": 1, \"total_order_amount\": 639.76, \"order_category\": \"Single Order\"}]", "metadata": {"app_mod_case_id": 1, "sql": {"query": "SELECT c.customer_id, c.customer_first_name, c.customer_last_name, COUNT(o.order_id) AS total_orders, SUM(oi.product_quantity * p.unit_price) AS total_order_amount, CASE WHEN COUNT(o.order_id) = 1 THEN 'Single Order' WHEN COUNT(o.order_id) BETWEEN 2 AND 5 THEN 'Few Orders' ELSE 'Many Orders' END AS order_category FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id JOIN Order_Items oi ON o.order_id = oi.order_id JOIN Products p ON oi.product_id = p.product_id GROUP BY c.customer_id;", "tags": null}}}, {"input": {"nl_query": "Select statement to retrieve customer details with multiple aggregations, string manipulations, and case-when statements.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_id\": 1, \"full_name\": \"Dee A Larkin\", \"email_lowercase\": \"thora.torphy@example.org\", \"country_uppercase\": \"USA\", \"total_orders\": 1, \"orders_in_2023\": 0.0, \"male_customers\": 0.0, \"female_customers\": 0.0}, {\"customer_id\": 2, \"full_name\": \"Brennon H Weimann\", \"email_lowercase\": \"roosevelt.collier@example.org\", \"country_uppercase\": \"USA\", \"total_orders\": 1, \"orders_in_2023\": 0.0, \"male_customers\": 0.0, \"female_customers\": 0.0}, {\"customer_id\": 3, \"full_name\": \"Joesph K Schaefer\", \"email_lowercase\": \"homenick.ambrose@example.net\", \"country_uppercase\": \"USA\", \"total_orders\": 2, \"orders_in_2023\": 0.0, \"male_customers\": 0.0, \"female_customers\": 0.0}, {\"customer_id\": 4, \"full_name\": \"Zita L Trantow\", \"email_lowercase\": \"destinee06@example.com\", \"country_uppercase\": \"USA\", \"total_orders\": 0, \"orders_in_2023\": 0.0, \"male_customers\": 0.0, \"female_customers\": 0.0}, {\"customer_id\": 5, \"full_name\": \"Murl B Shanahan\", \"email_lowercase\": \"jovani64@example.com\", \"country_uppercase\": \"USA\", \"total_orders\": 2, \"orders_in_2023\": 0.0, \"male_customers\": 0.0, \"female_customers\": 0.0}, {\"customer_id\": 6, \"full_name\": \"Vesta E Leuschke\", \"email_lowercase\": \"philip94@example.org\", \"country_uppercase\": \"USA\", \"total_orders\": 1, \"orders_in_2023\": 0.0, \"male_customers\": 0.0, \"female_customers\": 0.0}, {\"customer_id\": 7, \"full_name\": \"Dangelo M Spinka\", \"email_lowercase\": \"zullrich@example.net\", \"country_uppercase\": \"USA\", \"total_orders\": 0, \"orders_in_2023\": 0.0, \"male_customers\": 0.0, \"female_customers\": 0.0}, {\"customer_id\": 8, \"full_name\": \"Meaghan M Keeling\", \"email_lowercase\": \"pyundt@example.org\", \"country_uppercase\": \"USA\", \"total_orders\": 1, \"orders_in_2023\": 0.0, \"male_customers\": 0.0, \"female_customers\": 0.0}, {\"customer_id\": 9, \"full_name\": \"Abbey B Ruecker\", \"email_lowercase\": \"anastacio45@example.org\", \"country_uppercase\": \"USA\", \"total_orders\": 0, \"orders_in_2023\": 0.0, \"male_customers\": 0.0, \"female_customers\": 0.0}, {\"customer_id\": 10, \"full_name\": \"Devin V Glover\", \"email_lowercase\": \"udeckow@example.com\", \"country_uppercase\": \"USA\", \"total_orders\": 2, \"orders_in_2023\": 0.0, \"male_customers\": 0.0, \"female_customers\": 0.0}, {\"customer_id\": 11, \"full_name\": \"Neoma G Hauck\", \"email_lowercase\": \"michel92@example.org\", \"country_uppercase\": \"USA\", \"total_orders\": 1, \"orders_in_2023\": 0.0, \"male_customers\": 0.0, \"female_customers\": 0.0}, {\"customer_id\": 12, \"full_name\": \"Jensen M Muller\", \"email_lowercase\": \"lew.nicolas@example.org\", \"country_uppercase\": \"USA\", \"total_orders\": 2, \"orders_in_2023\": 0.0, \"male_customers\": 0.0, \"female_customers\": 0.0}, {\"customer_id\": 13, \"full_name\": \"Kieran A Auer\", \"email_lowercase\": \"nnolan@example.org\", \"country_uppercase\": \"USA\", \"total_orders\": 0, \"orders_in_2023\": 0.0, \"male_customers\": 0.0, \"female_customers\": 0.0}, {\"customer_id\": 14, \"full_name\": \"Percival B Kessler\", \"email_lowercase\": \"jacobi.shanon@example.org\", \"country_uppercase\": \"USA\", \"total_orders\": 1, \"orders_in_2023\": 0.0, \"male_customers\": 0.0, \"female_customers\": 0.0}, {\"customer_id\": 15, \"full_name\": \"Ruby K Boyle\", \"email_lowercase\": \"gwolff@example.net\", \"country_uppercase\": \"USA\", \"total_orders\": 1, \"orders_in_2023\": 0.0, \"male_customers\": 0.0, \"female_customers\": 0.0}]", "metadata": {"app_mod_case_id": 21, "sql": {"query": "SELECT \n    c.customer_id, \n    CONCAT(c.customer_first_name, ' ', COALESCE(c.customer_middle_initial, ''), ' ', c.customer_last_name) AS full_name, \n    LOWER(c.email_address) AS email_lowercase, \n    UPPER(c.country) AS country_uppercase, \n    COUNT(o.order_id) AS total_orders, \n    SUM(CASE WHEN o.date_order_placed >= '2023-01-01' THEN 1 ELSE 0 END) AS orders_in_2023, \n    SUM(CASE WHEN c.gender = 'M' THEN 1 ELSE 0 END) AS male_customers, \n    SUM(CASE WHEN c.gender = 'F' THEN 1 ELSE 0 END) AS female_customers \nFROM \n    Customers c \n    LEFT JOIN Orders o ON c.customer_id = o.customer_id \nGROUP BY \n    c.customer_id, c.customer_first_name, c.customer_middle_initial, c.customer_last_name, c.email_address, c.country;", "tags": null}}}, {"input": {"nl_query": "Select statement fetching customer names, total orders, average order amount, formatted email addresses, and account status with various operations", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"full_name\": \"Murl B Shanahan\", \"email_address\": \"jovani64@example.com\", \"total_orders\": 3, \"avg_order_amount\": 4786.37, \"account_open_date\": null, \"account_status\": \"Old Account\"}, {\"full_name\": \"Vesta E Leuschke\", \"email_address\": \"philip94@example.org\", \"total_orders\": 2, \"avg_order_amount\": 2388.6949999999997, \"account_open_date\": \"2008-05-04\", \"account_status\": \"Old Account\"}, {\"full_name\": \"Jensen M Muller\", \"email_address\": \"lew.nicolas@example.org\", \"total_orders\": 3, \"avg_order_amount\": 2243.57, \"account_open_date\": \"2014-05-30\", \"account_status\": \"Old Account\"}, {\"full_name\": \"Devin V Glover\", \"email_address\": \"udeckow@example.com\", \"total_orders\": 5, \"avg_order_amount\": 2332.472, \"account_open_date\": null, \"account_status\": \"Old Account\"}, {\"full_name\": \"Neoma G Hauck\", \"email_address\": \"michel92@example.org\", \"total_orders\": 1, \"avg_order_amount\": 3943.12, \"account_open_date\": null, \"account_status\": \"Old Account\"}, {\"full_name\": \"Dee A Larkin\", \"email_address\": \"thora.torphy@example.org\", \"total_orders\": 1, \"avg_order_amount\": 639.76, \"account_open_date\": null, \"account_status\": \"Old Account\"}]", "metadata": {"app_mod_case_id": 20, "sql": {"query": "SELECT CONCAT(c.customer_first_name, ' ', COALESCE(c.customer_middle_initial, ''), ' ', c.customer_last_name) AS full_name, c.email_address, COUNT(o.order_id) AS total_orders, AVG(oi.product_quantity * p.unit_price) AS avg_order_amount, DATE_FORMAT(ca.date_account_opened, '%Y-%m-%d') AS account_open_date, CASE WHEN ca.date_account_opened > DATE_SUB(CURDATE(), INTERVAL 1 YEAR) THEN 'New Account' ELSE 'Old Account' END AS account_status FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id JOIN Order_Items oi ON o.order_id = oi.order_id JOIN Products p ON oi.product_id = p.product_id LEFT JOIN Accounts ca ON c.customer_id = ca.customer_id GROUP BY c.customer_id, c.email_address, ca.date_account_opened;", "tags": null}}}, {"input": {"nl_query": "Select customer names, total number of orders, and categorize by gender.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"full_name\": \"Dee A Larkin\", \"total_orders\": 1, \"gender_category\": \"Other\"}, {\"full_name\": \"Brennon H Weimann\", \"total_orders\": 1, \"gender_category\": \"Other\"}, {\"full_name\": \"Joesph K Schaefer\", \"total_orders\": 2, \"gender_category\": \"Other\"}, {\"full_name\": \"Zita L Trantow\", \"total_orders\": 0, \"gender_category\": \"Other\"}, {\"full_name\": \"Murl B Shanahan\", \"total_orders\": 2, \"gender_category\": \"Other\"}, {\"full_name\": \"Vesta E Leuschke\", \"total_orders\": 1, \"gender_category\": \"Other\"}, {\"full_name\": \"Dangelo M Spinka\", \"total_orders\": 0, \"gender_category\": \"Other\"}, {\"full_name\": \"Meaghan M Keeling\", \"total_orders\": 1, \"gender_category\": \"Other\"}, {\"full_name\": \"Abbey B Ruecker\", \"total_orders\": 0, \"gender_category\": \"Other\"}, {\"full_name\": \"Devin V Glover\", \"total_orders\": 2, \"gender_category\": \"Other\"}, {\"full_name\": \"Neoma G Hauck\", \"total_orders\": 1, \"gender_category\": \"Other\"}, {\"full_name\": \"Jensen M Muller\", \"total_orders\": 2, \"gender_category\": \"Other\"}, {\"full_name\": \"Kieran A Auer\", \"total_orders\": 0, \"gender_category\": \"Other\"}, {\"full_name\": \"Percival B Kessler\", \"total_orders\": 1, \"gender_category\": \"Other\"}, {\"full_name\": \"Ruby K Boyle\", \"total_orders\": 1, \"gender_category\": \"Other\"}]", "metadata": {"app_mod_case_id": 34, "sql": {"query": "SELECT CONCAT(c.customer_first_name, ' ', COALESCE(c.customer_middle_initial, ''), ' ', c.customer_last_name) AS full_name, COUNT(o.order_id) AS total_orders, CASE WHEN c.gender = 'M' THEN 'Male' WHEN c.gender = 'F' THEN 'Female' ELSE 'Other' END AS gender_category FROM Customers c LEFT JOIN Orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id;", "tags": null}}}, {"input": {"nl_query": "Retrieve the total order amount per customer with the count of orders they placed and the total transaction amount associated with their accounts.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_id\": 5, \"customer_first_name\": \"Murl\", \"customer_last_name\": \"Shanahan\", \"total_orders\": 3, \"total_order_amount\": 14359.11, \"total_transaction_amount\": null}, {\"customer_id\": 6, \"customer_first_name\": \"Vesta\", \"customer_last_name\": \"Leuschke\", \"total_orders\": 2, \"total_order_amount\": 4777.389999999999, \"total_transaction_amount\": null}, {\"customer_id\": 12, \"customer_first_name\": \"Jensen\", \"customer_last_name\": \"Muller\", \"total_orders\": 3, \"total_order_amount\": 6730.71, \"total_transaction_amount\": 4643.46}, {\"customer_id\": 10, \"customer_first_name\": \"Devin\", \"customer_last_name\": \"Glover\", \"total_orders\": 5, \"total_order_amount\": 11662.36, \"total_transaction_amount\": null}, {\"customer_id\": 11, \"customer_first_name\": \"Neoma\", \"customer_last_name\": \"Hauck\", \"total_orders\": 1, \"total_order_amount\": 3943.12, \"total_transaction_amount\": null}, {\"customer_id\": 1, \"customer_first_name\": \"Dee\", \"customer_last_name\": \"Larkin\", \"total_orders\": 1, \"total_order_amount\": 639.76, \"total_transaction_amount\": null}]", "metadata": {"app_mod_case_id": 22, "sql": {"query": "SELECT c.customer_id, c.customer_first_name, c.customer_last_name, COUNT(o.order_id) AS total_orders, SUM(oi.product_quantity * p.unit_price) AS total_order_amount, (SELECT SUM(ft.transaction_amount) FROM Financial_Transactions ft JOIN Accounts a ON ft.account_id = a.account_id WHERE a.customer_id = c.customer_id) AS total_transaction_amount FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id JOIN Order_Items oi ON o.order_id = oi.order_id JOIN Products p ON oi.product_id = p.product_id GROUP BY c.customer_id, c.customer_first_name, c.customer_last_name;", "tags": null}}}, {"input": {"nl_query": "Retrieve total transaction amounts by customer, categorized by transaction type, with gender-specific case statements.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_id\": 13, \"customer_first_name\": \"Kieran\", \"customer_last_name\": \"Auer\", \"gender\": \"0\", \"total_amount\": 3624.4, \"gender_case\": \"Other\", \"transaction_type_case\": \"Other Transaction\"}, {\"customer_id\": 8, \"customer_first_name\": \"Meaghan\", \"customer_last_name\": \"Keeling\", \"gender\": \"0\", \"total_amount\": 2123.41, \"gender_case\": \"Other\", \"transaction_type_case\": \"Other Transaction\"}, {\"customer_id\": 12, \"customer_first_name\": \"Jensen\", \"customer_last_name\": \"Muller\", \"gender\": \"0\", \"total_amount\": 3165.89, \"gender_case\": \"Other\", \"transaction_type_case\": \"Other Transaction\"}, {\"customer_id\": 8, \"customer_first_name\": \"Meaghan\", \"customer_last_name\": \"Keeling\", \"gender\": \"0\", \"total_amount\": 3684.65, \"gender_case\": \"Other\", \"transaction_type_case\": \"Other Transaction\"}, {\"customer_id\": 9, \"customer_first_name\": \"Abbey\", \"customer_last_name\": \"Ruecker\", \"gender\": \"0\", \"total_amount\": 1517.77, \"gender_case\": \"Other\", \"transaction_type_case\": \"Other Transaction\"}, {\"customer_id\": 12, \"customer_first_name\": \"Jensen\", \"customer_last_name\": \"Muller\", \"gender\": \"0\", \"total_amount\": 1477.57, \"gender_case\": \"Other\", \"transaction_type_case\": \"Other Transaction\"}, {\"customer_id\": 13, \"customer_first_name\": \"Kieran\", \"customer_last_name\": \"Auer\", \"gender\": \"0\", \"total_amount\": 2362.49, \"gender_case\": \"Other\", \"transaction_type_case\": \"Other Transaction\"}, {\"customer_id\": 15, \"customer_first_name\": \"Ruby\", \"customer_last_name\": \"Boyle\", \"gender\": \"0\", \"total_amount\": 1979.66, \"gender_case\": \"Other\", \"transaction_type_case\": \"Other Transaction\"}]", "metadata": {"app_mod_case_id": 23, "sql": {"query": "SELECT c.customer_id, c.customer_first_name, c.customer_last_name, c.gender, SUM(ft.transaction_amount) AS total_amount, CASE WHEN c.gender = 'M' THEN 'Male' WHEN c.gender = 'F' THEN 'Female' ELSE 'Other' END AS gender_case, CASE WHEN ft.transaction_type = 'Credit' THEN 'Credit Transaction' WHEN ft.transaction_type = 'Debit' THEN 'Debit Transaction' ELSE 'Other Transaction' END AS transaction_type_case FROM Customers c JOIN Accounts a ON c.customer_id = a.customer_id JOIN Financial_Transactions ft ON a.account_id = ft.account_id GROUP BY c.customer_id, c.customer_first_name, c.customer_last_name, c.gender, ft.transaction_type;", "tags": null}}}, {"input": {"nl_query": "Select total amount of orders placed by each customer, concatenating customer names, and filtering by a minimum order count.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_full_name\": \"Joesph Schaefer\", \"total_orders\": 2, \"order_count\": 2}, {\"customer_full_name\": \"Murl Shanahan\", \"total_orders\": 2, \"order_count\": 2}, {\"customer_full_name\": \"Devin Glover\", \"total_orders\": 2, \"order_count\": 2}, {\"customer_full_name\": \"Jensen Muller\", \"total_orders\": 2, \"order_count\": 2}]", "metadata": {"app_mod_case_id": 27, "sql": {"query": "SELECT CONCAT(c.customer_first_name, ' ', c.customer_last_name) AS customer_full_name, COUNT(o.order_id) AS total_orders, (SELECT COUNT(*) FROM Orders o2 WHERE o2.customer_id = c.customer_id) AS order_count FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id HAVING order_count > 1;", "tags": null}}}, {"input": {"nl_query": "Select statement to retrieve customers' full names, total orders, and average transaction amounts, joining Customers, Orders, and Financial_Transactions tables. Includes string manipulation to concatenate customer names and aggregations for total orders and average transaction amounts.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"full_name\": \"Vesta E Leuschke\", \"total_orders\": 3, \"avg_transaction_amount\": 1547.82}, {\"full_name\": \"Jensen M Muller\", \"total_orders\": 2, \"avg_transaction_amount\": 1903.41}, {\"full_name\": \"Percival B Kessler\", \"total_orders\": 1, \"avg_transaction_amount\": 1425.41}, {\"full_name\": \"Meaghan M Keeling\", \"total_orders\": 1, \"avg_transaction_amount\": 1517.77}, {\"full_name\": \"Neoma G Hauck\", \"total_orders\": 1, \"avg_transaction_amount\": 1462.62}]", "metadata": {"app_mod_case_id": 33, "sql": {"query": "SELECT CONCAT(c.customer_first_name, ' ', IFNULL(c.customer_middle_initial, ''), ' ', c.customer_last_name) AS full_name, COUNT(o.order_id) AS total_orders, AVG(f.transaction_amount) AS avg_transaction_amount FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id JOIN Financial_Transactions f ON c.customer_id = f.account_id GROUP BY c.customer_id;", "tags": null}}}, {"input": {"nl_query": "Select statement that fetches customer details, order information, and financial transactions with multiple joins, subquery, grouping, string manipulations, and case-when statements.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"full_name\": \"Meaghan M Keeling\", \"email_address\": \"pyundt@example.org\", \"total_orders\": 6, \"total_credits\": 0.0, \"total_debits\": 0.0, \"area_code\": \"060\", \"gender_description\": \"Other\", \"total_accounts\": 4}, {\"full_name\": \"Brennon H Weimann\", \"email_address\": \"roosevelt.collier@example.org\", \"total_orders\": 3, \"total_credits\": 0.0, \"total_debits\": 0.0, \"area_code\": \"(94\", \"gender_description\": \"Other\", \"total_accounts\": 0}, {\"full_name\": \"Murl B Shanahan\", \"email_address\": \"jovani64@example.com\", \"total_orders\": 2, \"total_credits\": 0.0, \"total_debits\": 0.0, \"area_code\": \"1-5\", \"gender_description\": \"Other\", \"total_accounts\": 0}, {\"full_name\": \"Devin V Glover\", \"email_address\": \"udeckow@example.com\", \"total_orders\": 3, \"total_credits\": 0.0, \"total_debits\": 0.0, \"area_code\": \"197\", \"gender_description\": \"Other\", \"total_accounts\": 0}, {\"full_name\": \"Joesph K Schaefer\", \"email_address\": \"homenick.ambrose@example.net\", \"total_orders\": 1, \"total_credits\": 0.0, \"total_debits\": 0.0, \"area_code\": \"(48\", \"gender_description\": \"Other\", \"total_accounts\": 1}]", "metadata": {"app_mod_case_id": 32, "sql": {"query": "SELECT \n    CONCAT(c.customer_first_name, ' ', IFNULL(c.customer_middle_initial, ''), ' ', c.customer_last_name) AS full_name,\n    c.email_address,\n    COUNT(o.order_id) AS total_orders,\n    SUM(CASE WHEN ft.transaction_type = 'Credit' THEN ft.transaction_amount ELSE 0 END) AS total_credits,\n    SUM(CASE WHEN ft.transaction_type = 'Debit' THEN ft.transaction_amount ELSE 0 END) AS total_debits,\n    LEFT(c.phone_number, 3) AS area_code,\n    CASE \n        WHEN c.gender = 'M' THEN 'Male'\n        WHEN c.gender = 'F' THEN 'Female'\n        ELSE 'Other'\n    END AS gender_description,\n    (SELECT COUNT(*) FROM Accounts a WHERE a.customer_id = c.customer_id) AS total_accounts\nFROM \n    Customers c\n    JOIN Orders o ON c.customer_id = o.customer_id\n    JOIN Invoices i ON o.order_id = i.order_id\n    JOIN Financial_Transactions ft ON i.invoice_number = ft.invoice_number\nGROUP BY \n    c.customer_id, c.customer_first_name, c.customer_middle_initial, c.customer_last_name, c.email_address, c.phone_number, c.gender;\n", "tags": null}}}, {"input": {"nl_query": "Select customer details with order count, formatted full name, account age in years, and gender description.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_id\": 8, \"full_name\": \"Meaghan M Keeling\", \"order_count\": 1, \"account_age_years\": 8, \"gender_description\": \"Other\"}, {\"customer_id\": 3, \"full_name\": \"Joesph K Schaefer\", \"order_count\": 2, \"account_age_years\": 7, \"gender_description\": \"Other\"}, {\"customer_id\": 8, \"full_name\": \"Meaghan M Keeling\", \"order_count\": 1, \"account_age_years\": 12, \"gender_description\": \"Other\"}, {\"customer_id\": 15, \"full_name\": \"Ruby K Boyle\", \"order_count\": 1, \"account_age_years\": 13, \"gender_description\": \"Other\"}, {\"customer_id\": 15, \"full_name\": \"Ruby K Boyle\", \"order_count\": 1, \"account_age_years\": 9, \"gender_description\": \"Other\"}, {\"customer_id\": 12, \"full_name\": \"Jensen M Muller\", \"order_count\": 2, \"account_age_years\": 10, \"gender_description\": \"Other\"}, {\"customer_id\": 13, \"full_name\": \"Kieran A Auer\", \"order_count\": 0, \"account_age_years\": 8, \"gender_description\": \"Other\"}, {\"customer_id\": 9, \"full_name\": \"Abbey B Ruecker\", \"order_count\": 0, \"account_age_years\": 15, \"gender_description\": \"Other\"}, {\"customer_id\": 8, \"full_name\": \"Meaghan M Keeling\", \"order_count\": 1, \"account_age_years\": 13, \"gender_description\": \"Other\"}, {\"customer_id\": 15, \"full_name\": \"Ruby K Boyle\", \"order_count\": 1, \"account_age_years\": 8, \"gender_description\": \"Other\"}, {\"customer_id\": 13, \"full_name\": \"Kieran A Auer\", \"order_count\": 0, \"account_age_years\": 12, \"gender_description\": \"Other\"}, {\"customer_id\": 8, \"full_name\": \"Meaghan M Keeling\", \"order_count\": 1, \"account_age_years\": 9, \"gender_description\": \"Other\"}, {\"customer_id\": 13, \"full_name\": \"Kieran A Auer\", \"order_count\": 0, \"account_age_years\": 14, \"gender_description\": \"Other\"}, {\"customer_id\": 13, \"full_name\": \"Kieran A Auer\", \"order_count\": 0, \"account_age_years\": 9, \"gender_description\": \"Other\"}, {\"customer_id\": 6, \"full_name\": \"Vesta E Leuschke\", \"order_count\": 1, \"account_age_years\": 16, \"gender_description\": \"Other\"}]", "metadata": {"app_mod_case_id": 26, "sql": {"query": "SELECT c.customer_id, CONCAT(c.customer_first_name, ' ', IFNULL(c.customer_middle_initial, ''), ' ', c.customer_last_name) AS full_name, (SELECT COUNT(*) FROM Orders o WHERE o.customer_id = c.customer_id) AS order_count, ROUND(TIMESTAMPDIFF(YEAR, a.date_account_opened, CURDATE()), 2) AS account_age_years, CASE c.gender WHEN 'M' THEN 'Male' WHEN 'F' THEN 'Female' ELSE 'Other' END AS gender_description FROM Customers c JOIN Accounts a ON c.customer_id = a.customer_id;", "tags": null}}}, {"input": {"nl_query": "Select statement to fetch customer details, total amount spent, average amount per transaction, and checks if they are active within the last year", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_id\": 8, \"customer_first_name\": \"Meaghan\", \"customer_last_name\": \"Keeling\", \"total_spent\": 5808.06, \"avg_transaction\": 1161.612, \"customer_status\": \"Inactive\"}, {\"customer_id\": 9, \"customer_first_name\": \"Abbey\", \"customer_last_name\": \"Ruecker\", \"total_spent\": 1517.77, \"avg_transaction\": 1517.77, \"customer_status\": \"Inactive\"}, {\"customer_id\": 12, \"customer_first_name\": \"Jensen\", \"customer_last_name\": \"Muller\", \"total_spent\": 4643.46, \"avg_transaction\": 1547.82, \"customer_status\": \"Inactive\"}, {\"customer_id\": 13, \"customer_first_name\": \"Kieran\", \"customer_last_name\": \"Auer\", \"total_spent\": 5986.89, \"avg_transaction\": 1197.378, \"customer_status\": \"Inactive\"}, {\"customer_id\": 15, \"customer_first_name\": \"Ruby\", \"customer_last_name\": \"Boyle\", \"total_spent\": 1979.66, \"avg_transaction\": 1979.66, \"customer_status\": \"Inactive\"}]", "metadata": {"app_mod_case_id": 30, "sql": {"query": "SELECT c.customer_id, c.customer_first_name, c.customer_last_name, SUM(ft.transaction_amount) AS total_spent, AVG(ft.transaction_amount) AS avg_transaction, CASE WHEN MAX(ft.transaction_date) >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) THEN 'Active' ELSE 'Inactive' END AS customer_status FROM Customers c JOIN Accounts a ON c.customer_id = a.customer_id JOIN Financial_Transactions ft ON a.account_id = ft.account_id WHERE c.country = 'USA' GROUP BY c.customer_id, c.customer_first_name, c.customer_last_name;", "tags": null}}}, {"input": {"nl_query": "Select customer details with orders, including full name, formatted phone number, and age of account. Includes a join, subquery, string and date manipulations, and a CASE-WHEN statement.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_id\": 13, \"full_name\": \"Kieran A Auer\", \"formatted_phone_number\": \"((15) 7)0-46-6\", \"account_name\": \"398\", \"account_age_in_days\": 3193, \"gender_description\": \"Other\", \"total_orders\": 0}, {\"customer_id\": 13, \"full_name\": \"Kieran A Auer\", \"formatted_phone_number\": \"((15) 7)0-46-6\", \"account_name\": \"191\", \"account_age_in_days\": 4405, \"gender_description\": \"Other\", \"total_orders\": 0}, {\"customer_id\": 13, \"full_name\": \"Kieran A Auer\", \"formatted_phone_number\": \"((15) 7)0-46-6\", \"account_name\": \"272\", \"account_age_in_days\": 5159, \"gender_description\": \"Other\", \"total_orders\": 0}, {\"customer_id\": 13, \"full_name\": \"Kieran A Auer\", \"formatted_phone_number\": \"((15) 7)0-46-6\", \"account_name\": \"861\", \"account_age_in_days\": 3503, \"gender_description\": \"Other\", \"total_orders\": 0}, {\"customer_id\": 15, \"full_name\": \"Ruby K Boyle\", \"formatted_phone_number\": \"(1-5) 46--302-\", \"account_name\": \"390\", \"account_age_in_days\": 4873, \"gender_description\": \"Other\", \"total_orders\": 1}, {\"customer_id\": 15, \"full_name\": \"Ruby K Boyle\", \"formatted_phone_number\": \"(1-5) 46--302-\", \"account_name\": \"935\", \"account_age_in_days\": 3642, \"gender_description\": \"Other\", \"total_orders\": 1}, {\"customer_id\": 15, \"full_name\": \"Ruby K Boyle\", \"formatted_phone_number\": \"(1-5) 46--302-\", \"account_name\": \"429\", \"account_age_in_days\": 3019, \"gender_description\": \"Other\", \"total_orders\": 1}, {\"customer_id\": 8, \"full_name\": \"Meaghan M Keeling\", \"formatted_phone_number\": \"(060) 155-1821\", \"account_name\": \"900\", \"account_age_in_days\": 2923, \"gender_description\": \"Other\", \"total_orders\": 1}, {\"customer_id\": 8, \"full_name\": \"Meaghan M Keeling\", \"formatted_phone_number\": \"(060) 155-1821\", \"account_name\": \"323\", \"account_age_in_days\": 4471, \"gender_description\": \"Other\", \"total_orders\": 1}, {\"customer_id\": 8, \"full_name\": \"Meaghan M Keeling\", \"formatted_phone_number\": \"(060) 155-1821\", \"account_name\": \"337\", \"account_age_in_days\": 5031, \"gender_description\": \"Other\", \"total_orders\": 1}, {\"customer_id\": 8, \"full_name\": \"Meaghan M Keeling\", \"formatted_phone_number\": \"(060) 155-1821\", \"account_name\": \"601\", \"account_age_in_days\": 3467, \"gender_description\": \"Other\", \"total_orders\": 1}, {\"customer_id\": 6, \"full_name\": \"Vesta E Leuschke\", \"formatted_phone_number\": \"(+69) (0)-7149\", \"account_name\": \"662\", \"account_age_in_days\": 5932, \"gender_description\": \"Other\", \"total_orders\": 1}, {\"customer_id\": 12, \"full_name\": \"Jensen M Muller\", \"formatted_phone_number\": \"((65) 0)4-06-8\", \"account_name\": \"371\", \"account_age_in_days\": 3715, \"gender_description\": \"Other\", \"total_orders\": 2}, {\"customer_id\": 9, \"full_name\": \"Abbey B Ruecker\", \"formatted_phone_number\": \"(1-3) 44--593-\", \"account_name\": \"710\", \"account_age_in_days\": 5527, \"gender_description\": \"Other\", \"total_orders\": 0}, {\"customer_id\": 3, \"full_name\": \"Joesph K Schaefer\", \"formatted_phone_number\": \"((48) 8)5-24-5\", \"account_name\": \"520\", \"account_age_in_days\": 2620, \"gender_description\": \"Other\", \"total_orders\": 2}]", "metadata": {"app_mod_case_id": 24, "sql": {"query": "\n        SELECT \n            c.customer_id,\n            CONCAT(c.customer_first_name, ' ', IFNULL(CONCAT(c.customer_middle_initial, ' '), ''), c.customer_last_name) AS full_name,\n            CONCAT('(', SUBSTRING(c.phone_number, 1, 3), ') ', SUBSTRING(c.phone_number, 4, 3), '-', SUBSTRING(c.phone_number, 7, 4)) AS formatted_phone_number,\n            a.account_name,\n            DATEDIFF(CURDATE(), a.date_account_opened) AS account_age_in_days,\n            CASE \n                WHEN c.gender = 'M' THEN 'Male'\n                WHEN c.gender = 'F' THEN 'Female'\n                ELSE 'Other'\n            END AS gender_description,\n            (SELECT COUNT(o.order_id) FROM Orders o WHERE o.customer_id = c.customer_id) AS total_orders\n        FROM \n            Customers c\n        JOIN \n            Accounts a ON c.customer_id = a.customer_id\n        WHERE \n            c.country = 'USA'\n        ORDER BY\n            c.customer_last_name;\n    ", "tags": null}}}, {"input": {"nl_query": "Select statement to retrieve customer's full name in uppercase and the year the account was opened.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"full_name_uppercase\": \"MEAGHAN KEELING\", \"account_opened_year\": 2016}, {\"full_name_uppercase\": \"JOESPH SCHAEFER\", \"account_opened_year\": 2017}, {\"full_name_uppercase\": \"MEAGHAN KEELING\", \"account_opened_year\": 2012}, {\"full_name_uppercase\": \"RUBY BOYLE\", \"account_opened_year\": 2011}, {\"full_name_uppercase\": \"RUBY BOYLE\", \"account_opened_year\": 2014}, {\"full_name_uppercase\": \"JENSEN MULLER\", \"account_opened_year\": 2014}, {\"full_name_uppercase\": \"KIERAN AUER\", \"account_opened_year\": 2015}, {\"full_name_uppercase\": \"ABBEY RUECKER\", \"account_opened_year\": 2009}, {\"full_name_uppercase\": \"MEAGHAN KEELING\", \"account_opened_year\": 2010}, {\"full_name_uppercase\": \"RUBY BOYLE\", \"account_opened_year\": 2016}, {\"full_name_uppercase\": \"KIERAN AUER\", \"account_opened_year\": 2012}, {\"full_name_uppercase\": \"MEAGHAN KEELING\", \"account_opened_year\": 2015}, {\"full_name_uppercase\": \"KIERAN AUER\", \"account_opened_year\": 2010}, {\"full_name_uppercase\": \"KIERAN AUER\", \"account_opened_year\": 2014}, {\"full_name_uppercase\": \"VESTA LEUSCHKE\", \"account_opened_year\": 2008}]", "metadata": {"app_mod_case_id": 18, "sql": {"query": "SELECT UPPER(CONCAT(customer_first_name, ' ', customer_last_name)) AS full_name_uppercase, YEAR(date_account_opened) AS account_opened_year FROM Customers JOIN Accounts ON Customers.customer_id = Accounts.customer_id;", "tags": null}}}, {"input": {"nl_query": "Select customers' full names and total orders placed with string manipulations and aggregation", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"full_name\": \"Dee A Larkin\", \"total_orders\": 1, \"email_lowercase\": \"thora.torphy@example.org\"}, {\"full_name\": \"Brennon H Weimann\", \"total_orders\": 1, \"email_lowercase\": \"roosevelt.collier@example.org\"}, {\"full_name\": \"Joesph K Schaefer\", \"total_orders\": 2, \"email_lowercase\": \"homenick.ambrose@example.net\"}, {\"full_name\": \"Zita L Trantow\", \"total_orders\": 0, \"email_lowercase\": \"destinee06@example.com\"}, {\"full_name\": \"Murl B Shanahan\", \"total_orders\": 2, \"email_lowercase\": \"jovani64@example.com\"}, {\"full_name\": \"Vesta E Leuschke\", \"total_orders\": 1, \"email_lowercase\": \"philip94@example.org\"}, {\"full_name\": \"Dangelo M Spinka\", \"total_orders\": 0, \"email_lowercase\": \"zullrich@example.net\"}, {\"full_name\": \"Meaghan M Keeling\", \"total_orders\": 1, \"email_lowercase\": \"pyundt@example.org\"}, {\"full_name\": \"Abbey B Ruecker\", \"total_orders\": 0, \"email_lowercase\": \"anastacio45@example.org\"}, {\"full_name\": \"Devin V Glover\", \"total_orders\": 2, \"email_lowercase\": \"udeckow@example.com\"}, {\"full_name\": \"Neoma G Hauck\", \"total_orders\": 1, \"email_lowercase\": \"michel92@example.org\"}, {\"full_name\": \"Jensen M Muller\", \"total_orders\": 2, \"email_lowercase\": \"lew.nicolas@example.org\"}, {\"full_name\": \"Kieran A Auer\", \"total_orders\": 0, \"email_lowercase\": \"nnolan@example.org\"}, {\"full_name\": \"Percival B Kessler\", \"total_orders\": 1, \"email_lowercase\": \"jacobi.shanon@example.org\"}, {\"full_name\": \"Ruby K Boyle\", \"total_orders\": 1, \"email_lowercase\": \"gwolff@example.net\"}]", "metadata": {"app_mod_case_id": 19, "sql": {"query": "SELECT CONCAT(c.customer_first_name, ' ', IFNULL(c.customer_middle_initial, ''), ' ', c.customer_last_name) AS full_name, COUNT(o.order_id) AS total_orders, LOWER(c.email_address) AS email_lowercase FROM Customers c LEFT JOIN Orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id;", "tags": null}}}, {"input": {"nl_query": "Select the total amount spent by customers, grouped by customer name and product category. Include a case-when statement to determine if the total amount spent is above or below a certain threshold.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_name\": \"Devin Glover\", \"product_type_description\": \"Dvd products\", \"total_spent\": 265.77, \"spending_category\": \"Below Threshold\"}, {\"customer_name\": \"Murl Shanahan\", \"product_type_description\": \"Dvd products\", \"total_spent\": 136.5, \"spending_category\": \"Below Threshold\"}, {\"customer_name\": \"Murl Shanahan\", \"product_type_description\": \"Electrical devices\", \"total_spent\": 273.0, \"spending_category\": \"Below Threshold\"}, {\"customer_name\": \"Devin Glover\", \"product_type_description\": \"Food\", \"total_spent\": 61.0, \"spending_category\": \"Below Threshold\"}]", "metadata": {"app_mod_case_id": 25, "sql": {"query": "\n    SELECT \n        CONCAT(c.customer_first_name, ' ', c.customer_last_name) AS customer_name,\n        pc.product_type_description,\n        SUM(il.derived_total_cost) AS total_spent,\n        CASE \n            WHEN SUM(il.derived_total_cost) > 1000 THEN 'Above Threshold'\n            ELSE 'Below Threshold'\n        END AS spending_category\n    FROM \n        Customers c\n    JOIN \n        Orders o ON c.customer_id = o.customer_id\n    JOIN \n        Order_Items oi ON o.order_id = oi.order_id\n    JOIN \n        Products p ON oi.product_id = p.product_id\n    JOIN \n        Product_Categories pc ON p.production_type_code = pc.production_type_code\n    JOIN \n        Invoices i ON o.order_id = i.order_id\n    JOIN \n        Invoice_Line_Items il ON i.invoice_number = il.invoice_number\n    WHERE \n        il.invoice_number IN (SELECT invoice_number FROM Financial_Transactions WHERE transaction_amount > 0)\n    GROUP BY \n        customer_name, pc.product_type_description;", "tags": null}}}, {"input": {"nl_query": "Select customer full names with order count and total order value, including case statements and string manipulation", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"full_name\": \"Dee A Larkin\", \"total_orders\": 1, \"total_order_value\": 639.76, \"gender_description\": \"Other\", \"order_status\": \"Has Orders\"}, {\"full_name\": \"Brennon H Weimann\", \"total_orders\": 1, \"total_order_value\": null, \"gender_description\": \"Other\", \"order_status\": \"Has Orders\"}, {\"full_name\": \"Joesph K Schaefer\", \"total_orders\": 2, \"total_order_value\": null, \"gender_description\": \"Other\", \"order_status\": \"Has Orders\"}, {\"full_name\": \"Zita L Trantow\", \"total_orders\": 0, \"total_order_value\": null, \"gender_description\": \"Other\", \"order_status\": \"No Orders\"}, {\"full_name\": \"Murl B Shanahan\", \"total_orders\": 2, \"total_order_value\": 14359.11, \"gender_description\": \"Other\", \"order_status\": \"Has Orders\"}, {\"full_name\": \"Vesta E Leuschke\", \"total_orders\": 1, \"total_order_value\": 4777.389999999999, \"gender_description\": \"Other\", \"order_status\": \"Has Orders\"}, {\"full_name\": \"Dangelo M Spinka\", \"total_orders\": 0, \"total_order_value\": null, \"gender_description\": \"Other\", \"order_status\": \"No Orders\"}, {\"full_name\": \"Meaghan M Keeling\", \"total_orders\": 1, \"total_order_value\": null, \"gender_description\": \"Other\", \"order_status\": \"Has Orders\"}, {\"full_name\": \"Abbey B Ruecker\", \"total_orders\": 0, \"total_order_value\": null, \"gender_description\": \"Other\", \"order_status\": \"No Orders\"}, {\"full_name\": \"Devin V Glover\", \"total_orders\": 2, \"total_order_value\": 11662.359999999999, \"gender_description\": \"Other\", \"order_status\": \"Has Orders\"}, {\"full_name\": \"Neoma G Hauck\", \"total_orders\": 1, \"total_order_value\": 3943.12, \"gender_description\": \"Other\", \"order_status\": \"Has Orders\"}, {\"full_name\": \"Jensen M Muller\", \"total_orders\": 2, \"total_order_value\": 6730.710000000001, \"gender_description\": \"Other\", \"order_status\": \"Has Orders\"}, {\"full_name\": \"Kieran A Auer\", \"total_orders\": 0, \"total_order_value\": null, \"gender_description\": \"Other\", \"order_status\": \"No Orders\"}, {\"full_name\": \"Percival B Kessler\", \"total_orders\": 1, \"total_order_value\": null, \"gender_description\": \"Other\", \"order_status\": \"Has Orders\"}, {\"full_name\": \"Ruby K Boyle\", \"total_orders\": 1, \"total_order_value\": null, \"gender_description\": \"Other\", \"order_status\": \"Has Orders\"}]", "metadata": {"app_mod_case_id": 31, "sql": {"query": "SELECT \n    CONCAT(c.customer_first_name, ' ', IFNULL(c.customer_middle_initial, ''), ' ', c.customer_last_name) AS full_name, \n    (SELECT COUNT(o.order_id) FROM Orders o WHERE o.customer_id = c.customer_id) AS total_orders, \n    (SELECT SUM(oi.product_quantity * p.unit_price) \n        FROM Order_Items oi \n        JOIN Products p ON oi.product_id = p.product_id \n        JOIN Orders o ON oi.order_id = o.order_id \n        WHERE o.customer_id = c.customer_id) AS total_order_value, \n    CASE \n        WHEN c.gender = 'M' THEN 'Male' \n        WHEN c.gender = 'F' THEN 'Female' \n        ELSE 'Other' \n    END AS gender_description, \n    CASE \n        WHEN (SELECT COUNT(o.order_id) FROM Orders o WHERE o.customer_id = c.customer_id) > 0 THEN 'Has Orders' \n        ELSE 'No Orders' \n    END AS order_status \nFROM \n    Customers c;", "tags": null}}}, {"input": {"nl_query": "This query retrieves customer information along with their order count, total spend, and categorizes them based on their total spend in the current year.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_id\": 1, \"customer_first_name\": \"Dee\", \"customer_last_name\": \"Larkin\", \"order_count\": 1, \"total_spend\": 639.76, \"order_year_category\": \"Previous Years\", \"spend_category\": \"Medium Spender\"}, {\"customer_id\": 5, \"customer_first_name\": \"Murl\", \"customer_last_name\": \"Shanahan\", \"order_count\": 3, \"total_spend\": 14359.11, \"order_year_category\": \"Previous Years\", \"spend_category\": \"High Spender\"}, {\"customer_id\": 6, \"customer_first_name\": \"Vesta\", \"customer_last_name\": \"Leuschke\", \"order_count\": 2, \"total_spend\": 4777.389999999999, \"order_year_category\": \"Previous Years\", \"spend_category\": \"High Spender\"}, {\"customer_id\": 10, \"customer_first_name\": \"Devin\", \"customer_last_name\": \"Glover\", \"order_count\": 5, \"total_spend\": 11662.359999999999, \"order_year_category\": \"Previous Years\", \"spend_category\": \"High Spender\"}, {\"customer_id\": 11, \"customer_first_name\": \"Neoma\", \"customer_last_name\": \"Hauck\", \"order_count\": 1, \"total_spend\": 3943.12, \"order_year_category\": \"Previous Years\", \"spend_category\": \"High Spender\"}, {\"customer_id\": 12, \"customer_first_name\": \"Jensen\", \"customer_last_name\": \"Muller\", \"order_count\": 3, \"total_spend\": 6730.710000000001, \"order_year_category\": \"Previous Years\", \"spend_category\": \"High Spender\"}]", "metadata": {"app_mod_case_id": 28, "sql": {"query": "SELECT c.customer_id, c.customer_first_name, c.customer_last_name, COUNT(o.order_id) AS order_count, SUM(oi.product_quantity * p.unit_price) AS total_spend, CASE WHEN YEAR(o.date_order_placed) = YEAR(CURDATE()) THEN 'Current Year' ELSE 'Previous Years' END AS order_year_category, CASE WHEN SUM(oi.product_quantity * p.unit_price) > 1000 THEN 'High Spender' WHEN SUM(oi.product_quantity * p.unit_price) BETWEEN 500 AND 1000 THEN 'Medium Spender' ELSE 'Low Spender' END AS spend_category FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id JOIN Order_Items oi ON o.order_id = oi.order_id JOIN Products p ON oi.product_id = p.product_id WHERE c.country = 'USA' GROUP BY c.customer_id, order_year_category;", "tags": null}}}, {"input": {"nl_query": "Retrieve the total number of orders per customer, along with the customer's full name in uppercase, and group by customer.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_id\": 1, \"customer_full_name\": \"DEE LARKIN\", \"total_orders\": 1}, {\"customer_id\": 2, \"customer_full_name\": \"BRENNON WEIMANN\", \"total_orders\": 1}, {\"customer_id\": 3, \"customer_full_name\": \"JOESPH SCHAEFER\", \"total_orders\": 2}, {\"customer_id\": 5, \"customer_full_name\": \"MURL SHANAHAN\", \"total_orders\": 2}, {\"customer_id\": 6, \"customer_full_name\": \"VESTA LEUSCHKE\", \"total_orders\": 1}, {\"customer_id\": 8, \"customer_full_name\": \"MEAGHAN KEELING\", \"total_orders\": 1}, {\"customer_id\": 10, \"customer_full_name\": \"DEVIN GLOVER\", \"total_orders\": 2}, {\"customer_id\": 11, \"customer_full_name\": \"NEOMA HAUCK\", \"total_orders\": 1}, {\"customer_id\": 12, \"customer_full_name\": \"JENSEN MULLER\", \"total_orders\": 2}, {\"customer_id\": 14, \"customer_full_name\": \"PERCIVAL KESSLER\", \"total_orders\": 1}, {\"customer_id\": 15, \"customer_full_name\": \"RUBY BOYLE\", \"total_orders\": 1}]", "metadata": {"app_mod_case_id": 14, "sql": {"query": "SELECT c.customer_id, CONCAT(UPPER(c.customer_first_name), ' ', UPPER(c.customer_last_name)) AS customer_full_name, COUNT(o.order_id) AS total_orders FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id;", "tags": null}}}, {"input": {"nl_query": "Select total transaction amount per customer with date and string manipulations, including a join, aggregation, multiple group by, string manipulations, date manipulations, and a case-when statement.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_id\": 6, \"full_name\": \"Vesta Leuschke\", \"order_year\": 2013, \"order_month\": 10, \"total_transaction_amount\": 4643.46, \"gender\": \"Other\"}, {\"customer_id\": 12, \"full_name\": \"Jensen Muller\", \"order_year\": 2012, \"order_month\": 6, \"total_transaction_amount\": 1903.41, \"gender\": \"Other\"}, {\"customer_id\": 12, \"full_name\": \"Jensen Muller\", \"order_year\": 2012, \"order_month\": 8, \"total_transaction_amount\": 1903.41, \"gender\": \"Other\"}, {\"customer_id\": 8, \"full_name\": \"Meaghan Keeling\", \"order_year\": 2017, \"order_month\": 11, \"total_transaction_amount\": 1517.77, \"gender\": \"Other\"}, {\"customer_id\": 11, \"full_name\": \"Neoma Hauck\", \"order_year\": 2017, \"order_month\": 12, \"total_transaction_amount\": 1462.62, \"gender\": \"Other\"}, {\"customer_id\": 14, \"full_name\": \"Percival Kessler\", \"order_year\": 2010, \"order_month\": 10, \"total_transaction_amount\": 1425.41, \"gender\": \"Other\"}]", "metadata": {"app_mod_case_id": 15, "sql": {"query": "SELECT c.customer_id, CONCAT(c.customer_first_name, ' ', c.customer_last_name) AS full_name, YEAR(o.date_order_placed) AS order_year, MONTH(o.date_order_placed) AS order_month, SUM(ft.transaction_amount) AS total_transaction_amount, CASE WHEN c.gender = 'M' THEN 'Male' WHEN c.gender = 'F' THEN 'Female' ELSE 'Other' END AS gender FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id JOIN Financial_Transactions ft ON c.customer_id = ft.account_id GROUP BY c.customer_id, full_name, order_year, order_month, gender ORDER BY total_transaction_amount DESC;", "tags": null}}}, {"input": {"nl_query": "Select total transaction amount for each customer grouped by customer_id, including joins between Customers, Orders, Invoices, Accounts, and Financial_Transactions.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_id\": 8, \"customer_first_name\": \"Meaghan\", \"customer_last_name\": \"Keeling\", \"total_transaction_amount\": 17424.18}, {\"customer_id\": 15, \"customer_first_name\": \"Ruby\", \"customer_last_name\": \"Boyle\", \"total_transaction_amount\": 1979.66}]", "metadata": {"app_mod_case_id": 29, "sql": {"query": "SELECT c.customer_id, c.customer_first_name, c.customer_last_name, SUM(ft.transaction_amount) as total_transaction_amount FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id JOIN Invoices i ON o.order_id = i.order_id JOIN Accounts a ON c.customer_id = a.customer_id JOIN Financial_Transactions ft ON a.account_id = ft.account_id GROUP BY c.customer_id, c.customer_first_name, c.customer_last_name;", "tags": null}}}, {"input": {"nl_query": "This query retrieves customer information along with aggregated order and transaction details, including a concatenated customer name, total orders, total transactions, average transaction amount, year and month of account opening, and a gender-based case statement.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_id\": 1, \"full_name\": \"Dee A Larkin\", \"total_orders\": 1, \"total_transactions\": 0, \"avg_transaction_amount\": null, \"account_open_year\": null, \"account_open_month\": null, \"gender_description\": \"Other\"}, {\"customer_id\": 2, \"full_name\": \"Brennon H Weimann\", \"total_orders\": 1, \"total_transactions\": 0, \"avg_transaction_amount\": null, \"account_open_year\": null, \"account_open_month\": null, \"gender_description\": \"Other\"}, {\"customer_id\": 3, \"full_name\": \"Joesph K Schaefer\", \"total_orders\": 2, \"total_transactions\": 0, \"avg_transaction_amount\": null, \"account_open_year\": 2017, \"account_open_month\": 5, \"gender_description\": \"Other\"}, {\"customer_id\": 4, \"full_name\": \"Zita L Trantow\", \"total_orders\": 0, \"total_transactions\": 0, \"avg_transaction_amount\": null, \"account_open_year\": null, \"account_open_month\": null, \"gender_description\": \"Other\"}, {\"customer_id\": 5, \"full_name\": \"Murl B Shanahan\", \"total_orders\": 2, \"total_transactions\": 0, \"avg_transaction_amount\": null, \"account_open_year\": null, \"account_open_month\": null, \"gender_description\": \"Other\"}, {\"customer_id\": 6, \"full_name\": \"Vesta E Leuschke\", \"total_orders\": 1, \"total_transactions\": 0, \"avg_transaction_amount\": null, \"account_open_year\": 2008, \"account_open_month\": 5, \"gender_description\": \"Other\"}, {\"customer_id\": 7, \"full_name\": \"Dangelo M Spinka\", \"total_orders\": 0, \"total_transactions\": 0, \"avg_transaction_amount\": null, \"account_open_year\": null, \"account_open_month\": null, \"gender_description\": \"Other\"}, {\"customer_id\": 8, \"full_name\": \"Meaghan M Keeling\", \"total_orders\": 1, \"total_transactions\": 0, \"avg_transaction_amount\": null, \"account_open_year\": 2016, \"account_open_month\": 7, \"gender_description\": \"Other\"}, {\"customer_id\": 8, \"full_name\": \"Meaghan M Keeling\", \"total_orders\": 1, \"total_transactions\": 0, \"avg_transaction_amount\": null, \"account_open_year\": 2012, \"account_open_month\": 5, \"gender_description\": \"Other\"}, {\"customer_id\": 8, \"full_name\": \"Meaghan M Keeling\", \"total_orders\": 4, \"total_transactions\": 4, \"avg_transaction_amount\": 976.1625, \"account_open_year\": 2010, \"account_open_month\": 10, \"gender_description\": \"Other\"}, {\"customer_id\": 8, \"full_name\": \"Meaghan M Keeling\", \"total_orders\": 1, \"total_transactions\": 1, \"avg_transaction_amount\": 1903.41, \"account_open_year\": 2015, \"account_open_month\": 2, \"gender_description\": \"Other\"}, {\"customer_id\": 9, \"full_name\": \"Abbey B Ruecker\", \"total_orders\": 0, \"total_transactions\": 1, \"avg_transaction_amount\": 1517.77, \"account_open_year\": 2009, \"account_open_month\": 6, \"gender_description\": \"Other\"}, {\"customer_id\": 10, \"full_name\": \"Devin V Glover\", \"total_orders\": 2, \"total_transactions\": 0, \"avg_transaction_amount\": null, \"account_open_year\": null, \"account_open_month\": null, \"gender_description\": \"Other\"}, {\"customer_id\": 11, \"full_name\": \"Neoma G Hauck\", \"total_orders\": 1, \"total_transactions\": 0, \"avg_transaction_amount\": null, \"account_open_year\": null, \"account_open_month\": null, \"gender_description\": \"Other\"}, {\"customer_id\": 12, \"full_name\": \"Jensen M Muller\", \"total_orders\": 6, \"total_transactions\": 6, \"avg_transaction_amount\": 1547.82, \"account_open_year\": 2014, \"account_open_month\": 5, \"gender_description\": \"Other\"}, {\"customer_id\": 13, \"full_name\": \"Kieran A Auer\", \"total_orders\": 0, \"total_transactions\": 0, \"avg_transaction_amount\": null, \"account_open_year\": 2015, \"account_open_month\": 11, \"gender_description\": \"Other\"}, {\"customer_id\": 13, \"full_name\": \"Kieran A Auer\", \"total_orders\": 0, \"total_transactions\": 1, \"avg_transaction_amount\": 1462.62, \"account_open_year\": 2012, \"account_open_month\": 7, \"gender_description\": \"Other\"}, {\"customer_id\": 13, \"full_name\": \"Kieran A Auer\", \"total_orders\": 0, \"total_transactions\": 3, \"avg_transaction_amount\": 1032.95333333, \"account_open_year\": 2010, \"account_open_month\": 6, \"gender_description\": \"Other\"}, {\"customer_id\": 13, \"full_name\": \"Kieran A Auer\", \"total_orders\": 0, \"total_transactions\": 1, \"avg_transaction_amount\": 1425.41, \"account_open_year\": 2014, \"account_open_month\": 12, \"gender_description\": \"Other\"}, {\"customer_id\": 14, \"full_name\": \"Percival B Kessler\", \"total_orders\": 1, \"total_transactions\": 0, \"avg_transaction_amount\": null, \"account_open_year\": null, \"account_open_month\": null, \"gender_description\": \"Other\"}, {\"customer_id\": 15, \"full_name\": \"Ruby K Boyle\", \"total_orders\": 1, \"total_transactions\": 1, \"avg_transaction_amount\": 1979.66, \"account_open_year\": 2011, \"account_open_month\": 3, \"gender_description\": \"Other\"}, {\"customer_id\": 15, \"full_name\": \"Ruby K Boyle\", \"total_orders\": 1, \"total_transactions\": 0, \"avg_transaction_amount\": null, \"account_open_year\": 2014, \"account_open_month\": 8, \"gender_description\": \"Other\"}, {\"customer_id\": 15, \"full_name\": \"Ruby K Boyle\", \"total_orders\": 1, \"total_transactions\": 0, \"avg_transaction_amount\": null, \"account_open_year\": 2016, \"account_open_month\": 4, \"gender_description\": \"Other\"}]", "metadata": {"app_mod_case_id": 17, "sql": {"query": "SELECT c.customer_id, CONCAT(c.customer_first_name, ' ', IFNULL(c.customer_middle_initial, ''), ' ', c.customer_last_name) AS full_name, COUNT(o.order_id) AS total_orders, COUNT(ft.transaction_id) AS total_transactions, AVG(ft.transaction_amount) AS avg_transaction_amount, YEAR(a.date_account_opened) AS account_open_year, MONTH(a.date_account_opened) AS account_open_month, CASE WHEN c.gender = 'M' THEN 'Male' WHEN c.gender = 'F' THEN 'Female' ELSE 'Other' END AS gender_description FROM Customers c LEFT JOIN Orders o ON c.customer_id = o.customer_id LEFT JOIN Accounts a ON c.customer_id = a.customer_id LEFT JOIN Financial_Transactions ft ON a.account_id = ft.account_id GROUP BY c.customer_id, YEAR(a.date_account_opened), MONTH(a.date_account_opened);", "tags": null}}}, {"input": {"nl_query": "Select statement with multiple joins, aggregations, group by, and date manipulation", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_id\": 10, \"customer_first_name\": \"Devin\", \"customer_last_name\": \"Glover\", \"order_year\": 2015, \"total_orders\": 6, \"total_quantity\": 22.0, \"total_spent\": 416.6}, {\"customer_id\": 6, \"customer_first_name\": \"Vesta\", \"customer_last_name\": \"Leuschke\", \"order_year\": 2013, \"total_orders\": 2, \"total_quantity\": 9.0, \"total_spent\": 139.04}, {\"customer_id\": 12, \"customer_first_name\": \"Jensen\", \"customer_last_name\": \"Muller\", \"order_year\": 2012, \"total_orders\": 3, \"total_quantity\": 15.0, \"total_spent\": 156.86}, {\"customer_id\": 11, \"customer_first_name\": \"Neoma\", \"customer_last_name\": \"Hauck\", \"order_year\": 2017, \"total_orders\": 3, \"total_quantity\": 12.0, \"total_spent\": 243.57}, {\"customer_id\": 10, \"customer_first_name\": \"Devin\", \"customer_last_name\": \"Glover\", \"order_year\": 2017, \"total_orders\": 1, \"total_quantity\": 1.0, \"total_spent\": 83.4}]", "metadata": {"app_mod_case_id": 16, "sql": {"query": "SELECT c.customer_id, c.customer_first_name, c.customer_last_name, YEAR(o.date_order_placed) AS order_year, COUNT(o.order_id) AS total_orders, SUM(ot.product_quantity) AS total_quantity, SUM(il.derived_total_cost) AS total_spent FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id JOIN Order_Items ot ON o.order_id = ot.order_id JOIN Invoice_Line_Items il ON ot.order_item_id = il.order_item_id GROUP BY c.customer_id, order_year;", "tags": null}}}, {"input": {"nl_query": "Select statement to retrieve customer order details with aggregation, string manipulation, and conditional statement", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_id\": 5, \"full_name\": \"Murl Shanahan\", \"total_orders\": 3, \"red_products_count\": 1.0, \"avg_product_quantity\": 5.666666666666667, \"last_order_date\": \"2017-11-27T21:50:58\", \"gender\": \"Other\"}, {\"customer_id\": 6, \"full_name\": \"Vesta Leuschke\", \"total_orders\": 2, \"red_products_count\": 1.0, \"avg_product_quantity\": 4.5, \"last_order_date\": \"2013-10-25T17:40:25\", \"gender\": \"Other\"}, {\"customer_id\": 10, \"full_name\": \"Devin Glover\", \"total_orders\": 5, \"red_products_count\": 1.0, \"avg_product_quantity\": 3.8, \"last_order_date\": \"2017-10-29T04:20:08\", \"gender\": \"Other\"}, {\"customer_id\": 12, \"full_name\": \"Jensen Muller\", \"total_orders\": 3, \"red_products_count\": 0.0, \"avg_product_quantity\": 5.0, \"last_order_date\": \"2012-08-25T07:51:54\", \"gender\": \"Other\"}]", "metadata": {"app_mod_case_id": 12, "sql": {"query": "\n        SELECT \n            c.customer_id,\n            CONCAT(c.customer_first_name, ' ', c.customer_last_name) AS full_name,\n            COUNT(o.order_id) AS total_orders,\n            SUM(CASE \n                    WHEN p.product_color = 'Red' THEN 1 \n                    ELSE 0 \n                END) AS red_products_count,\n            AVG(ot.product_quantity) AS avg_product_quantity,\n            MAX(o.date_order_placed) AS last_order_date,\n            CASE \n                WHEN c.gender = 'M' THEN 'Male'\n                WHEN c.gender = 'F' THEN 'Female'\n                ELSE 'Other'\n            END AS gender\n        FROM \n            Customers c\n            JOIN Orders o ON c.customer_id = o.customer_id\n            JOIN Order_Items ot ON o.order_id = ot.order_id\n            JOIN Products p ON ot.product_id = p.product_id\n        WHERE \n            c.country = 'USA'\n        GROUP BY \n            c.customer_id, c.customer_first_name, c.customer_last_name, c.gender\n        HAVING \n            COUNT(o.order_id) > 1;", "tags": null}}}, {"input": {"nl_query": "This query retrieves the total transaction amount per customer, and includes various date manipulations and conditional statements. It joins the Customers, Orders, Invoices, Accounts, and Financial_Transactions tables.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_id\": 13, \"customer_first_name\": \"Kieran\", \"customer_last_name\": \"Auer\", \"total_transaction_amount\": 1513.83, \"transaction_month\": \"2018-03\", \"season\": \"Spring\", \"transaction_size\": \"Low\"}, {\"customer_id\": 8, \"customer_first_name\": \"Meaghan\", \"customer_last_name\": \"Keeling\", \"total_transaction_amount\": 909.19, \"transaction_month\": \"2018-03\", \"season\": \"Spring\", \"transaction_size\": \"Low\"}, {\"customer_id\": 12, \"customer_first_name\": \"Jensen\", \"customer_last_name\": \"Muller\", \"total_transaction_amount\": 4643.46, \"transaction_month\": \"2018-03\", \"season\": \"Spring\", \"transaction_size\": \"High\"}, {\"customer_id\": 8, \"customer_first_name\": \"Meaghan\", \"customer_last_name\": \"Keeling\", \"total_transaction_amount\": 4898.87, \"transaction_month\": \"2018-03\", \"season\": \"Spring\", \"transaction_size\": \"High\"}, {\"customer_id\": 13, \"customer_first_name\": \"Kieran\", \"customer_last_name\": \"Auer\", \"total_transaction_amount\": 4473.06, \"transaction_month\": \"2018-03\", \"season\": \"Spring\", \"transaction_size\": \"High\"}, {\"customer_id\": 9, \"customer_first_name\": \"Abbey\", \"customer_last_name\": \"Ruecker\", \"total_transaction_amount\": 1517.77, \"transaction_month\": \"2018-03\", \"season\": \"Spring\", \"transaction_size\": \"High\"}, {\"customer_id\": 15, \"customer_first_name\": \"Ruby\", \"customer_last_name\": \"Boyle\", \"total_transaction_amount\": 1979.66, \"transaction_month\": \"2018-02\", \"season\": \"Winter\", \"transaction_size\": \"High\"}]", "metadata": {"app_mod_case_id": 13, "sql": {"query": "SELECT c.customer_id, c.customer_first_name, c.customer_last_name, SUM(ft.transaction_amount) AS total_transaction_amount, DATE_FORMAT(ft.transaction_date, '%Y-%m') AS transaction_month, CASE WHEN MONTH(ft.transaction_date) IN (12, 1, 2) THEN 'Winter' WHEN MONTH(ft.transaction_date) IN (3, 4, 5) THEN 'Spring' WHEN MONTH(ft.transaction_date) IN (6, 7, 8) THEN 'Summer' ELSE 'Autumn' END AS season, CASE WHEN ft.transaction_amount > 1000 THEN 'High' ELSE 'Low' END AS transaction_size FROM Customers c JOIN Accounts a ON c.customer_id = a.customer_id JOIN Financial_Transactions ft ON a.account_id = ft.account_id JOIN Invoices i ON ft.invoice_number = i.invoice_number JOIN Orders o ON i.order_id = o.order_id GROUP BY c.customer_id, c.customer_first_name, c.customer_last_name, DATE_FORMAT(ft.transaction_date, '%Y-%m'), season, transaction_size;", "tags": null}}}, {"input": {"nl_query": "Select statement to retrieve customer details, order counts, and total transaction amounts, with string manipulations and conditional statements.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"full_name\": \"Joesph K Schaefer\", \"email_address\": \"homenick.ambrose@example.net\", \"country\": \"USA\", \"total_orders\": 2, \"total_transactions\": null, \"gender_description\": \"Other\", \"customer_type\": \"Standard\"}, {\"full_name\": \"Vesta E Leuschke\", \"email_address\": \"philip94@example.org\", \"country\": \"USA\", \"total_orders\": 1, \"total_transactions\": null, \"gender_description\": \"Other\", \"customer_type\": \"Standard\"}, {\"full_name\": \"Meaghan M Keeling\", \"email_address\": \"pyundt@example.org\", \"country\": \"USA\", \"total_orders\": 1, \"total_transactions\": 5808.06, \"gender_description\": \"Other\", \"customer_type\": \"Standard\"}, {\"full_name\": \"Jensen M Muller\", \"email_address\": \"lew.nicolas@example.org\", \"country\": \"USA\", \"total_orders\": 2, \"total_transactions\": 9286.92, \"gender_description\": \"Other\", \"customer_type\": \"Standard\"}, {\"full_name\": \"Ruby K Boyle\", \"email_address\": \"gwolff@example.net\", \"country\": \"USA\", \"total_orders\": 1, \"total_transactions\": 1979.66, \"gender_description\": \"Other\", \"customer_type\": \"Standard\"}]", "metadata": {"app_mod_case_id": 11, "sql": {"query": "SELECT \n    CONCAT(c.customer_first_name, ' ', IFNULL(c.customer_middle_initial, ''), ' ', c.customer_last_name) AS full_name,\n    c.email_address,\n    c.country,\n    COUNT(DISTINCT o.order_id) AS total_orders,\n    SUM(ft.transaction_amount) AS total_transactions,\n    CASE \n        WHEN c.gender = 'M' THEN 'Male'\n        WHEN c.gender = 'F' THEN 'Female'\n        ELSE 'Other'\n    END AS gender_description,\n    CASE \n        WHEN COUNT(DISTINCT o.order_id) > 5 THEN 'Premium'\n        ELSE 'Standard'\n    END AS customer_type\nFROM Customers c\n    JOIN Orders o ON c.customer_id = o.customer_id\n    JOIN Accounts a ON c.customer_id = a.customer_id\n    LEFT JOIN Financial_Transactions ft ON a.account_id = ft.account_id\nGROUP BY \n    c.customer_id,\n    c.customer_first_name,\n    c.customer_middle_initial,\n    c.customer_last_name,\n    c.email_address,\n    c.country,\n    c.gender;", "tags": null}}}, {"input": {"nl_query": "Selects the total amount spent by each customer, grouped by customer and product category, including a subquery to calculate the total amount for each product category.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_id\": 10, \"customer_first_name\": \"Devin\", \"customer_last_name\": \"Glover\", \"product_type_description\": \"Food\", \"total_spent\": 61.0}]", "metadata": {"app_mod_case_id": 10, "sql": {"query": "\n    SELECT \n        c.customer_id, \n        c.customer_first_name, \n        c.customer_last_name, \n        pc.product_type_description,\n        SUM(ili.derived_total_cost) AS total_spent\n    FROM Customers c\n    JOIN Orders o ON c.customer_id = o.customer_id\n    JOIN Order_Items oi ON o.order_id = oi.order_id\n    JOIN Products p ON oi.product_id = p.product_id\n    JOIN Product_Categories pc ON p.production_type_code = pc.production_type_code\n    JOIN Invoice_Line_Items ili ON oi.order_item_id = ili.order_item_id\n    JOIN Invoices i ON ili.invoice_number = i.invoice_number\n    WHERE i.invoice_date = (\n        SELECT MAX(i2.invoice_date)\n        FROM Invoices i2\n        WHERE i2.order_id = o.order_id\n    )\n    GROUP BY c.customer_id, pc.production_type_code\n    ORDER BY total_spent DESC;", "tags": null}}}, {"input": {"nl_query": "Selects customer details with their total orders and the most recent order date, joining Customers and Orders tables, with a subquery to get total order counts, aggregation to get the most recent order date, string manipulation to format names, and date manipulation to extract year and month.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"full_name\": \"Jensen M Muller\", \"email_address\": \"lew.nicolas@example.org\", \"phone_number\": \"(650)406-8761\", \"total_orders\": 2, \"most_recent_order_year\": 2012, \"most_recent_order_month\": 8}, {\"full_name\": \"Meaghan M Keeling\", \"email_address\": \"pyundt@example.org\", \"phone_number\": \"06015518212\", \"total_orders\": 1, \"most_recent_order_year\": 2017, \"most_recent_order_month\": 11}, {\"full_name\": \"Murl B Shanahan\", \"email_address\": \"jovani64@example.com\", \"phone_number\": \"1-546-447-9843x13741\", \"total_orders\": 2, \"most_recent_order_year\": 2017, \"most_recent_order_month\": 11}, {\"full_name\": \"Ruby K Boyle\", \"email_address\": \"gwolff@example.net\", \"phone_number\": \"1-546-302-5676\", \"total_orders\": 1, \"most_recent_order_year\": 2015, \"most_recent_order_month\": 5}, {\"full_name\": \"Joesph K Schaefer\", \"email_address\": \"homenick.ambrose@example.net\", \"phone_number\": \"(488)524-5345\", \"total_orders\": 2, \"most_recent_order_year\": 2016, \"most_recent_order_month\": 4}, {\"full_name\": \"Brennon H Weimann\", \"email_address\": \"roosevelt.collier@example.org\", \"phone_number\": \"(943)219-4234x415\", \"total_orders\": 1, \"most_recent_order_year\": 2017, \"most_recent_order_month\": 3}, {\"full_name\": \"Neoma G Hauck\", \"email_address\": \"michel92@example.org\", \"phone_number\": \"+95(0)1523064649\", \"total_orders\": 1, \"most_recent_order_year\": 2017, \"most_recent_order_month\": 12}, {\"full_name\": \"Percival B Kessler\", \"email_address\": \"jacobi.shanon@example.org\", \"phone_number\": \"(791)562-7792x45732\", \"total_orders\": 1, \"most_recent_order_year\": 2010, \"most_recent_order_month\": 10}, {\"full_name\": \"Dee A Larkin\", \"email_address\": \"thora.torphy@example.org\", \"phone_number\": \"241.796.1219x37862\", \"total_orders\": 1, \"most_recent_order_year\": 2017, \"most_recent_order_month\": 5}, {\"full_name\": \"Devin V Glover\", \"email_address\": \"udeckow@example.com\", \"phone_number\": \"197-955-3766\", \"total_orders\": 2, \"most_recent_order_year\": 2017, \"most_recent_order_month\": 10}, {\"full_name\": \"Vesta E Leuschke\", \"email_address\": \"philip94@example.org\", \"phone_number\": \"+69(0)7149212554\", \"total_orders\": 1, \"most_recent_order_year\": 2013, \"most_recent_order_month\": 10}]", "metadata": {"app_mod_case_id": 8, "sql": {"query": "SELECT CONCAT(c.customer_first_name, ' ', COALESCE(c.customer_middle_initial, ''), ' ', c.customer_last_name) AS full_name, c.email_address, c.phone_number, COUNT(o.order_id) AS total_orders, MAX(YEAR(o.date_order_placed)) AS most_recent_order_year, MAX(MONTH(o.date_order_placed)) AS most_recent_order_month FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id GROUP BY c.customer_id, c.customer_first_name, c.customer_middle_initial, c.customer_last_name, c.email_address, c.phone_number;", "tags": null}}}, {"input": {"nl_query": "Retrieve the total transaction amount grouped by customer and transaction type, with a case-when statement to categorize the transaction amount as 'High' if greater than 1000, otherwise 'Low'.", "dataset_name": "customers_and_invoices_rcm_complex"}, "expected": "[{\"customer_id\": 13, \"customer_first_name\": \"Kieran\", \"customer_last_name\": \"Auer\", \"transaction_type\": \"Payment\", \"total_transaction_amount\": 3624.4, \"transaction_category\": \"High\"}, {\"customer_id\": 8, \"customer_first_name\": \"Meaghan\", \"customer_last_name\": \"Keeling\", \"transaction_type\": \"Payment\", \"total_transaction_amount\": 2123.41, \"transaction_category\": \"High\"}, {\"customer_id\": 12, \"customer_first_name\": \"Jensen\", \"customer_last_name\": \"Muller\", \"transaction_type\": \"Refund\", \"total_transaction_amount\": 3165.89, \"transaction_category\": \"High\"}, {\"customer_id\": 8, \"customer_first_name\": \"Meaghan\", \"customer_last_name\": \"Keeling\", \"transaction_type\": \"Refund\", \"total_transaction_amount\": 3684.65, \"transaction_category\": \"High\"}, {\"customer_id\": 9, \"customer_first_name\": \"Abbey\", \"customer_last_name\": \"Ruecker\", \"transaction_type\": \"Payment\", \"total_transaction_amount\": 1517.77, \"transaction_category\": \"High\"}, {\"customer_id\": 12, \"customer_first_name\": \"Jensen\", \"customer_last_name\": \"Muller\", \"transaction_type\": \"Payment\", \"total_transaction_amount\": 1477.57, \"transaction_category\": \"High\"}, {\"customer_id\": 13, \"customer_first_name\": \"Kieran\", \"customer_last_name\": \"Auer\", \"transaction_type\": \"Refund\", \"total_transaction_amount\": 2362.49, \"transaction_category\": \"High\"}, {\"customer_id\": 15, \"customer_first_name\": \"Ruby\", \"customer_last_name\": \"Boyle\", \"transaction_type\": \"Refund\", \"total_transaction_amount\": 1979.66, \"transaction_category\": \"High\"}]", "metadata": {"app_mod_case_id": 9, "sql": {"query": "SELECT c.customer_id, c.customer_first_name, c.customer_last_name, ft.transaction_type, SUM(ft.transaction_amount) AS total_transaction_amount, CASE WHEN SUM(ft.transaction_amount) > 1000 THEN 'High' ELSE 'Low' END AS transaction_category FROM Customers c JOIN Accounts a ON c.customer_id = a.customer_id JOIN Financial_Transactions ft ON a.account_id = ft.account_id GROUP BY c.customer_id, c.customer_first_name, c.customer_last_name, ft.transaction_type;", "tags": null}}}, {"input": {"nl_query": "What is the average number of employees of the departments whose rank is between 10 and 15?", "dataset_name": "department_management_recommended"}, "expected": "[{\"avg(num_employees)\": 105468.16666666667}]", "metadata": {"app_mod_case_id": 4, "sql": {"query": "SELECT avg(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "What are the names of the heads who are born outside the California state?", "dataset_name": "department_management_recommended"}, "expected": "[{\"name\": \"Tiger Woods\"}, {\"name\": \"K. J. Choi\"}, {\"name\": \"Jeff Maggert\"}, {\"name\": \"Stewart Cink\"}, {\"name\": \"P\u00e1draig Harrington\"}, {\"name\": \"Franklin Langham\"}]", "metadata": {"app_mod_case_id": 5, "sql": {"query": "SELECT name FROM head WHERE born_state != 'California'", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "What are the names of the states where at least 3 heads were born?", "dataset_name": "department_management_recommended"}, "expected": "[{\"born_state\": \"California\"}]", "metadata": {"app_mod_case_id": 7, "sql": {"query": "SELECT born_state FROM head GROUP BY born_state HAVING count(*)  >=  3", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY"]}}}}, {"input": {"nl_query": "What are the distinct creation years of the departments managed by a secretary born in state 'Alabama'?", "dataset_name": "department_management_recommended"}, "expected": "[{\"Creation\": \"1903\"}]", "metadata": {"app_mod_case_id": 6, "sql": {"query": "SELECT DISTINCT T1.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T3.born_state  =  'Alabama'", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "JOIN"]}}}}, {"input": {"nl_query": "List the creation year, name and budget of each department.", "dataset_name": "department_management_recommended"}, "expected": "[{\"Creation\": \"1789\", \"Name\": \"State\", \"Budget_in_Billions\": 9.96}, {\"Creation\": \"1789\", \"Name\": \"Treasury\", \"Budget_in_Billions\": 11.1}, {\"Creation\": \"1947\", \"Name\": \"Defense\", \"Budget_in_Billions\": 439.3}, {\"Creation\": \"1870\", \"Name\": \"Justice\", \"Budget_in_Billions\": 23.4}, {\"Creation\": \"1849\", \"Name\": \"Interior\", \"Budget_in_Billions\": 10.7}, {\"Creation\": \"1889\", \"Name\": \"Agriculture\", \"Budget_in_Billions\": 77.6}, {\"Creation\": \"1903\", \"Name\": \"Commerce\", \"Budget_in_Billions\": 6.2}, {\"Creation\": \"1913\", \"Name\": \"Labor\", \"Budget_in_Billions\": 59.7}, {\"Creation\": \"1953\", \"Name\": \"Health and Human Services\", \"Budget_in_Billions\": 543.2}, {\"Creation\": \"1965\", \"Name\": \"Housing and Urban Development\", \"Budget_in_Billions\": 46.2}, {\"Creation\": \"1966\", \"Name\": \"Transportation\", \"Budget_in_Billions\": 58.0}, {\"Creation\": \"1977\", \"Name\": \"Energy\", \"Budget_in_Billions\": 21.5}, {\"Creation\": \"1979\", \"Name\": \"Education\", \"Budget_in_Billions\": 62.8}, {\"Creation\": \"1989\", \"Name\": \"Veterans Affairs\", \"Budget_in_Billions\": 73.2}, {\"Creation\": \"2002\", \"Name\": \"Homeland Security\", \"Budget_in_Billions\": 44.6}]", "metadata": {"app_mod_case_id": 2, "sql": {"query": "SELECT creation ,  name ,  budget_in_billions FROM department", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "What are the maximum and minimum budget of the departments?", "dataset_name": "department_management_recommended"}, "expected": "[{\"max(budget_in_billions)\": 543.2, \"min(budget_in_billions)\": 6.2}]", "metadata": {"app_mod_case_id": 3, "sql": {"query": "SELECT max(budget_in_billions) ,  min(budget_in_billions) FROM department", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "List the name, born state and age of the heads of departments ordered by age.", "dataset_name": "department_management_recommended"}, "expected": "[{\"name\": \"P\u00e1draig Harrington\", \"born_state\": \"Connecticut\", \"age\": 43.0}, {\"name\": \"Stewart Cink\", \"born_state\": \"Florida\", \"age\": 50.0}, {\"name\": \"Dudley Hart\", \"born_state\": \"California\", \"age\": 52.0}, {\"name\": \"Jeff Maggert\", \"born_state\": \"Delaware\", \"age\": 53.0}, {\"name\": \"Nick Faldo\", \"born_state\": \"California\", \"age\": 56.0}, {\"name\": \"Tiger Woods\", \"born_state\": \"Alabama\", \"age\": 67.0}, {\"name\": \"Franklin Langham\", \"born_state\": \"Connecticut\", \"age\": 67.0}, {\"name\": \"Sergio Garc\u00eda\", \"born_state\": \"California\", \"age\": 68.0}, {\"name\": \"K. J. Choi\", \"born_state\": \"Alabama\", \"age\": 69.0}, {\"name\": \"Billy Mayfair\", \"born_state\": \"California\", \"age\": 69.0}]", "metadata": {"app_mod_case_id": 1, "sql": {"query": "SELECT name ,  born_state ,  age FROM head ORDER BY age", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "How many heads of the departments are older than 56 ?", "dataset_name": "department_management_recommended"}, "expected": "[{\"count(*)\": 5}]", "metadata": {"app_mod_case_id": 0, "sql": {"query": "SELECT count(*) FROM head WHERE age  >  56", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "Which department has more than 1 head at a time? List the id, name and the number of heads.", "dataset_name": "department_management_recommended"}, "expected": "[{\"Department_ID\": 2, \"Name\": \"Treasury\", \"count(*)\": 2}]", "metadata": {"app_mod_case_id": 14, "sql": {"query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY", "JOIN"]}}}}, {"input": {"nl_query": "Which head's name has the substring 'Ha'? List the id and name.", "dataset_name": "department_management_recommended"}, "expected": "[{\"head_ID\": 4, \"name\": \"Dudley Hart\"}, {\"head_ID\": 9, \"name\": \"P\u00e1draig Harrington\"}, {\"head_ID\": 10, \"name\": \"Franklin Langham\"}]", "metadata": {"app_mod_case_id": 15, "sql": {"query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "List all departments that have heads including the name and born state.", "dataset_name": "department_management_recommended"}, "expected": "[{\"Department_ID\": 2, \"Name\": \"Treasury\", \"temporary_acting\": \"Yes\", \"head_ID\": 5, \"name\": \"Jeff Maggert\", \"born_state\": \"Delaware\"}, {\"Department_ID\": 2, \"Name\": \"Treasury\", \"temporary_acting\": \"Yes\", \"head_ID\": 6, \"name\": \"Billy Mayfair\", \"born_state\": \"California\"}, {\"Department_ID\": 7, \"Name\": \"Commerce\", \"temporary_acting\": \"No\", \"head_ID\": 3, \"name\": \"K. J. Choi\", \"born_state\": \"Alabama\"}, {\"Department_ID\": 11, \"Name\": \"Transportation\", \"temporary_acting\": \"No\", \"head_ID\": 10, \"name\": \"Franklin Langham\", \"born_state\": \"Connecticut\"}, {\"Department_ID\": 15, \"Name\": \"Homeland Security\", \"temporary_acting\": \"Yes\", \"head_ID\": 4, \"name\": \"Dudley Hart\", \"born_state\": \"California\"}]", "metadata": {"app_mod_case_id": 16, "sql": {"query": "SELECT d.Department_ID, d.Name, m.temporary_acting, h.head_ID, h.name, h.born_state FROM department d JOIN management m ON d.Department_ID = m.department_ID JOIN head h ON m.head_ID = h.head_ID;", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "JOIN"]}}}}, {"input": {"nl_query": "What are the distinct ages of the heads who are acting?", "dataset_name": "department_management_recommended"}, "expected": "[{\"age\": 53.0}, {\"age\": 69.0}, {\"age\": 52.0}]", "metadata": {"app_mod_case_id": 12, "sql": {"query": "SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id  =  T2.head_id WHERE T2.temporary_acting  =  'Yes'", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "JOIN"]}}}}, {"input": {"nl_query": "List the states where both the secretary of 'Treasury' department and the secretary of 'Homeland Security' were born.", "dataset_name": "department_management_recommended"}, "expected": "[{\"born_state\": \"California\"}]", "metadata": {"app_mod_case_id": 13, "sql": {"query": "SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Treasury' INTERSECT SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Homeland Security'", "tags": {"category": "COMPLEX_SELECT", "subcategories": ["SET_OPERATION"]}}}}, {"input": {"nl_query": "How many departments are led by heads who are not mentioned?", "dataset_name": "department_management_recommended"}, "expected": "[{\"count(*)\": 11}]", "metadata": {"app_mod_case_id": 11, "sql": {"query": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);", "tags": {"category": "COMPLEX_SELECT", "subcategories": ["SUBQUERY"]}}}}, {"input": {"nl_query": "How many acting statuses are there?", "dataset_name": "department_management_recommended"}, "expected": "[{\"count(DISTINCT temporary_acting)\": 2}]", "metadata": {"app_mod_case_id": 10, "sql": {"query": "SELECT count(DISTINCT temporary_acting) FROM management", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "In which year were most departments established?", "dataset_name": "department_management_recommended"}, "expected": "[{\"Creation\": \"1789\"}]", "metadata": {"app_mod_case_id": 8, "sql": {"query": "SELECT creation FROM department GROUP BY creation ORDER BY count(*) DESC LIMIT 1", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY"]}}}}, {"input": {"nl_query": "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?", "dataset_name": "department_management_recommended"}, "expected": "[{\"Name\": \"Treasury\", \"Num_Employees\": 115897.0}, {\"Name\": \"Treasury\", \"Num_Employees\": 115897.0}, {\"Name\": \"Homeland Security\", \"Num_Employees\": 208000.0}]", "metadata": {"app_mod_case_id": 9, "sql": {"query": "SELECT T1.name ,  T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id WHERE T2.temporary_acting  =  'Yes'", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "JOIN"]}}}}, {"input": {"nl_query": "Find the id and name of the museum that has the most staff members?", "dataset_name": "museum_visit_recommended"}, "expected": "[{\"Museum_ID\": 1, \"Name\": \"Plaza Museum\"}]", "metadata": {"app_mod_case_id": 4, "sql": {"query": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "Find the average number of staff working for the museums that were open before 2009.", "dataset_name": "museum_visit_recommended"}, "expected": "[{\"avg(num_of_staff)\": 31.3333}]", "metadata": {"app_mod_case_id": 5, "sql": {"query": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.", "dataset_name": "museum_visit_recommended"}, "expected": "[{\"Name\": \"Plaza Museum\"}, {\"Name\": \"Capital Plaza Museum\"}, {\"Name\": \"Jefferson Development Museum\"}]", "metadata": {"app_mod_case_id": 7, "sql": {"query": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)", "tags": {"category": "COMPLEX_SELECT", "subcategories": ["SUBQUERY"]}}}}, {"input": {"nl_query": "What are the opening year and staff number of the museum named Plaza Museum?", "dataset_name": "museum_visit_recommended"}, "expected": "[{\"Num_of_Staff\": 62, \"Open_Year\": \"2000\"}]", "metadata": {"app_mod_case_id": 6, "sql": {"query": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "What is the average age of the visitors whose membership level is not higher than 4?", "dataset_name": "museum_visit_recommended"}, "expected": "[{\"avg(age)\": 36}]", "metadata": {"app_mod_case_id": 2, "sql": {"query": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.", "dataset_name": "museum_visit_recommended"}, "expected": "[{\"Name\": \"Fernando Gago\", \"Level_of_membership\": 6}, {\"Name\": \"Gonzalo Higua\u00edn \", \"Level_of_membership\": 8}, {\"Name\": \"Guti Midfielder\", \"Level_of_membership\": 5}]", "metadata": {"app_mod_case_id": 3, "sql": {"query": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.", "dataset_name": "museum_visit_recommended"}, "expected": "[{\"Name\": \"Gonzalo Higua\u00edn \"}, {\"Name\": \"Fernando Gago\"}, {\"Name\": \"Guti Midfielder\"}]", "metadata": {"app_mod_case_id": 1, "sql": {"query": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "How many visitors below age 30 are there?", "dataset_name": "museum_visit_recommended"}, "expected": "[{\"count(*)\": 3}]", "metadata": {"app_mod_case_id": 0, "sql": {"query": "SELECT count(*) FROM visitor WHERE age  <  30", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "What is the total ticket expense of the visitors whose membership level is 1?", "dataset_name": "museum_visit_recommended"}, "expected": "[{\"sum(t2.Total_spent)\": 570.84}]", "metadata": {"app_mod_case_id": 14, "sql": {"query": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "JOIN"]}}}}, {"input": {"nl_query": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?", "dataset_name": "museum_visit_recommended"}, "expected": "[{\"name\": \"Fernando Gago\"}]", "metadata": {"app_mod_case_id": 15, "sql": {"query": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011", "tags": {"category": "COMPLEX_SELECT", "subcategories": ["SET_OPERATION"]}}}}, {"input": {"nl_query": "How many museums were opened after 2013 or before 2008?", "dataset_name": "museum_visit_recommended"}, "expected": "[{\"count(*)\": 1}]", "metadata": {"app_mod_case_id": 17, "sql": {"query": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "Find the number of visitors who did not visit any museum opened after 2010.", "dataset_name": "museum_visit_recommended"}, "expected": "[{\"count(*)\": 3}]", "metadata": {"app_mod_case_id": 16, "sql": {"query": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)", "tags": {"category": "COMPLEX_SELECT", "subcategories": ["SUBQUERY"]}}}}, {"input": {"nl_query": "Find the name and age of the visitor who bought the most tickets at once.", "dataset_name": "museum_visit_recommended"}, "expected": "[{\"Name\": \"Arjen Robben\", \"Age\": 27}]", "metadata": {"app_mod_case_id": 12, "sql": {"query": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "JOIN"]}}}}, {"input": {"nl_query": "What are the average and maximum number of tickets bought in all visits?", "dataset_name": "museum_visit_recommended"}, "expected": "[{\"avg(num_of_ticket)\": 10.5, \"max(num_of_ticket)\": 24}]", "metadata": {"app_mod_case_id": 13, "sql": {"query": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "What is the name of the museum that had no visitor yet?", "dataset_name": "museum_visit_recommended"}, "expected": "[{\"Name\": \"Jefferson Development Museum\"}, {\"Name\": \"RiverPark Museum\"}, {\"Name\": \"Place Tower Museum\"}, {\"Name\": \"Central City District Residential Museum\"}]", "metadata": {"app_mod_case_id": 11, "sql": {"query": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)", "tags": {"category": "COMPLEX_SELECT", "subcategories": ["SUBQUERY"]}}}}, {"input": {"nl_query": "What are the id and name of the museum visited most times?", "dataset_name": "museum_visit_recommended"}, "expected": "[{\"Museum_ID\": 2, \"Name\": \"Capital Plaza Museum\"}]", "metadata": {"app_mod_case_id": 10, "sql": {"query": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY", "JOIN"]}}}}, {"input": {"nl_query": "find the id, name and age for visitors who visited some museums more than once.", "dataset_name": "museum_visit_recommended"}, "expected": "[{\"ID\": 3, \"Name\": \"Arjen Robben\", \"Age\": 27}, {\"ID\": 5, \"Name\": \"Fernando Gago\", \"Age\": 36}, {\"ID\": 6, \"Name\": \"Rafael van der Vaart\", \"Age\": 25}]", "metadata": {"app_mod_case_id": 8, "sql": {"query": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY", "JOIN"]}}}}, {"input": {"nl_query": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?", "dataset_name": "museum_visit_recommended"}, "expected": "[{\"visitor_ID\": 3, \"Name\": \"Arjen Robben\", \"Level_of_membership\": 1}]", "metadata": {"app_mod_case_id": 9, "sql": {"query": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY", "JOIN"]}}}}, {"input": {"nl_query": "What is the average number of years spent working as a journalist?", "dataset_name": "news_report_recommended"}, "expected": "[{\"avg(Years_working)\": 8}]", "metadata": {"app_mod_case_id": 4, "sql": {"query": "SELECT avg(Years_working) FROM journalist", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "What is the nationality of the journalist with the largest number of years working?", "dataset_name": "news_report_recommended"}, "expected": "[{\"Nationality\": \"England\"}]", "metadata": {"app_mod_case_id": 5, "sql": {"query": "SELECT Nationality FROM journalist ORDER BY Years_working DESC LIMIT 1", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "Show the most common nationality for journalists.", "dataset_name": "news_report_recommended"}, "expected": "[{\"Nationality\": \"England\"}]", "metadata": {"app_mod_case_id": 7, "sql": {"query": "SELECT Nationality FROM journalist GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY"]}}}}, {"input": {"nl_query": "Show the different nationalities and the number of journalists of each nationality.", "dataset_name": "news_report_recommended"}, "expected": "[{\"Nationality\": \"England\", \"COUNT(*)\": 9}, {\"Nationality\": \"Wales\", \"COUNT(*)\": 1}, {\"Nationality\": \"Northern Ireland\", \"COUNT(*)\": 1}]", "metadata": {"app_mod_case_id": 6, "sql": {"query": "SELECT Nationality ,  COUNT(*) FROM journalist GROUP BY Nationality", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY"]}}}}, {"input": {"nl_query": "What are the nationalities and ages of journalists?", "dataset_name": "news_report_recommended"}, "expected": "[{\"Nationality\": \"England\", \"Age\": \"37\"}, {\"Nationality\": \"Wales\", \"Age\": \"27\"}, {\"Nationality\": \"England\", \"Age\": \"28\"}, {\"Nationality\": \"England\", \"Age\": \"43\"}, {\"Nationality\": \"England\", \"Age\": \"34\"}, {\"Nationality\": \"Northern Ireland\", \"Age\": \"29\"}, {\"Nationality\": \"England\", \"Age\": \"28\"}, {\"Nationality\": \"England\", \"Age\": \"43\"}, {\"Nationality\": \"England\", \"Age\": \"37\"}, {\"Nationality\": \"England\", \"Age\": \"33\"}, {\"Nationality\": \"England\", \"Age\": \"25\"}]", "metadata": {"app_mod_case_id": 2, "sql": {"query": "SELECT Nationality ,  Age FROM journalist", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "Show the names of journalists from \"England\" or \"Wales\".", "dataset_name": "news_report_recommended"}, "expected": "[{\"Name\": \"Herbert Swindells\"}, {\"Name\": \"Fred Keenor\"}, {\"Name\": \"George Gilchrist\"}, {\"Name\": \"Jackie Waring\"}, {\"Name\": \"Fred Chandler\"}, {\"Name\": \"John Meaney\"}, {\"Name\": \"Tony Waddington\"}, {\"Name\": \"Jack Meaney\"}, {\"Name\": \"Frank Mitcheson\"}, {\"Name\": \"Tom Briggs\"}]", "metadata": {"app_mod_case_id": 3, "sql": {"query": "SELECT Name FROM journalist WHERE Nationality  =  \"England\" OR Nationality  =  \"Wales\"", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "List the names of journalists in ascending order of years working.", "dataset_name": "news_report_recommended"}, "expected": "[{\"Name\": \"Tom Briggs\"}, {\"Name\": \"Ray Ferris\"}, {\"Name\": \"Fred Keenor\"}, {\"Name\": \"George Gilchrist\"}, {\"Name\": \"Fred Chandler\"}, {\"Name\": \"John Meaney\"}, {\"Name\": \"Jack Meaney\"}, {\"Name\": \"Frank Mitcheson\"}, {\"Name\": \"Herbert Swindells\"}, {\"Name\": \"Tony Waddington\"}, {\"Name\": \"Jackie Waring\"}]", "metadata": {"app_mod_case_id": 1, "sql": {"query": "SELECT Name FROM journalist ORDER BY Years_working ASC", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "How many journalists are there?", "dataset_name": "news_report_recommended"}, "expected": "[{\"count(*)\": 11}]", "metadata": {"app_mod_case_id": 0, "sql": {"query": "SELECT count(*) FROM journalist", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "List the names of journalists who have not reported any event.", "dataset_name": "news_report_recommended"}, "expected": "[{\"Name\": \"Fred Keenor\"}, {\"Name\": \"George Gilchrist\"}, {\"Name\": \"Fred Chandler\"}, {\"Name\": \"Jack Meaney\"}, {\"Name\": \"Frank Mitcheson\"}]", "metadata": {"app_mod_case_id": 14, "sql": {"query": "SELECT Name FROM journalist WHERE journalist_ID NOT IN (SELECT journalist_ID FROM news_report)", "tags": {"category": "COMPLEX_SELECT", "subcategories": ["SUBQUERY"]}}}}, {"input": {"nl_query": "what are the average and maximum attendances of all events?", "dataset_name": "news_report_recommended"}, "expected": "[{\"avg(Event_Attendance)\": 2255, \"max(Event_Attendance)\": 6650}]", "metadata": {"app_mod_case_id": 15, "sql": {"query": "SELECT avg(Event_Attendance) ,  max(Event_Attendance) FROM event", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION"]}}}}, {"input": {"nl_query": "List the event venues and names that have the top 2 most number of people attended.", "dataset_name": "news_report_recommended"}, "expected": "[{\"Venue\": \"Marathon\", \"Name\": \"Olympia Games Openning\"}, {\"Venue\": \"Platense\", \"Name\": \"Global Awarding\"}]", "metadata": {"app_mod_case_id": 17, "sql": {"query": "SELECT venue ,  name FROM event ORDER BY Event_Attendance DESC LIMIT 2", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "Find the average age and experience working length of journalists working on different role type.", "dataset_name": "news_report_recommended"}, "expected": "[{\"avg(t1.age)\": 30.333333333333332, \"avg(Years_working)\": 4.6667, \"Work_Type\": \"Screening\"}, {\"avg(t1.age)\": 43.0, \"avg(Years_working)\": 16.5, \"Work_Type\": \"Host\"}, {\"avg(t1.age)\": 35.5, \"avg(Years_working)\": 14, \"Work_Type\": \"Music\"}]", "metadata": {"app_mod_case_id": 16, "sql": {"query": "SELECT avg(t1.age) ,  avg(Years_working) ,  t2.work_type FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id  =  t2.journalist_id GROUP BY t2.work_type", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY", "JOIN"]}}}}, {"input": {"nl_query": "Show the names of journalists and the number of events they reported.", "dataset_name": "news_report_recommended"}, "expected": "[{\"Name\": \"Jackie Waring\", \"COUNT(*)\": 2}, {\"Name\": \"Ray Ferris\", \"COUNT(*)\": 1}, {\"Name\": \"Herbert Swindells\", \"COUNT(*)\": 1}, {\"Name\": \"Tony Waddington\", \"COUNT(*)\": 1}, {\"Name\": \"John Meaney\", \"COUNT(*)\": 1}, {\"Name\": \"Tom Briggs\", \"COUNT(*)\": 1}]", "metadata": {"app_mod_case_id": 12, "sql": {"query": "SELECT T3.Name ,  COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY", "JOIN"]}}}}, {"input": {"nl_query": "Show the names of journalists that have reported more than one event.", "dataset_name": "news_report_recommended"}, "expected": "[{\"Name\": \"Jackie Waring\"}]", "metadata": {"app_mod_case_id": 13, "sql": {"query": "SELECT T3.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name HAVING COUNT(*)  >  1", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "AGGREGATION", "GROUP_BY", "JOIN"]}}}}, {"input": {"nl_query": "Show the names of journalists and the names of the events they reported in ascending order", "dataset_name": "news_report_recommended"}, "expected": "[{\"Name\": \"John Meaney\", \"Name(1)\": \"Special Exhibition\"}, {\"Name\": \"Tom Briggs\", \"Name(1)\": \"Special Exhibition\"}, {\"Name\": \"Jackie Waring\", \"Name(1)\": \"Government Hearing\"}, {\"Name\": \"Herbert Swindells\", \"Name(1)\": \"Public Debating\"}, {\"Name\": \"Tony Waddington\", \"Name(1)\": \"Global Awarding\"}, {\"Name\": \"Jackie Waring\", \"Name(1)\": \"Olympia Games Openning\"}, {\"Name\": \"Ray Ferris\", \"Name(1)\": \"Olympia Games Openning\"}]", "metadata": {"app_mod_case_id": 11, "sql": {"query": "SELECT T3.Name ,  T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID ORDER BY T2.Event_Attendance ASC", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "JOIN"]}}}}, {"input": {"nl_query": "Show the names of journalists and the dates of the events they reported.", "dataset_name": "news_report_recommended"}, "expected": "[{\"Name\": \"Jackie Waring\", \"Date\": \"13 October 2008\"}, {\"Name\": \"Ray Ferris\", \"Date\": \"13 October 2008\"}, {\"Name\": \"Jackie Waring\", \"Date\": \"11 October 2007\"}, {\"Name\": \"Herbert Swindells\", \"Date\": \"7 October 2010\"}, {\"Name\": \"Tony Waddington\", \"Date\": \"20 June 2018\"}, {\"Name\": \"John Meaney\", \"Date\": \"9 April 2014\"}, {\"Name\": \"Tom Briggs\", \"Date\": \"9 April 2014\"}]", "metadata": {"app_mod_case_id": 10, "sql": {"query": "SELECT T3.Name ,  T2.Date FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT", "JOIN"]}}}}, {"input": {"nl_query": "Show the nations that have both journalists with more than 10 years of working and journalists with less than 3 years of working.", "dataset_name": "news_report_recommended"}, "expected": "[{\"Nationality\": \"England\"}]", "metadata": {"app_mod_case_id": 8, "sql": {"query": "SELECT Nationality FROM journalist WHERE Years_working  >  10 INTERSECT SELECT Nationality FROM journalist WHERE Years_working  <  3", "tags": {"category": "COMPLEX_SELECT", "subcategories": ["SET_OPERATION"]}}}}, {"input": {"nl_query": "Show the dates, places, and names of events in descending order of the attendance.", "dataset_name": "news_report_recommended"}, "expected": "[{\"Date\": \"13 October 2008\", \"Name\": \"Olympia Games Openning\", \"Venue\": \"Marathon\"}, {\"Date\": \"20 June 2018\", \"Name\": \"Global Awarding\", \"Venue\": \"Platense\"}, {\"Date\": \"7 October 2010\", \"Name\": \"Public Debating\", \"Venue\": \"Motagua\"}, {\"Date\": \"11 October 2007\", \"Name\": \"Government Hearing\", \"Venue\": \"Victoria\"}, {\"Date\": \"9 April 2014\", \"Name\": \"Special Exhibition\", \"Venue\": \"Hispano\"}]", "metadata": {"app_mod_case_id": 9, "sql": {"query": "SELECT Date ,  Name ,  venue FROM event ORDER BY Event_Attendance DESC", "tags": {"category": "SIMPLE_SELECT", "subcategories": ["SELECT"]}}}}, {"input": {"nl_query": "Calculate employee performance within a date range", "dataset_name": "northwind_one_to_one"}, "expected": "[{\"COUNT(DISTINCTO.ORDER_ID)\": 54}]", "metadata": {"app_mod_case_id": 2, "sql": {"query": "CREATE OR REPLACE EDITIONABLE FUNCTION \"CALCULATE_EMPLOYEE_PERFORMANCE\" (\n    p_employee_id IN NUMBER,\n    p_start_date IN DATE,\n    p_end_date IN DATE\n) RETURN NUMBER AS\n    v_performance NUMBER;\nBEGIN\n    SELECT COUNT(DISTINCT o.ORDER_ID) INTO v_performance\n    FROM NORTHWIND.ORDERS o\n    WHERE o.EMPLOYEE_ID = p_employee_id\n    AND o.ORDER_DATE BETWEEN p_start_date AND p_end_date;\n\n    RETURN v_performance;\nEXCEPTION\n    WHEN NO_DATA_FOUND THEN\n        RETURN 0;\nEND;\n/", "tags": null}}}, {"input": {"nl_query": "Get top selling products within a date range", "dataset_name": "northwind_one_to_one"}, "expected": "[{\"PRODUCT_ID\" : 56, \"PRODUCT_NAME\" : \"Gnocchi di nonna Alice\", \"TOTAL_SOLD\" : 991}, {\"PRODUCT_ID\" : 60, \"PRODUCT_NAME\" : \"Camembert Pierrot\", \"TOTAL_SOLD\" : 665}, {\"PRODUCT_ID\" : 59, \"PRODUCT_NAME\" : \"Raclette Courdavault\", \"TOTAL_SOLD\" : 657}, {\"PRODUCT_ID\" : 31, \"PRODUCT_NAME\" : \"Gorgonzola Telino\", \"TOTAL_SOLD\" : 636}, {\"PRODUCT_ID\" : 21, \"PRODUCT_NAME\" : \"Sir Rodney's Scones\", \"TOTAL_SOLD\" : 610}, {\"PRODUCT_ID\" : 16, \"PRODUCT_NAME\" : \"Pavlova\", \"TOTAL_SOLD\" : 571}, {\"PRODUCT_ID\" : 41, \"PRODUCT_NAME\" : \"Jack's New England Clam Chowder\", \"TOTAL_SOLD\" : 549}, {\"PRODUCT_ID\" : 40, \"PRODUCT_NAME\" : \"Boston Crab Meat\", \"TOTAL_SOLD\" : 531}]", "metadata": {"app_mod_case_id": 1, "sql": {"query": "CREATE OR REPLACE EDITIONABLE PROCEDURE \"GET_TOP_SELLING_PRODUCTS\" (\n    p_top_n IN NUMBER,\n    p_start_date IN DATE,\n    p_end_date IN DATE,\n    p_cursor OUT SYS_REFCURSOR\n) AS\nBEGIN\n    OPEN p_cursor FOR\n    SELECT p.PRODUCT_ID, p.PRODUCT_NAME, SUM(od.QUANTITY) AS total_sold\n    FROM NORTHWIND.PRODUCTS p\n    JOIN NORTHWIND.ORDER_DETAILS od ON p.PRODUCT_ID = od.PRODUCT_ID\n    JOIN NORTHWIND.ORDERS o ON od.ORDER_ID = o.ORDER_ID\n    WHERE o.ORDER_DATE BETWEEN p_start_date AND p_end_date\n    GROUP BY p.PRODUCT_ID, p.PRODUCT_NAME\n    ORDER BY total_sold DESC\n    FETCH FIRST p_top_n ROWS ONLY;\nEND;\n/", "tags": null}}}, {"input": {"nl_query": "Get all orders for a customer", "dataset_name": "northwind_one_to_one"}, "expected": "[{ \"ORDER_ID\" : 11077, \"ORDER_DATE\" : \"1998-05-05T14:00:00.000Z\",\"SHIPPED_DATE\" : null, \"TOTAL_AMOUNT\" : 1255.7205}, { \"ORDER_ID\" : 11000, \"ORDER_DATE\" : \"1998-04-05T14:00:00.000Z\",\"SHIPPED_DATE\" : \"1998-04-13T14:00:00.000Z\", \"TOTAL_AMOUNT\" : 903.75}, { \"ORDER_ID\" : 10988, \"ORDER_DATE\" : \"1998-03-30T14:00:00.000Z\",\"SHIPPED_DATE\" : \"1998-04-09T14:00:00.000Z\", \"TOTAL_AMOUNT\" : 3574.8}, { \"ORDER_ID\" : 10889, \"ORDER_DATE\" : \"1998-02-15T13:00:00.000Z\",\"SHIPPED_DATE\" : \"1998-02-22T13:00:00.000Z\", \"TOTAL_AMOUNT\" : 11380}, { \"ORDER_ID\" : 10852, \"ORDER_DATE\" : \"1998-01-25T13:00:00.000Z\",\"SHIPPED_DATE\" : \"1998-01-29T13:00:00.000Z\", \"TOTAL_AMOUNT\" : 2984}, { \"ORDER_ID\" : 10820, \"ORDER_DATE\" : \"1998-01-06T13:00:00.000Z\",\"SHIPPED_DATE\" : \"1998-01-12T13:00:00.000Z\", \"TOTAL_AMOUNT\" : 1140}, { \"ORDER_ID\" : 10761, \"ORDER_DATE\" : \"1997-12-01T13:00:00.000Z\",\"SHIPPED_DATE\" : \"1997-12-07T13:00:00.000Z\", \"TOTAL_AMOUNT\" : 507}, { \"ORDER_ID\" : 10598, \"ORDER_DATE\" : \"1997-07-13T14:00:00.000Z\",\"SHIPPED_DATE\" : \"1997-07-17T14:00:00.000Z\", \"TOTAL_AMOUNT\" : 2388.5}, { \"ORDER_ID\" : 10569, \"ORDER_DATE\" : \"1997-06-15T14:00:00.000Z\",\"SHIPPED_DATE\" : \"1997-07-10T14:00:00.000Z\", \"TOTAL_AMOUNT\" : 890}, { \"ORDER_ID\" : 10564, \"ORDER_DATE\" : \"1997-06-09T14:00:00.000Z\",\"SHIPPED_DATE\" : \"1997-06-15T14:00:00.000Z\", \"TOTAL_AMOUNT\" : 1234.05}, { \"ORDER_ID\" : 10479, \"ORDER_DATE\" : \"1997-03-18T13:00:00.000Z\",\"SHIPPED_DATE\" : \"1997-03-20T13:00:00.000Z\", \"TOTAL_AMOUNT\" : 10495.6}, { \"ORDER_ID\" : 10401, \"ORDER_DATE\" : \"1996-12-31T13:00:00.000Z\",\"SHIPPED_DATE\" : \"1997-01-09T13:00:00.000Z\", \"TOTAL_AMOUNT\" : 3868.6}, { \"ORDER_ID\" : 10346, \"ORDER_DATE\" : \"1996-11-04T13:00:00.000Z\",\"SHIPPED_DATE\" : \"1996-11-07T13:00:00.000Z\", \"TOTAL_AMOUNT\" : 1618.88}, { \"ORDER_ID\" : 10316, \"ORDER_DATE\" : \"1996-09-26T14:00:00.000Z\",\"SHIPPED_DATE\" : \"1996-10-07T14:00:00.000Z\", \"TOTAL_AMOUNT\" : 2835}, { \"ORDER_ID\" : 10314, \"ORDER_DATE\" : \"1996-09-24T14:00:00.000Z\",\"SHIPPED_DATE\" : \"1996-10-03T14:00:00.000Z\", \"TOTAL_AMOUNT\" : 2094.3}, { \"ORDER_ID\" : 10294, \"ORDER_DATE\" : \"1996-08-29T14:00:00.000Z\",\"SHIPPED_DATE\" : \"1996-09-04T14:00:00.000Z\", \"TOTAL_AMOUNT\" : 1887.6}, { \"ORDER_ID\" : 10272, \"ORDER_DATE\" : \"1996-08-01T14:00:00.000Z\",\"SHIPPED_DATE\" : \"1996-08-05T14:00:00.000Z\", \"TOTAL_AMOUNT\" : 1456}, { \"ORDER_ID\" : 10262, \"ORDER_DATE\" : \"1996-07-21T14:00:00.000Z\",\"SHIPPED_DATE\" : \"1996-07-24T14:00:00.000Z\", \"TOTAL_AMOUNT\" : 584}]", "metadata": {"app_mod_case_id": 0, "sql": {"query": "CREATE OR REPLACE EDITIONABLE PROCEDURE \"GET_CUSTOMER_ORDERS\" (\n    p_customer_id IN NUMBER,\n    p_cursor OUT SYS_REFCURSOR\n) AS\nBEGIN\n    OPEN p_cursor FOR\n    SELECT o.ORDER_ID, o.ORDER_DATE, o.SHIPPED_DATE, \n           SUM(od.UNIT_PRICE * od.QUANTITY * (1 - od.DISCOUNT)) AS total_amount\n    FROM NORTHWIND.ORDERS o\n    JOIN NORTHWIND.ORDER_DETAILS od ON o.ORDER_ID = od.ORDER_ID\n    WHERE o.CUSTOMER_ID = p_customer_id\n    GROUP BY o.ORDER_ID, o.ORDER_DATE, o.SHIPPED_DATE\n    ORDER BY o.ORDER_DATE DESC;\nEND;\n/", "tags": null}}}]