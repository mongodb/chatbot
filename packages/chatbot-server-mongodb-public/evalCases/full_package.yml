- name: Search for 'and operator'
  tags:
    - top_search_term
  messages:
    - role: user
      content: and operator
  expectedLinks:
    - reference/operator/query/and
    - reference/operator/aggregation/and
    - reference/operator/query/all
  reference: |
    In MongoDB, the $and operator is used to perform a logical AND operation on an array of conditions. It ensures that all specified conditions are true for a document to match.

    ✅ Basic Syntax:

    {
      "$and": [
        { <expression1> },
        { <expression2> },
        ...
      ]
    }

    This is equivalent to chaining conditions directly within the query object.

    📘 Example Usage

    🔎 Example 1: Using $and Explicitly

    Find documents where "age" > 25 and "status" = "active":

    db.users.find({
      $and: [
        { age: { $gt: 25 } },
        { status: "active" }
      ]
    });

    🔎 Example 2: Implicit AND (Preferred for Simplicity)

    The same query can be written without $and:

    db.users.find({
      age: { $gt: 25 },
      status: "active"
    });

    MongoDB treats multiple key-value pairs as an implicit AND.

    🚀 When to Use $and Explicitly?
      •	Multiple conditions on the same field:
    Example: Find users with age > 25 and age < 35:

    db.users.find({
      $and: [
        { age: { $gt: 25 } },
        { age: { $lt: 35 } }
      ]
    });

    (You can also use $gt and $lt together in a single condition: { age: { $gt: 25, $lt: 35 } }.)

      •	Dynamic query building:
    When constructing queries programmatically, $and makes it easier to combine conditions.
      •	Combining with $or, $nor, $not:
    Example with $or inside $and:

    db.users.find({
      $and: [
        { age: { $gt: 25 } },
        { $or: [ { status: "active" }, { role: "admin" } ] }
      ]
    });

    📝 Key Points:
      •	$and requires all conditions to be true.
      •	Implicit AND (by specifying conditions at the top level) is shorter and more common.
      •	Use $and for clarity, complex queries, or programmatic query building.

    Let me know if you’d like examples with aggregation pipelines or indexes!