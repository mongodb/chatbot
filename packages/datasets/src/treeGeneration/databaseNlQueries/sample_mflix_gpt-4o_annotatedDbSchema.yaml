name: sample_mflix
description: The 'sample_mflix' database is designed to manage and store
  information related to movies, users, and their interactions with the movie
  content. It includes collections for storing user data, movie details, user
  comments on movies, user sessions, and theater locations. This database
  supports a movie streaming or review platform where users can register,
  comment on movies, and find theater information.
latestDate:
  $date: 2025-03-04T21:38:53.856Z
collections:
  - name: users
    description: The 'users' collection stores user information, including names,
      emails, and passwords. It is fundamental for managing user accounts and
      authentication within the platform. The collection ensures unique email
      addresses for each user, which is crucial for user identification and
      login processes.
    schema: >-
      interface User {
        /**
         * Unique identifier for the user, automatically generated by MongoDB.
         */
        _id: ObjectId;
        /**
         * The name of the user.
         */
        name: string;
        /**
         * The email address of the user. This field is unique across the collection.
         */
        email: string;
        /**
         * The hashed password of the user.
         */
        password: string;
        /**
         * A hash value associated with the user, possibly for additional security or verification purposes.
         */
        hash: Long;
      }
    examples:
      - _id:
          $oid: 59b99dd8cfa9a34dcd7885f7
        name: Loras Tyrell
        email: finn_jones@gameofthron.es
        password: $2b$12$Eb5TLqYLS74pLP9r.2agNe56ht1dvFkQOCODxku8KQmLfldBGa7Cu
        hash:
          low: 2112934512
          high: -2145758107
          unsigned: false
      - _id:
          $oid: 59b99dc3cfa9a34dcd7885d5
        name: Gendry
        email: joe_dempsie@gameofthron.es
        password: $2b$12$ctQymjuvXC5dQXYTWX695eJ/0IEXLfXhNiuzad0bL7j8n9YCBq92K
        hash:
          low: -414619909
          high: -2133499436
          unsigned: false
    indexes:
      - v: 2
        key:
          _id: 1
        name: _id_
        description: This is the default index on the _id field, which ensures that each
          document in the collection has a unique identifier. It is used for
          fast lookups by _id.
      - v: 2
        key:
          email: 1
        name: email_1
        unique: true
        description: This is a unique index on the email field, ensuring that no two
          documents can have the same email address. This is useful for user
          authentication and ensuring email uniqueness.
  - name: comments
    description: The 'sessions' collection manages user session data, including user
      IDs and JWT tokens. It plays a critical role in maintaining user
      authentication states and ensuring secure access to the platform. Each
      session is uniquely associated with a user, linking back to the 'users'
      collection.
    schema: |-
      interface Comment {
        /**
         * Unique identifier for the comment.
         */
        _id: ObjectId;
        /**
         * Name of the person who made the comment.
         */
        name: string;
        /**
         * Email of the person who made the comment.
         */
        email: string;
        /**
         * Identifier of the movie the comment is associated with.
         */
        movie_id: ObjectId;
        /**
         * Text content of the comment.
         */
        text: string;
        /**
         * Date when the comment was made.
         */
        date: Date;
        /**
         * Hash value for the comment, possibly used for integrity checks.
         */
        hash: Long;
      }
    examples:
      - _id:
          $oid: 5a9427648b0beebeb69646cd
        name: Bronn
        email: jerome_flynn@gameofthron.es
        movie_id:
          $oid: 573a139af29313caabcf1573
        text: Quia iure maxime odit voluptas aspernatur esse quis. Quo quas voluptas eum
          laudantium molestiae quid...
        date:
          $date: 2011-10-28T17:48:22Z
        hash:
          low: 846989165
          high: -2147366087
          unsigned: false
      - _id:
          $oid: 5a9427658b0beebeb6977827
        name: Lancel Lannister
        email: eugene_simon@gameofthron.es
        movie_id:
          $oid: 573a13bff29313caabd5f4a4
        text: Blanditiis inventore eaque corporis. Cupiditate porro consequatur
          consectetur ex dolorem quod provid...
        date:
          $date: 1987-05-11T14:29:31Z
        hash:
          low: 1128150038
          high: -2147320044
          unsigned: false
    indexes:
      - v: 2
        key:
          _id: 1
        name: _id_
        description: This is the default index on the _id field, which ensures that each
          document in the collection has a unique identifier. It is used for
          fast lookups by _id.
  - name: movies
    description: The 'movies' collection contains detailed information about movies,
      including plots, genres, runtime, and ratings. It serves as the core
      content repository for the platform, providing users with movie data to
      browse and review. This collection is central to the platform's
      functionality, as it holds the primary content users interact with.
    schema: |-
      interface Movie {
        /**
         * Unique identifier for the movie document.
         */
        _id: ObjectId;
        /**
         * Brief description of the movie's plot.
         */
        plot: string;
        /**
         * List of genres associated with the movie.
         */
        genres: string[];
        /**
         * Duration of the movie in minutes.
         */
        runtime: number;
        /**
         * Title of the movie.
         */
        title: string;
        /**
         * Number of comments on the movie in the mflix system.
         */
        num_mflix_comments: number;
        /**
         * URL to the movie's poster image.
         */
        poster: string;
        /**
         * List of countries where the movie was produced.
         */
        countries: string[];
        /**
         * Detailed description of the movie's plot.
         */
        fullplot: string;
        /**
         * Languages spoken in the movie.
         */
        languages: string[];
        /**
         * Release date of the movie.
         */
        released: Date;
        /**
         * List of directors of the movie.
         */
        directors: string[];
        /**
         * List of writers of the movie.
         */
        writers: string[];
        /**
         * Awards received by the movie.
         */
        awards: {
          /**
           * Number of awards won by the movie.
           */
          wins: number;
          /**
           * Number of award nominations received by the movie.
           */
          nominations: number;
          /**
           * Textual description of the awards.
           */
          text: string;
        };
        /**
         * Last updated timestamp for the movie document.
         */
        lastupdated: string;
        /**
         * Year the movie was released.
         */
        year: number;
        /**
         * IMDb information for the movie.
         */
        imdb: {
          /**
           * IMDb rating of the movie.
           */
          rating: number;
          /**
           * Number of votes the movie received on IMDb.
           */
          votes: number;
          /**
           * IMDb identifier for the movie.
           */
          id: number;
        };
        /**
         * Type of the movie (e.g., movie, series).
         */
        type: string;
        /**
         * Rotten Tomatoes information for the movie.
         */
        tomatoes: {
          /**
           * Viewer ratings on Rotten Tomatoes.
           */
          viewer?: {
            /**
             * Viewer rating score.
             */
            rating: number;
            /**
             * Number of reviews by viewers.
             */
            numReviews: number;
            /**
             * Viewer meter score.
             */
            meter: number;
          };
          /**
           * DVD release date.
           */
          dvd?: Date;
          /**
           * Last updated timestamp for Rotten Tomatoes data.
           */
          lastUpdated?: Date;
          /**
           * Official website for the movie.
           */
          website?: string;
          /**
           * Critic ratings on Rotten Tomatoes.
           */
          critic?: {
            /**
             * Critic rating score.
             */
            rating: number;
            /**
             * Number of reviews by critics.
             */
            numReviews: number;
            /**
             * Critic meter score.
             */
            meter: number;
          };
          /**
           * Box office earnings.
           */
          boxOffice?: string;
          /**
           * Consensus statement from Rotten Tomatoes.
           */
          consensus?: string;
          /**
           * Number of rotten reviews.
           */
          rotten?: number;
          /**
           * Production company.
           */
          production?: string;
          /**
           * Number of fresh reviews.
           */
          fresh?: number;
        };
        /**
         * Hash value for the movie document.
         */
        hash: Long;
        /**
         * MPAA rating of the movie.
         */
        rated?: string;
        /**
         * Metacritic score of the movie.
         */
        metacritic?: number;
        /**
         * List of main cast members in the movie.
         */
        cast: string[];
      }
    examples:
      - _id:
          $oid: 573a13bbf29313caabd526d0
        plot: Van Erp shows us what the Dutch do in their spare time and takes a look at
          the industry behind all t...
        genres:
          - Documentary
        runtime: 90
        title: Pretpark Nederland
        num_mflix_comments: 0
        poster: https://m.media-amazon.com/images/M/MV5BMTUwNjU0ODg3N15BMl5BanBnXkFtZTcwMzg3NjYxNA@@._V1_SY1000_SX67...
        countries:
          - Netherlands
        fullplot: Van Erp displays the mechanics behind the Dutch tourism industry. Key
          figures behind events and dest...
        languages:
          - Dutch
          - Mandarin
        released:
          $date: 2006-10-18T00:00:00Z
        directors:
          - Michiel van Erp
        writers:
          - Renè van 't Erve (scenario)
          - Michiel van Erp (scenario)
        awards:
          wins: 0
          nominations: 1
          text: 1 nomination.
        lastupdated: 2015-02-26 00:48:24.883000000
        year: 2006
        imdb:
          rating: 7.3
          votes: 237
          id: 882800
        type: movie
        tomatoes:
          viewer:
            rating: 2.2
            numReviews: 19
          dvd:
            $date: 2010-06-22T00:00:00Z
          lastUpdated:
            $date: 2014-11-24T14:15:50Z
        hash:
          low: -1866172407
          high: -2147460187
          unsigned: false
      - _id:
          $oid: 573a13caf29313caabd7c4e0
        fullplot: A drama centered on a rising country-music songwriter (Hedlund) who
          sparks with a fallen star (Paltr...
        imdb:
          rating: 6.3
          votes: 14066
          id: 1555064
        year: 2010
        plot: A rising country-music songwriter works with a fallen star to work their
          way fame, causing romantic ...
        genres:
          - Drama
          - Music
        rated: PG-13
        metacritic: 45
        title: Country Strong
        lastupdated: 2015-09-03 00:39:54.710000000
        languages:
          - English
        writers:
          - Shana Feste
        type: movie
        tomatoes:
          website: http://www.countrystrong-movie.com/?hs308=CST6186
          viewer:
            rating: 3.3
            numReviews: 32825
            meter: 53
          dvd:
            $date: 2011-04-12T00:00:00Z
          critic:
            rating: 4.5
            numReviews: 130
            meter: 22
          boxOffice: $20.2M
          consensus: The cast gives it their all, and Paltrow handles her songs with
            aplomb, but Country Strong's cliched...
          rotten: 101
          production: Screen Gems
          lastUpdated:
            $date: 2015-08-17T18:04:40Z
          fresh: 29
        poster: https://m.media-amazon.com/images/M/MV5BMTUxMjQ0NjE3OV5BMl5BanBnXkFtZTcwODIxNDEwNA@@._V1_SY1000_SX67...
        num_mflix_comments: 0
        released:
          $date: 2011-01-07T00:00:00Z
        awards:
          wins: 2
          nominations: 6
          text: Nominated for 1 Oscar. Another 1 win & 6 nominations.
        countries:
          - USA
        cast:
          - Gwyneth Paltrow
          - Tim McGraw
          - Garrett Hedlund
          - ...and 1 more items
        ...: 3 more keys
    indexes:
      - v: 2
        key:
          _id: 1
        name: _id_
        description: This is the default index on the _id field, which ensures that each
          document in the collection has a unique identifier. It is used for
          fast lookups by _id.
      - v: 2
        key:
          _fts: text
          _ftsx: 1
        name: cast_text_fullplot_text_genres_text_title_text
        weights:
          cast: 1
          fullplot: 1
          genres: 1
          title: 1
        default_language: english
        language_override: language
        textIndexVersion: 3
        description: This is a text index on the cast, fullplot, genres, and title
          fields. It allows for efficient text search queries across these
          fields, which is useful for search functionalities where users might
          search for movies by cast members, plot details, genres, or titles.
  - name: sessions
    description: The 'comments' collection stores user comments on movies, including
      the user's name, email, and the movie ID they are commenting on. It
      facilitates user interaction and engagement by allowing users to share
      their thoughts on movies. This collection is linked to both the 'users'
      and 'movies' collections, as it requires user information and movie
      references.
    schema: |-
      interface Session {
        /**
         * Unique identifier for the session document.
         */
        _id: ObjectId;
        /**
         * Identifier for the user associated with this session.
         */
        user_id: string;
        /**
         * JSON Web Token for session authentication.
         */
        jwt: string;
        /**
         * Hash value for additional security or integrity checks.
         */
        hash: Long;
      }
    examples:
      - _id:
          $oid: 5a97f9c91c807bb9c6eb5fb4
        user_id: t3qulfeem@kwiv5.6ur
        jwt: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1MTk5MDkzMjEsIm5iZiI6MTUxOTkwOTMyMSwianRpIjoiNmJlZDA...
        hash:
          low: 875808947
          high: -1976519675
          unsigned: false
    indexes:
      - v: 2
        key:
          _id: 1
        name: _id_
        description: This is the default index on the _id field, which ensures that each
          document in the collection has a unique identifier. It is used for
          fast lookups by _id.
      - v: 2
        key:
          user_id: 1
        name: user_id_1
        unique: true
        description: This is a unique index on the user_id field, ensuring that no two
          documents can have the same user_id. This is useful for managing user
          sessions and ensuring that each user has a unique session.
  - name: theaters
    description: The 'theaters' collection holds information about theater
      locations, including addresses and geographical coordinates. It supports
      features related to finding movie showings in physical locations,
      enhancing the platform's utility for users interested in watching movies
      in theaters. The collection's geo-indexing allows for efficient
      location-based queries.
    schema: >-
      interface Theater {
        /**
         * Unique identifier for the theater document.
         */
        _id: ObjectId;
        /**
         * Unique identifier for the theater.
         */
        theaterId: number;
        /**
         * Location details of the theater, including address and geographical coordinates.
         */
        location: {
          /**
           * Address details of the theater.
           */
          address: {
            /**
             * Street address of the theater.
             */
            street1: string;
            /**
             * City where the theater is located.
             */
            city: string;
            /**
             * State where the theater is located.
             */
            state: string;
            /**
             * Zipcode of the theater's location.
             */
            zipcode: string;
          };
          /**
           * Geographical information of the theater's location.
           */
          geo: {
            /**
             * Type of the geographical data, typically 'Point'.
             */
            type: string;
            /**
             * Coordinates of the theater's location, represented as [longitude, latitude].
             */
            coordinates: [number, number];
          };
        };
        /**
         * Hash value for internal use, possibly for data integrity or versioning.
         */
        hash: Long;
      }
    examples:
      - _id:
          $oid: 59a47287cfa9a3a73e51ec13
        theaterId: 776
        location:
          address:
            street1: 1679 Scenic Hwy N
            city: Snellville
            state: GA
            zipcode: "30078"
          geo:
            type: Point
            coordinates:
              - -84.013058
              - 33.882777
        hash:
          low: 1701361298
          high: -2145791898
          unsigned: false
      - _id:
          $oid: 59a47287cfa9a3a73e51ea22
        theaterId: 2862
        location:
          address:
            street1: 4156-E North Harlem Ave
            city: Norridge
            state: IL
            zipcode: "60706"
          geo:
            type: Point
            coordinates:
              - -87.807425
              - 41.953814
        hash:
          low: 1050492525
          high: -2142047742
          unsigned: false
    indexes:
      - v: 2
        key:
          _id: 1
        name: _id_
        description: This is the default index on the _id field, which ensures that each
          document in the collection has a unique identifier. It is used for
          fast lookups by _id.
      - v: 2
        key:
          location.geo: 2dsphere
        name: geo index
        2dsphereIndexVersion: 3
        description: This is a 2dsphere index on the location.geo field, which allows
          for efficient querying of geospatial data. This is useful for finding
          theaters within a certain geographical area or radius.
